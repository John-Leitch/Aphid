var phoneArea;

@{
    var script = this.'$block'[0].Filename;
    var asmFile = script @io.sibling(script @io.ext('dll'));

    if (asmFile | io.not.file) {
        #'meta/code/compiler';
        #'meta/code/nativeImage';
        csharp.roslyn.enable();
        csharp.optimize();
        csharp.params.GenerateInMemory = false;
        csharp.params.OutputAssembly = asmFile;

        script
        @io.sibling('prefs.txt')
        |> io.lines
        ->(@() $_.Remove(3))
        !?
        ->(@()$_.ToCharArray())
        -&first
        ->(@()({
            d: $_.Key,
            nodes: $_
                -&(@()$_[1])
                ->(@()({
                    d: $_.Key,
                    nodes: $_->last }))}))
        @(x) strOut(@{ %>
            namespace Components.Phone
            {
                using System;
                using System.Collections.Generic;

                public static class PhoneArea
                {
                    public static bool IsValid(string p)
                    {
                        switch (p[0])
                        {
                            <% x for (a) { %>
                                case '<%= a.d %>':
                                    switch (p[1])
                                    {
                                        <% a.nodes for (b) { %>
                                            case '<%= b.d %>':
                                                switch (p[2])
                                                {
                                                    <% b.nodes for (c) { %>
                                                        case '<%= c %>':                    
                                                    <% }; %>
                                                            return true;
                                                        default:
                                                            return false;
                                                }
                                        <% }; %>
                                            default:
                                                return false;
                                    }

                            <% }; %>
                                default:
                                    return false;
                        }

                        return false;
                    }
                }
            }
        <% })
        .ToString()
        @{
            $_ @io.txt(asmFile @io.ext('cs'));
            ret $_;
         }
        |> csharp.compileAsm;

        asmFile | nativeImage.compile;
    }

    load asmFile;
    using Components.Phone;
    phoneArea = { isValid: PhoneArea.IsValid };    
}();
