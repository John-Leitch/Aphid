collision = macro(@(tokenType, expressionType) {
     @(t) t != null &&
        ($(t.GetType())
            AphidToken: t.TokenType == AphidTokenType.tokenType,
            expressionType: true,
            false)
});

ast.is = {
    // Collision workaround

    identifier: collision(Identifier, IdentifierExpression),
    number: collision(Number, NumberExpression),
    string: collision(String, StringExpression),
    text: collision(Text, TextExpression),

    call: @(n) n != null && n.Type == AphidExpressionType.CallExpression,
    arrayAccess: @(n) n != null && n.Type == AphidExpressionType.ArrayAccessExpression,
    array: @(n) n != null && n.Type == AphidExpressionType.ArrayExpression,
    binOp: @(n) n != null && n.Type == AphidExpressionType.BinaryOperatorExpression,
    binOpBody: @(n) n != null && n.Type == AphidExpressionType.BinaryOperatorBodyExpression,
    boolean: @(n) n != null && n.Type == AphidExpressionType.BooleanExpression,
    breakExp: @(n) n != null && n.Type == AphidExpressionType.BreakExpression,
    continueExp: @(n) n != null && n.Type == AphidExpressionType.ContinueExpression,
    doWhile: @(n) n != null && n.Type == AphidExpressionType.DoWhileExpression,
    dynamicMember: @(n) n != null && n.Type == AphidExpressionType.DynamicMemberExpression,
    extendExp: @(n) n != null && n.Type == AphidExpressionType.ExtendExpression,
    forEach: @(n) n != null && n.Type == AphidExpressionType.ForEachExpression,
    forExp: @(n) n != null && n.Type == AphidExpressionType.ForExpression,
    function: @(n) n != null && n.Type == AphidExpressionType.FunctionExpression,
    gatorOpen: @(n) n != null && n.Type == AphidExpressionType.GatorOpenExpression,
    gatorClose: @(n) n != null && n.Type == AphidExpressionType.GatorCloseExpression,
    gatorEmit: @(n) n != null && n.Type == AphidExpressionType.GatorEmitExpression,
    // identifier: @(n) n != null && n.Type == AphidExpressionType.IdentifierExpression,
    ifExp: @(n) n != null && n.Type == AphidExpressionType.IfExpression,
    implicitArg: @(n) n != null && n.Type == AphidExpressionType.ImplicitArgumentExpression,
    implicitArgs: @(n) n != null && n.Type == AphidExpressionType.ImplicitArgumentsExpression,
    loadLibrary: @(n) n != null && n.Type == AphidExpressionType.LoadLibraryExpression,
    loadScript: @(n) n != null && n.Type == AphidExpressionType.LoadScriptExpression,
    lockExp: @(n) n != null && n.Type == AphidExpressionType.LockExpression,
    nullExp: @(n) n != null && n.Type == AphidExpressionType.NullExpression,
    // number: @(n) n != null && n.Type == AphidExpressionType.NumberExpression,
    object: @(n) n != null && n.Type == AphidExpressionType.ObjectExpression,
    partialFunction: @(n) n != null && n.Type == AphidExpressionType.PartialFunctionExpression,
    partialOp: @(n) n != null && n.Type == AphidExpressionType.PartialOperatorExpression,
    pattern: @(n) n != null && n.Type == AphidExpressionType.PatternExpression,
    patternMatching: @(n) n != null && n.Type == AphidExpressionType.PatternMatchingExpression,
    unOp: @(n) n != null && n.Type == AphidExpressionType.UnaryOperatorExpression,
    usingExp: @(n) n != null && n.Type == AphidExpressionType.UsingExpression,
    // string: @(n) n != null && n.Type == AphidExpressionType.StringExpression,
    switchCase: @(n) n != null && n.Type == AphidExpressionType.SwitchCase,
    switchExp: @(n) n != null && n.Type == AphidExpressionType.SwitchExpression,
    ternaryOp: @(n) n != null && n.Type == AphidExpressionType.TernaryOperatorExpression,
    // text: @(n) n != null && n.Type == AphidExpressionType.TextExpression,
    thisExp: @(n) n != null && n.Type == AphidExpressionType.ThisExpression,
    tryExp: @(n) n != null && n.Type == AphidExpressionType.TryExpression,
    whileExp: @(n) n != null && n.Type == AphidExpressionType.WhileExpression,
    aphid: @(n) n != null && n.Type == AphidExpressionType.AphidExpression,

    none: @(t) t.TokenType == AphidTokenType.None,
    additionOp: @(t) t.TokenType == AphidTokenType.AdditionOperator,
    aggregateOp: @(t) t.TokenType == AphidTokenType.AggregateOperator,
    andOp: @(t) t.TokenType == AphidTokenType.AndOperator,
    anyOp: @(t) t.TokenType == AphidTokenType.AnyOperator,
    aphidExpOp: @(t) t.TokenType == AphidTokenType.AphidExpressionOperator,
    assignmentOp: @(t) t.TokenType == AphidTokenType.AssignmentOperator,
    binAndEqualOp: @(t) t.TokenType == AphidTokenType.BinaryAndEqualOperator,
    binAndOp: @(t) t.TokenType == AphidTokenType.BinaryAndOperator,
    binNumber: @(t) t.TokenType == AphidTokenType.BinaryNumber,
    binOrOp: @(t) t.TokenType == AphidTokenType.BinaryOrOperator,
    breakKeyword: @(t) t.TokenType == AphidTokenType.breakKeyword,
    catchKeyword: @(t) t.TokenType == AphidTokenType.catchKeyword,
    colonOp: @(t) t.TokenType == AphidTokenType.ColonOperator,
    comma: @(t) t.TokenType == AphidTokenType.Comma,
    comment: @(t) t.TokenType == AphidTokenType.Comment,
    complementOp: @(t) t.TokenType == AphidTokenType.ComplementOperator,
    compositionOp: @(t) t.TokenType == AphidTokenType.CompositionOperator,
    conditionalOp: @(t) t.TokenType == AphidTokenType.ConditionalOperator,
    continueKeyword: @(t) t.TokenType == AphidTokenType.continueKeyword,
    countOp: @(t) t.TokenType == AphidTokenType.CountOperator,
    customOp000: @(t) t.TokenType == AphidTokenType.CustomOperator000,
    customOp001: @(t) t.TokenType == AphidTokenType.CustomOperator001,
    customOp002: @(t) t.TokenType == AphidTokenType.CustomOperator002,
    customOp003: @(t) t.TokenType == AphidTokenType.CustomOperator003,
    customOp004: @(t) t.TokenType == AphidTokenType.CustomOperator004,
    customOp005: @(t) t.TokenType == AphidTokenType.CustomOperator005,
    customOp006: @(t) t.TokenType == AphidTokenType.CustomOperator006,
    customOp007: @(t) t.TokenType == AphidTokenType.CustomOperator007,
    customOp008: @(t) t.TokenType == AphidTokenType.CustomOperator008,
    customOp009: @(t) t.TokenType == AphidTokenType.CustomOperator009,
    customOp010: @(t) t.TokenType == AphidTokenType.CustomOperator010,
    customOp011: @(t) t.TokenType == AphidTokenType.CustomOperator011,
    customOp012: @(t) t.TokenType == AphidTokenType.CustomOperator012,
    customOp013: @(t) t.TokenType == AphidTokenType.CustomOperator013,
    customOp014: @(t) t.TokenType == AphidTokenType.CustomOperator014,
    customOp015: @(t) t.TokenType == AphidTokenType.CustomOperator015,
    customOp016: @(t) t.TokenType == AphidTokenType.CustomOperator016,
    customOp017: @(t) t.TokenType == AphidTokenType.CustomOperator017,
    customOp018: @(t) t.TokenType == AphidTokenType.CustomOperator018,
    customOp019: @(t) t.TokenType == AphidTokenType.CustomOperator019,
    customOp020: @(t) t.TokenType == AphidTokenType.CustomOperator020,
    customOp021: @(t) t.TokenType == AphidTokenType.CustomOperator021,
    customOp022: @(t) t.TokenType == AphidTokenType.CustomOperator022,
    customOp023: @(t) t.TokenType == AphidTokenType.CustomOperator023,
    customOp024: @(t) t.TokenType == AphidTokenType.CustomOperator024,
    customOp025: @(t) t.TokenType == AphidTokenType.CustomOperator025,
    customOp026: @(t) t.TokenType == AphidTokenType.CustomOperator026,
    customOp027: @(t) t.TokenType == AphidTokenType.CustomOperator027,
    customOp028: @(t) t.TokenType == AphidTokenType.CustomOperator028,
    customOp029: @(t) t.TokenType == AphidTokenType.CustomOperator029,
    customOp030: @(t) t.TokenType == AphidTokenType.CustomOperator030,
    customOp031: @(t) t.TokenType == AphidTokenType.CustomOperator031,
    customOp032: @(t) t.TokenType == AphidTokenType.CustomOperator032,
    customOp033: @(t) t.TokenType == AphidTokenType.CustomOperator033,
    customOp034: @(t) t.TokenType == AphidTokenType.CustomOperator034,
    customOp035: @(t) t.TokenType == AphidTokenType.CustomOperator035,
    customOp036: @(t) t.TokenType == AphidTokenType.CustomOperator036,
    customOp037: @(t) t.TokenType == AphidTokenType.CustomOperator037,
    customOp038: @(t) t.TokenType == AphidTokenType.CustomOperator038,
    customOp039: @(t) t.TokenType == AphidTokenType.CustomOperator039,
    customOp040: @(t) t.TokenType == AphidTokenType.CustomOperator040,
    customOp041: @(t) t.TokenType == AphidTokenType.CustomOperator041,
    customOp042: @(t) t.TokenType == AphidTokenType.CustomOperator042,
    customOp043: @(t) t.TokenType == AphidTokenType.CustomOperator043,
    customOp044: @(t) t.TokenType == AphidTokenType.CustomOperator044,
    customOp045: @(t) t.TokenType == AphidTokenType.CustomOperator045,
    customOp046: @(t) t.TokenType == AphidTokenType.CustomOperator046,
    customOp047: @(t) t.TokenType == AphidTokenType.CustomOperator047,
    customOp048: @(t) t.TokenType == AphidTokenType.CustomOperator048,
    customOp049: @(t) t.TokenType == AphidTokenType.CustomOperator049,
    customOp050: @(t) t.TokenType == AphidTokenType.CustomOperator050,
    customOp051: @(t) t.TokenType == AphidTokenType.CustomOperator051,
    customOp052: @(t) t.TokenType == AphidTokenType.CustomOperator052,
    customOp053: @(t) t.TokenType == AphidTokenType.CustomOperator053,
    customOp054: @(t) t.TokenType == AphidTokenType.CustomOperator054,
    customOp055: @(t) t.TokenType == AphidTokenType.CustomOperator055,
    customOp056: @(t) t.TokenType == AphidTokenType.CustomOperator056,
    customOp057: @(t) t.TokenType == AphidTokenType.CustomOperator057,
    customOp058: @(t) t.TokenType == AphidTokenType.CustomOperator058,
    customOp059: @(t) t.TokenType == AphidTokenType.CustomOperator059,
    customOp060: @(t) t.TokenType == AphidTokenType.CustomOperator060,
    customOp061: @(t) t.TokenType == AphidTokenType.CustomOperator061,
    customOp062: @(t) t.TokenType == AphidTokenType.CustomOperator062,
    customOp063: @(t) t.TokenType == AphidTokenType.CustomOperator063,
    customOp064: @(t) t.TokenType == AphidTokenType.CustomOperator064,
    customOp065: @(t) t.TokenType == AphidTokenType.CustomOperator065,
    customOp066: @(t) t.TokenType == AphidTokenType.CustomOperator066,
    customOp067: @(t) t.TokenType == AphidTokenType.CustomOperator067,
    customOp068: @(t) t.TokenType == AphidTokenType.CustomOperator068,
    customOp069: @(t) t.TokenType == AphidTokenType.CustomOperator069,
    customOp070: @(t) t.TokenType == AphidTokenType.CustomOperator070,
    customOp071: @(t) t.TokenType == AphidTokenType.CustomOperator071,
    customOp072: @(t) t.TokenType == AphidTokenType.CustomOperator072,
    customOp073: @(t) t.TokenType == AphidTokenType.CustomOperator073,
    customOp074: @(t) t.TokenType == AphidTokenType.CustomOperator074,
    customOp075: @(t) t.TokenType == AphidTokenType.CustomOperator075,
    customOp076: @(t) t.TokenType == AphidTokenType.CustomOperator076,
    customOp077: @(t) t.TokenType == AphidTokenType.CustomOperator077,
    customOp078: @(t) t.TokenType == AphidTokenType.CustomOperator078,
    customOp079: @(t) t.TokenType == AphidTokenType.CustomOperator079,
    customOp080: @(t) t.TokenType == AphidTokenType.CustomOperator080,
    customOp081: @(t) t.TokenType == AphidTokenType.CustomOperator081,
    customOp082: @(t) t.TokenType == AphidTokenType.CustomOperator082,
    customOp083: @(t) t.TokenType == AphidTokenType.CustomOperator083,
    customOp084: @(t) t.TokenType == AphidTokenType.CustomOperator084,
    customOp085: @(t) t.TokenType == AphidTokenType.CustomOperator085,
    customOp086: @(t) t.TokenType == AphidTokenType.CustomOperator086,
    customOp087: @(t) t.TokenType == AphidTokenType.CustomOperator087,
    customOp088: @(t) t.TokenType == AphidTokenType.CustomOperator088,
    customOp089: @(t) t.TokenType == AphidTokenType.CustomOperator089,
    customOp090: @(t) t.TokenType == AphidTokenType.CustomOperator090,
    customOp091: @(t) t.TokenType == AphidTokenType.CustomOperator091,
    customOp092: @(t) t.TokenType == AphidTokenType.CustomOperator092,
    customOp093: @(t) t.TokenType == AphidTokenType.CustomOperator093,
    customOp094: @(t) t.TokenType == AphidTokenType.CustomOperator094,
    customOp095: @(t) t.TokenType == AphidTokenType.CustomOperator095,
    customOp096: @(t) t.TokenType == AphidTokenType.CustomOperator096,
    customOp097: @(t) t.TokenType == AphidTokenType.CustomOperator097,
    customOp098: @(t) t.TokenType == AphidTokenType.CustomOperator098,
    customOp099: @(t) t.TokenType == AphidTokenType.CustomOperator099,
    customOp100: @(t) t.TokenType == AphidTokenType.CustomOperator100,
    customOp101: @(t) t.TokenType == AphidTokenType.CustomOperator101,
    customOp102: @(t) t.TokenType == AphidTokenType.CustomOperator102,
    customOp103: @(t) t.TokenType == AphidTokenType.CustomOperator103,
    customOp104: @(t) t.TokenType == AphidTokenType.CustomOperator104,
    customOp105: @(t) t.TokenType == AphidTokenType.CustomOperator105,
    customOp106: @(t) t.TokenType == AphidTokenType.CustomOperator106,
    customOp107: @(t) t.TokenType == AphidTokenType.CustomOperator107,
    customOp108: @(t) t.TokenType == AphidTokenType.CustomOperator108,
    customOp109: @(t) t.TokenType == AphidTokenType.CustomOperator109,
    customOp110: @(t) t.TokenType == AphidTokenType.CustomOperator110,
    customOp111: @(t) t.TokenType == AphidTokenType.CustomOperator111,
    customOp112: @(t) t.TokenType == AphidTokenType.CustomOperator112,
    customOp113: @(t) t.TokenType == AphidTokenType.CustomOperator113,
    customOp114: @(t) t.TokenType == AphidTokenType.CustomOperator114,
    customOp115: @(t) t.TokenType == AphidTokenType.CustomOperator115,
    customOp116: @(t) t.TokenType == AphidTokenType.CustomOperator116,
    customOp117: @(t) t.TokenType == AphidTokenType.CustomOperator117,
    customOp118: @(t) t.TokenType == AphidTokenType.CustomOperator118,
    customOp119: @(t) t.TokenType == AphidTokenType.CustomOperator119,
    customOp120: @(t) t.TokenType == AphidTokenType.CustomOperator120,
    customOp121: @(t) t.TokenType == AphidTokenType.CustomOperator121,
    customOp122: @(t) t.TokenType == AphidTokenType.CustomOperator122,
    customOp123: @(t) t.TokenType == AphidTokenType.CustomOperator123,
    customOp124: @(t) t.TokenType == AphidTokenType.CustomOperator124,
    customOp125: @(t) t.TokenType == AphidTokenType.CustomOperator125,
    customOp126: @(t) t.TokenType == AphidTokenType.CustomOperator126,
    customOp127: @(t) t.TokenType == AphidTokenType.CustomOperator127,
    customOp128: @(t) t.TokenType == AphidTokenType.CustomOperator128,
    customOp129: @(t) t.TokenType == AphidTokenType.CustomOperator129,
    customOp130: @(t) t.TokenType == AphidTokenType.CustomOperator130,
    customOp131: @(t) t.TokenType == AphidTokenType.CustomOperator131,
    customOp132: @(t) t.TokenType == AphidTokenType.CustomOperator132,
    customOp133: @(t) t.TokenType == AphidTokenType.CustomOperator133,
    customOp134: @(t) t.TokenType == AphidTokenType.CustomOperator134,
    customOp135: @(t) t.TokenType == AphidTokenType.CustomOperator135,
    customOp136: @(t) t.TokenType == AphidTokenType.CustomOperator136,
    customOp137: @(t) t.TokenType == AphidTokenType.CustomOperator137,
    customOp138: @(t) t.TokenType == AphidTokenType.CustomOperator138,
    customOp139: @(t) t.TokenType == AphidTokenType.CustomOperator139,
    customOp140: @(t) t.TokenType == AphidTokenType.CustomOperator140,
    customOp141: @(t) t.TokenType == AphidTokenType.CustomOperator141,
    customOp142: @(t) t.TokenType == AphidTokenType.CustomOperator142,
    customOp143: @(t) t.TokenType == AphidTokenType.CustomOperator143,
    customOp144: @(t) t.TokenType == AphidTokenType.CustomOperator144,
    customOp145: @(t) t.TokenType == AphidTokenType.CustomOperator145,
    customOp146: @(t) t.TokenType == AphidTokenType.CustomOperator146,
    customOp147: @(t) t.TokenType == AphidTokenType.CustomOperator147,
    customOp148: @(t) t.TokenType == AphidTokenType.CustomOperator148,
    customOp149: @(t) t.TokenType == AphidTokenType.CustomOperator149,
    customOp150: @(t) t.TokenType == AphidTokenType.CustomOperator150,
    customOp151: @(t) t.TokenType == AphidTokenType.CustomOperator151,
    customOp152: @(t) t.TokenType == AphidTokenType.CustomOperator152,
    customOp153: @(t) t.TokenType == AphidTokenType.CustomOperator153,
    customOp154: @(t) t.TokenType == AphidTokenType.CustomOperator154,
    customOp155: @(t) t.TokenType == AphidTokenType.CustomOperator155,
    customOp156: @(t) t.TokenType == AphidTokenType.CustomOperator156,
    customOp157: @(t) t.TokenType == AphidTokenType.CustomOperator157,
    customOp158: @(t) t.TokenType == AphidTokenType.CustomOperator158,
    customOp159: @(t) t.TokenType == AphidTokenType.CustomOperator159,
    customOp160: @(t) t.TokenType == AphidTokenType.CustomOperator160,
    customOp161: @(t) t.TokenType == AphidTokenType.CustomOperator161,
    customOp162: @(t) t.TokenType == AphidTokenType.CustomOperator162,
    customOp163: @(t) t.TokenType == AphidTokenType.CustomOperator163,
    customOp164: @(t) t.TokenType == AphidTokenType.CustomOperator164,
    customOp165: @(t) t.TokenType == AphidTokenType.CustomOperator165,
    customOp166: @(t) t.TokenType == AphidTokenType.CustomOperator166,
    customOp167: @(t) t.TokenType == AphidTokenType.CustomOperator167,
    customOp168: @(t) t.TokenType == AphidTokenType.CustomOperator168,
    customOp169: @(t) t.TokenType == AphidTokenType.CustomOperator169,
    customOp170: @(t) t.TokenType == AphidTokenType.CustomOperator170,
    customOp171: @(t) t.TokenType == AphidTokenType.CustomOperator171,
    customOp172: @(t) t.TokenType == AphidTokenType.CustomOperator172,
    customOp173: @(t) t.TokenType == AphidTokenType.CustomOperator173,
    customOp174: @(t) t.TokenType == AphidTokenType.CustomOperator174,
    customOp175: @(t) t.TokenType == AphidTokenType.CustomOperator175,
    customOp176: @(t) t.TokenType == AphidTokenType.CustomOperator176,
    customOp177: @(t) t.TokenType == AphidTokenType.CustomOperator177,
    customOp178: @(t) t.TokenType == AphidTokenType.CustomOperator178,
    customOp179: @(t) t.TokenType == AphidTokenType.CustomOperator179,
    customOp180: @(t) t.TokenType == AphidTokenType.CustomOperator180,
    customOp181: @(t) t.TokenType == AphidTokenType.CustomOperator181,
    customOp182: @(t) t.TokenType == AphidTokenType.CustomOperator182,
    customOp183: @(t) t.TokenType == AphidTokenType.CustomOperator183,
    customOp184: @(t) t.TokenType == AphidTokenType.CustomOperator184,
    customOp185: @(t) t.TokenType == AphidTokenType.CustomOperator185,
    customOp186: @(t) t.TokenType == AphidTokenType.CustomOperator186,
    customOp187: @(t) t.TokenType == AphidTokenType.CustomOperator187,
    customOp188: @(t) t.TokenType == AphidTokenType.CustomOperator188,
    customOp189: @(t) t.TokenType == AphidTokenType.CustomOperator189,
    customOp190: @(t) t.TokenType == AphidTokenType.CustomOperator190,
    customOp191: @(t) t.TokenType == AphidTokenType.CustomOperator191,
    customOp192: @(t) t.TokenType == AphidTokenType.CustomOperator192,
    customOp193: @(t) t.TokenType == AphidTokenType.CustomOperator193,
    customOp194: @(t) t.TokenType == AphidTokenType.CustomOperator194,
    customOp195: @(t) t.TokenType == AphidTokenType.CustomOperator195,
    customOp196: @(t) t.TokenType == AphidTokenType.CustomOperator196,
    customOp197: @(t) t.TokenType == AphidTokenType.CustomOperator197,
    customOp198: @(t) t.TokenType == AphidTokenType.CustomOperator198,
    customOp199: @(t) t.TokenType == AphidTokenType.CustomOperator199,
    customOp200: @(t) t.TokenType == AphidTokenType.CustomOperator200,
    customOp201: @(t) t.TokenType == AphidTokenType.CustomOperator201,
    customOp202: @(t) t.TokenType == AphidTokenType.CustomOperator202,
    customOp203: @(t) t.TokenType == AphidTokenType.CustomOperator203,
    customOp204: @(t) t.TokenType == AphidTokenType.CustomOperator204,
    customOp205: @(t) t.TokenType == AphidTokenType.CustomOperator205,
    customOp206: @(t) t.TokenType == AphidTokenType.CustomOperator206,
    customOp207: @(t) t.TokenType == AphidTokenType.CustomOperator207,
    customOp208: @(t) t.TokenType == AphidTokenType.CustomOperator208,
    customOp209: @(t) t.TokenType == AphidTokenType.CustomOperator209,
    customOp210: @(t) t.TokenType == AphidTokenType.CustomOperator210,
    customOp211: @(t) t.TokenType == AphidTokenType.CustomOperator211,
    customOp212: @(t) t.TokenType == AphidTokenType.CustomOperator212,
    customOp213: @(t) t.TokenType == AphidTokenType.CustomOperator213,
    customOp214: @(t) t.TokenType == AphidTokenType.CustomOperator214,
    customOp215: @(t) t.TokenType == AphidTokenType.CustomOperator215,
    customOp216: @(t) t.TokenType == AphidTokenType.CustomOperator216,
    customOp217: @(t) t.TokenType == AphidTokenType.CustomOperator217,
    customOp218: @(t) t.TokenType == AphidTokenType.CustomOperator218,
    customOp219: @(t) t.TokenType == AphidTokenType.CustomOperator219,
    customOp220: @(t) t.TokenType == AphidTokenType.CustomOperator220,
    customOp221: @(t) t.TokenType == AphidTokenType.CustomOperator221,
    customOp222: @(t) t.TokenType == AphidTokenType.CustomOperator222,
    customOp223: @(t) t.TokenType == AphidTokenType.CustomOperator223,
    customOp224: @(t) t.TokenType == AphidTokenType.CustomOperator224,
    customOp225: @(t) t.TokenType == AphidTokenType.CustomOperator225,
    customOp226: @(t) t.TokenType == AphidTokenType.CustomOperator226,
    customOp227: @(t) t.TokenType == AphidTokenType.CustomOperator227,
    customOp228: @(t) t.TokenType == AphidTokenType.CustomOperator228,
    customOp229: @(t) t.TokenType == AphidTokenType.CustomOperator229,
    customOp230: @(t) t.TokenType == AphidTokenType.CustomOperator230,
    customOp231: @(t) t.TokenType == AphidTokenType.CustomOperator231,
    customOp232: @(t) t.TokenType == AphidTokenType.CustomOperator232,
    customOp233: @(t) t.TokenType == AphidTokenType.CustomOperator233,
    customOp234: @(t) t.TokenType == AphidTokenType.CustomOperator234,
    customOp235: @(t) t.TokenType == AphidTokenType.CustomOperator235,
    customOp236: @(t) t.TokenType == AphidTokenType.CustomOperator236,
    customOp237: @(t) t.TokenType == AphidTokenType.CustomOperator237,
    customOp238: @(t) t.TokenType == AphidTokenType.CustomOperator238,
    customOp239: @(t) t.TokenType == AphidTokenType.CustomOperator239,
    customOp240: @(t) t.TokenType == AphidTokenType.CustomOperator240,
    customOp241: @(t) t.TokenType == AphidTokenType.CustomOperator241,
    customOp242: @(t) t.TokenType == AphidTokenType.CustomOperator242,
    customOp243: @(t) t.TokenType == AphidTokenType.CustomOperator243,
    customOp244: @(t) t.TokenType == AphidTokenType.CustomOperator244,
    customOp245: @(t) t.TokenType == AphidTokenType.CustomOperator245,
    customOp246: @(t) t.TokenType == AphidTokenType.CustomOperator246,
    customOp247: @(t) t.TokenType == AphidTokenType.CustomOperator247,
    customOp248: @(t) t.TokenType == AphidTokenType.CustomOperator248,
    customOp249: @(t) t.TokenType == AphidTokenType.CustomOperator249,
    customOp250: @(t) t.TokenType == AphidTokenType.CustomOperator250,
    customOp251: @(t) t.TokenType == AphidTokenType.CustomOperator251,
    customOp252: @(t) t.TokenType == AphidTokenType.CustomOperator252,
    customOp253: @(t) t.TokenType == AphidTokenType.CustomOperator253,
    customOp254: @(t) t.TokenType == AphidTokenType.CustomOperator254,
    customOp255: @(t) t.TokenType == AphidTokenType.CustomOperator255,
    customOp256: @(t) t.TokenType == AphidTokenType.CustomOperator256,
    customOp257: @(t) t.TokenType == AphidTokenType.CustomOperator257,
    customOp258: @(t) t.TokenType == AphidTokenType.CustomOperator258,
    customOp259: @(t) t.TokenType == AphidTokenType.CustomOperator259,
    customOp260: @(t) t.TokenType == AphidTokenType.CustomOperator260,
    customOp261: @(t) t.TokenType == AphidTokenType.CustomOperator261,
    customOp262: @(t) t.TokenType == AphidTokenType.CustomOperator262,
    customOp263: @(t) t.TokenType == AphidTokenType.CustomOperator263,
    customOp264: @(t) t.TokenType == AphidTokenType.CustomOperator264,
    customOp265: @(t) t.TokenType == AphidTokenType.CustomOperator265,
    customOp266: @(t) t.TokenType == AphidTokenType.CustomOperator266,
    customOp267: @(t) t.TokenType == AphidTokenType.CustomOperator267,
    customOp268: @(t) t.TokenType == AphidTokenType.CustomOperator268,
    customOp269: @(t) t.TokenType == AphidTokenType.CustomOperator269,
    customOp270: @(t) t.TokenType == AphidTokenType.CustomOperator270,
    customOp271: @(t) t.TokenType == AphidTokenType.CustomOperator271,
    customOp272: @(t) t.TokenType == AphidTokenType.CustomOperator272,
    customOp273: @(t) t.TokenType == AphidTokenType.CustomOperator273,
    customOp274: @(t) t.TokenType == AphidTokenType.CustomOperator274,
    customOp275: @(t) t.TokenType == AphidTokenType.CustomOperator275,
    customOp276: @(t) t.TokenType == AphidTokenType.CustomOperator276,
    customOp277: @(t) t.TokenType == AphidTokenType.CustomOperator277,
    customOp278: @(t) t.TokenType == AphidTokenType.CustomOperator278,
    customOp279: @(t) t.TokenType == AphidTokenType.CustomOperator279,
    customOp280: @(t) t.TokenType == AphidTokenType.CustomOperator280,
    customOp281: @(t) t.TokenType == AphidTokenType.CustomOperator281,
    customOp282: @(t) t.TokenType == AphidTokenType.CustomOperator282,
    customOp283: @(t) t.TokenType == AphidTokenType.CustomOperator283,
    customOp284: @(t) t.TokenType == AphidTokenType.CustomOperator284,
    customOp285: @(t) t.TokenType == AphidTokenType.CustomOperator285,
    customOp286: @(t) t.TokenType == AphidTokenType.CustomOperator286,
    customOp287: @(t) t.TokenType == AphidTokenType.CustomOperator287,
    customOp288: @(t) t.TokenType == AphidTokenType.CustomOperator288,
    customOp289: @(t) t.TokenType == AphidTokenType.CustomOperator289,
    customOp290: @(t) t.TokenType == AphidTokenType.CustomOperator290,
    customOp291: @(t) t.TokenType == AphidTokenType.CustomOperator291,
    customOp292: @(t) t.TokenType == AphidTokenType.CustomOperator292,
    customOp293: @(t) t.TokenType == AphidTokenType.CustomOperator293,
    customOp294: @(t) t.TokenType == AphidTokenType.CustomOperator294,
    customOp295: @(t) t.TokenType == AphidTokenType.CustomOperator295,
    customOp296: @(t) t.TokenType == AphidTokenType.CustomOperator296,
    customOp297: @(t) t.TokenType == AphidTokenType.CustomOperator297,
    customOp298: @(t) t.TokenType == AphidTokenType.CustomOperator298,
    customOp299: @(t) t.TokenType == AphidTokenType.CustomOperator299,
    customOp300: @(t) t.TokenType == AphidTokenType.CustomOperator300,
    customOp301: @(t) t.TokenType == AphidTokenType.CustomOperator301,
    customOp302: @(t) t.TokenType == AphidTokenType.CustomOperator302,
    customOp303: @(t) t.TokenType == AphidTokenType.CustomOperator303,
    customOp304: @(t) t.TokenType == AphidTokenType.CustomOperator304,
    customOp305: @(t) t.TokenType == AphidTokenType.CustomOperator305,
    customOp306: @(t) t.TokenType == AphidTokenType.CustomOperator306,
    customOp307: @(t) t.TokenType == AphidTokenType.CustomOperator307,
    customOp308: @(t) t.TokenType == AphidTokenType.CustomOperator308,
    customOp309: @(t) t.TokenType == AphidTokenType.CustomOperator309,
    customOp310: @(t) t.TokenType == AphidTokenType.CustomOperator310,
    customOp311: @(t) t.TokenType == AphidTokenType.CustomOperator311,
    customOp312: @(t) t.TokenType == AphidTokenType.CustomOperator312,
    customOp313: @(t) t.TokenType == AphidTokenType.CustomOperator313,
    customOp314: @(t) t.TokenType == AphidTokenType.CustomOperator314,
    customOp315: @(t) t.TokenType == AphidTokenType.CustomOperator315,
    customOp316: @(t) t.TokenType == AphidTokenType.CustomOperator316,
    customOp317: @(t) t.TokenType == AphidTokenType.CustomOperator317,
    customOp318: @(t) t.TokenType == AphidTokenType.CustomOperator318,
    customOp319: @(t) t.TokenType == AphidTokenType.CustomOperator319,
    decrementOp: @(t) t.TokenType == AphidTokenType.DecrementOperator,
    defaultKeyword: @(t) t.TokenType == AphidTokenType.defaultKeyword,
    definedKeyword: @(t) t.TokenType == AphidTokenType.definedKeyword,
    deleteKeyword: @(t) t.TokenType == AphidTokenType.deleteKeyword,
    distinctOp: @(t) t.TokenType == AphidTokenType.DistinctOperator,
    divisionEqualOp: @(t) t.TokenType == AphidTokenType.DivisionEqualOperator,
    divisionOp: @(t) t.TokenType == AphidTokenType.DivisionOperator,
    doKeyword: @(t) t.TokenType == AphidTokenType.doKeyword,
    elseKeyword: @(t) t.TokenType == AphidTokenType.elseKeyword,
    endOfFile: @(t) t.TokenType == AphidTokenType.EndOfFile,
    endOfStmt: @(t) t.TokenType == AphidTokenType.EndOfStatement,
    endsWithOp: @(t) t.TokenType == AphidTokenType.EndsWithOperator,
    equalityOp: @(t) t.TokenType == AphidTokenType.EqualityOperator,
    extendKeyword: @(t) t.TokenType == AphidTokenType.extendKeyword,
    falseKeyword: @(t) t.TokenType == AphidTokenType.falseKeyword,
    finallyKeyword: @(t) t.TokenType == AphidTokenType.finallyKeyword,
    firstOp: @(t) t.TokenType == AphidTokenType.FirstOperator,
    forKeyword: @(t) t.TokenType == AphidTokenType.forKeyword,
    functionOp: @(t) t.TokenType == AphidTokenType.FunctionOperator,
    gatorCloseOp: @(t) t.TokenType == AphidTokenType.GatorCloseOperator,
    gatorEmitOp: @(t) t.TokenType == AphidTokenType.GatorEmitOperator,
    gatorOpenOp: @(t) t.TokenType == AphidTokenType.GatorOpenOperator,
    greaterThanOp: @(t) t.TokenType == AphidTokenType.GreaterThanOperator,
    greaterThanOrEqualOp: @(t) t.TokenType == AphidTokenType.GreaterThanOrEqualOperator,
    groupByOp: @(t) t.TokenType == AphidTokenType.GroupByOperator,
    hexNumber: @(t) t.TokenType == AphidTokenType.HexNumber,
    
    ifKeyword: @(t) t.TokenType == AphidTokenType.ifKeyword,
    implicitArgOp: @(t) t.TokenType == AphidTokenType.ImplicitArgumentOperator,
    implicitArgsOp: @(t) t.TokenType == AphidTokenType.ImplicitArgumentsOperator,
    incrementOp: @(t) t.TokenType == AphidTokenType.IncrementOperator,
    inKeyword: @(t) t.TokenType == AphidTokenType.inKeyword,
    interopOp: @(t) t.TokenType == AphidTokenType.InteropOperator,
    lastOp: @(t) t.TokenType == AphidTokenType.LastOperator,
    leftBrace: @(t) t.TokenType == AphidTokenType.LeftBrace,
    leftBracket: @(t) t.TokenType == AphidTokenType.LeftBracket,
    leftParenthesis: @(t) t.TokenType == AphidTokenType.LeftParenthesis,
    lessThanOp: @(t) t.TokenType == AphidTokenType.LessThanOperator,
    lessThanOrEqualOp: @(t) t.TokenType == AphidTokenType.LessThanOrEqualOperator,
    loadKeyword: @(t) t.TokenType == AphidTokenType.loadKeyword,
    loadLibraryOp: @(t) t.TokenType == AphidTokenType.LoadLibraryOperator,
    loadScriptOp: @(t) t.TokenType == AphidTokenType.LoadScriptOperator,
    lockKeyword: @(t) t.TokenType == AphidTokenType.lockKeyword,
    memberOp: @(t) t.TokenType == AphidTokenType.MemberOperator,
    minusEqualOp: @(t) t.TokenType == AphidTokenType.MinusEqualOperator,
    minusOp: @(t) t.TokenType == AphidTokenType.MinusOperator,
    modulusEqualOp: @(t) t.TokenType == AphidTokenType.ModulusEqualOperator,
    modulusOp: @(t) t.TokenType == AphidTokenType.ModulusOperator,
    multiplicationEqualOp: @(t) t.TokenType == AphidTokenType.MultiplicationEqualOperator,
    multiplicationOp: @(t) t.TokenType == AphidTokenType.MultiplicationOperator,
    newKeyword: @(t) t.TokenType == AphidTokenType.newKeyword,
    notEqualOp: @(t) t.TokenType == AphidTokenType.NotEqualOperator,
    notOp: @(t) t.TokenType == AphidTokenType.NotOperator,
    nullKeyword: @(t) t.TokenType == AphidTokenType.nullKeyword,
    // number: @(t) t.TokenType == AphidTokenType.Number,
    orderByDescendingOp: @(t) t.TokenType == AphidTokenType.OrderByDescendingOperator,
    orderByOp: @(t) t.TokenType == AphidTokenType.OrderByOperator,
    orEqualOp: @(t) t.TokenType == AphidTokenType.OrEqualOperator,
    orOp: @(t) t.TokenType == AphidTokenType.OrOperator,
    patternMatchingOp: @(t) t.TokenType == AphidTokenType.PatternMatchingOperator,
    pipelineOp: @(t) t.TokenType == AphidTokenType.PipelineOperator,
    plusEqualOp: @(t) t.TokenType == AphidTokenType.PlusEqualOperator,
    postfixCountOp: @(t) t.TokenType == AphidTokenType.PostfixCountOperator,
    postfixFirstOp: @(t) t.TokenType == AphidTokenType.PostfixFirstOperator,
    postfixLastOp: @(t) t.TokenType == AphidTokenType.PostfixLastOperator,
    postfixOrderDescendingOp: @(t) t.TokenType == AphidTokenType.PostfixOrderDescendingOperator,
    postfixOrderOp: @(t) t.TokenType == AphidTokenType.PostfixOrderOperator,
    rangeOp: @(t) t.TokenType == AphidTokenType.RangeOperator,
    retKeyword: @(t) t.TokenType == AphidTokenType.retKeyword,
    rightBrace: @(t) t.TokenType == AphidTokenType.RightBrace,
    rightBracket: @(t) t.TokenType == AphidTokenType.RightBracket,
    rightParenthesis: @(t) t.TokenType == AphidTokenType.RightParenthesis,
    selectManyOp: @(t) t.TokenType == AphidTokenType.SelectManyOperator,
    selectOp: @(t) t.TokenType == AphidTokenType.SelectOperator,
    shellText: @(t) t.TokenType == AphidTokenType.ShellText,
    shiftLeft: @(t) t.TokenType == AphidTokenType.ShiftLeft,
    shiftLeftEqualOp: @(t) t.TokenType == AphidTokenType.ShiftLeftEqualOperator,
    shiftRight: @(t) t.TokenType == AphidTokenType.ShiftRight,
    shiftRightEqualOp: @(t) t.TokenType == AphidTokenType.ShiftRightEqualOperator,
    startsWithOp: @(t) t.TokenType == AphidTokenType.StartsWithOperator,
    // string: @(t) t.TokenType == AphidTokenType.String,
    switchKeyword: @(t) t.TokenType == AphidTokenType.switchKeyword,
    // text: @(t) t.TokenType == AphidTokenType.Text,
    thisKeyword: @(t) t.TokenType == AphidTokenType.thisKeyword,
    throwKeyword: @(t) t.TokenType == AphidTokenType.throwKeyword,
    trueKeyword: @(t) t.TokenType == AphidTokenType.trueKeyword,
    tryKeyword: @(t) t.TokenType == AphidTokenType.tryKeyword,
    unknown: @(t) t.TokenType == AphidTokenType.Unknown,
    usingKeyword: @(t) t.TokenType == AphidTokenType.usingKeyword,
    whereOp: @(t) t.TokenType == AphidTokenType.WhereOperator,
    whileKeyword: @(t) t.TokenType == AphidTokenType.whileKeyword,
    whiteSpace: @(t) t.TokenType == AphidTokenType.WhiteSpace,
    xorEqualOp: @(t) t.TokenType == AphidTokenType.XorEqualOperator,
    xorOp: @(t) t.TokenType == AphidTokenType.XorOperator,
};

ast.exp = {
    call: AphidExpressionType.CallExpression,
    arrayAccess: AphidExpressionType.ArrayAccessExpression,
    array: AphidExpressionType.ArrayExpression,
    binOp: AphidExpressionType.BinaryOperatorExpression,
    binOpBody: AphidExpressionType.BinaryOperatorBodyExpression,
    boolean: AphidExpressionType.BooleanExpression,
    breakExp: AphidExpressionType.BreakExpression,
    continueExp: AphidExpressionType.ContinueExpression,
    doWhile: AphidExpressionType.DoWhileExpression,
    dynamicMember: AphidExpressionType.DynamicMemberExpression,
    extendExp: AphidExpressionType.ExtendExpression,
    forEach: AphidExpressionType.ForEachExpression,
    forExp: AphidExpressionType.ForExpression,
    function: AphidExpressionType.FunctionExpression,
    gatorOpen: AphidExpressionType.GatorOpenExpression,
    gatorClose: AphidExpressionType.GatorCloseExpression,
    gatorEmit: AphidExpressionType.GatorEmitExpression,
    identifier: AphidExpressionType.IdentifierExpression,
    ifExp: AphidExpressionType.IfExpression,
    implicitArg: AphidExpressionType.ImplicitArgumentExpression,
    implicitArgs: AphidExpressionType.ImplicitArgumentsExpression,
    loadLibrary: AphidExpressionType.LoadLibraryExpression,
    loadScript: AphidExpressionType.LoadScriptExpression,
    lockExp: AphidExpressionType.LockExpression,
    nullExp: AphidExpressionType.NullExpression,
    number: AphidExpressionType.NumberExpression,
    object: AphidExpressionType.ObjectExpression,
    partialFunction: AphidExpressionType.PartialFunctionExpression,
    partialOp: AphidExpressionType.PartialOperatorExpression,
    pattern: AphidExpressionType.PatternExpression,
    patternMatching: AphidExpressionType.PatternMatchingExpression,
    unOp: AphidExpressionType.UnaryOperatorExpression,
    usingExp: AphidExpressionType.UsingExpression,
    string: AphidExpressionType.StringExpression,
    switchCase: AphidExpressionType.SwitchCase,
    switchExp: AphidExpressionType.SwitchExpression,
    ternaryOp: AphidExpressionType.TernaryOperatorExpression,
    text: AphidExpressionType.TextExpression,
    thisExp: AphidExpressionType.ThisExpression,
    tryExp: AphidExpressionType.TryExpression,
    whileExp: AphidExpressionType.WhileExpression,
};

ast.token = {
    none: AphidTokenType.None,
    additionOp: AphidTokenType.AdditionOperator,
    aggregateOp: AphidTokenType.AggregateOperator,
    andOp: AphidTokenType.AndOperator,
    anyOp: AphidTokenType.AnyOperator,
    aphidExpOp: AphidTokenType.AphidExpressionOperator,
    assignmentOp: AphidTokenType.AssignmentOperator,
    binAndEqualOp: AphidTokenType.BinaryAndEqualOperator,
    binAndOp: AphidTokenType.BinaryAndOperator,
    binNumber: AphidTokenType.BinaryNumber,
    binOrOp: AphidTokenType.BinaryOrOperator,
    breakKeyword: AphidTokenType.breakKeyword,
    catchKeyword: AphidTokenType.catchKeyword,
    colonOp: AphidTokenType.ColonOperator,
    comma: AphidTokenType.Comma,
    comment: AphidTokenType.Comment,
    complementOp: AphidTokenType.ComplementOperator,
    compositionOp: AphidTokenType.CompositionOperator,
    conditionalOp: AphidTokenType.ConditionalOperator,
    continueKeyword: AphidTokenType.continueKeyword,
    countOp: AphidTokenType.CountOperator,
    customOp000: AphidTokenType.CustomOperator000,
    customOp001: AphidTokenType.CustomOperator001,
    customOp002: AphidTokenType.CustomOperator002,
    customOp003: AphidTokenType.CustomOperator003,
    customOp004: AphidTokenType.CustomOperator004,
    customOp005: AphidTokenType.CustomOperator005,
    customOp006: AphidTokenType.CustomOperator006,
    customOp007: AphidTokenType.CustomOperator007,
    customOp008: AphidTokenType.CustomOperator008,
    customOp009: AphidTokenType.CustomOperator009,
    customOp010: AphidTokenType.CustomOperator010,
    customOp011: AphidTokenType.CustomOperator011,
    customOp012: AphidTokenType.CustomOperator012,
    customOp013: AphidTokenType.CustomOperator013,
    customOp014: AphidTokenType.CustomOperator014,
    customOp015: AphidTokenType.CustomOperator015,
    customOp016: AphidTokenType.CustomOperator016,
    customOp017: AphidTokenType.CustomOperator017,
    customOp018: AphidTokenType.CustomOperator018,
    customOp019: AphidTokenType.CustomOperator019,
    customOp020: AphidTokenType.CustomOperator020,
    customOp021: AphidTokenType.CustomOperator021,
    customOp022: AphidTokenType.CustomOperator022,
    customOp023: AphidTokenType.CustomOperator023,
    customOp024: AphidTokenType.CustomOperator024,
    customOp025: AphidTokenType.CustomOperator025,
    customOp026: AphidTokenType.CustomOperator026,
    customOp027: AphidTokenType.CustomOperator027,
    customOp028: AphidTokenType.CustomOperator028,
    customOp029: AphidTokenType.CustomOperator029,
    customOp030: AphidTokenType.CustomOperator030,
    customOp031: AphidTokenType.CustomOperator031,
    customOp032: AphidTokenType.CustomOperator032,
    customOp033: AphidTokenType.CustomOperator033,
    customOp034: AphidTokenType.CustomOperator034,
    customOp035: AphidTokenType.CustomOperator035,
    customOp036: AphidTokenType.CustomOperator036,
    customOp037: AphidTokenType.CustomOperator037,
    customOp038: AphidTokenType.CustomOperator038,
    customOp039: AphidTokenType.CustomOperator039,
    customOp040: AphidTokenType.CustomOperator040,
    customOp041: AphidTokenType.CustomOperator041,
    customOp042: AphidTokenType.CustomOperator042,
    customOp043: AphidTokenType.CustomOperator043,
    customOp044: AphidTokenType.CustomOperator044,
    customOp045: AphidTokenType.CustomOperator045,
    customOp046: AphidTokenType.CustomOperator046,
    customOp047: AphidTokenType.CustomOperator047,
    customOp048: AphidTokenType.CustomOperator048,
    customOp049: AphidTokenType.CustomOperator049,
    customOp050: AphidTokenType.CustomOperator050,
    customOp051: AphidTokenType.CustomOperator051,
    customOp052: AphidTokenType.CustomOperator052,
    customOp053: AphidTokenType.CustomOperator053,
    customOp054: AphidTokenType.CustomOperator054,
    customOp055: AphidTokenType.CustomOperator055,
    customOp056: AphidTokenType.CustomOperator056,
    customOp057: AphidTokenType.CustomOperator057,
    customOp058: AphidTokenType.CustomOperator058,
    customOp059: AphidTokenType.CustomOperator059,
    customOp060: AphidTokenType.CustomOperator060,
    customOp061: AphidTokenType.CustomOperator061,
    customOp062: AphidTokenType.CustomOperator062,
    customOp063: AphidTokenType.CustomOperator063,
    customOp064: AphidTokenType.CustomOperator064,
    customOp065: AphidTokenType.CustomOperator065,
    customOp066: AphidTokenType.CustomOperator066,
    customOp067: AphidTokenType.CustomOperator067,
    customOp068: AphidTokenType.CustomOperator068,
    customOp069: AphidTokenType.CustomOperator069,
    customOp070: AphidTokenType.CustomOperator070,
    customOp071: AphidTokenType.CustomOperator071,
    customOp072: AphidTokenType.CustomOperator072,
    customOp073: AphidTokenType.CustomOperator073,
    customOp074: AphidTokenType.CustomOperator074,
    customOp075: AphidTokenType.CustomOperator075,
    customOp076: AphidTokenType.CustomOperator076,
    customOp077: AphidTokenType.CustomOperator077,
    customOp078: AphidTokenType.CustomOperator078,
    customOp079: AphidTokenType.CustomOperator079,
    customOp080: AphidTokenType.CustomOperator080,
    customOp081: AphidTokenType.CustomOperator081,
    customOp082: AphidTokenType.CustomOperator082,
    customOp083: AphidTokenType.CustomOperator083,
    customOp084: AphidTokenType.CustomOperator084,
    customOp085: AphidTokenType.CustomOperator085,
    customOp086: AphidTokenType.CustomOperator086,
    customOp087: AphidTokenType.CustomOperator087,
    customOp088: AphidTokenType.CustomOperator088,
    customOp089: AphidTokenType.CustomOperator089,
    customOp090: AphidTokenType.CustomOperator090,
    customOp091: AphidTokenType.CustomOperator091,
    customOp092: AphidTokenType.CustomOperator092,
    customOp093: AphidTokenType.CustomOperator093,
    customOp094: AphidTokenType.CustomOperator094,
    customOp095: AphidTokenType.CustomOperator095,
    customOp096: AphidTokenType.CustomOperator096,
    customOp097: AphidTokenType.CustomOperator097,
    customOp098: AphidTokenType.CustomOperator098,
    customOp099: AphidTokenType.CustomOperator099,
    customOp100: AphidTokenType.CustomOperator100,
    customOp101: AphidTokenType.CustomOperator101,
    customOp102: AphidTokenType.CustomOperator102,
    customOp103: AphidTokenType.CustomOperator103,
    customOp104: AphidTokenType.CustomOperator104,
    customOp105: AphidTokenType.CustomOperator105,
    customOp106: AphidTokenType.CustomOperator106,
    customOp107: AphidTokenType.CustomOperator107,
    customOp108: AphidTokenType.CustomOperator108,
    customOp109: AphidTokenType.CustomOperator109,
    customOp110: AphidTokenType.CustomOperator110,
    customOp111: AphidTokenType.CustomOperator111,
    customOp112: AphidTokenType.CustomOperator112,
    customOp113: AphidTokenType.CustomOperator113,
    customOp114: AphidTokenType.CustomOperator114,
    customOp115: AphidTokenType.CustomOperator115,
    customOp116: AphidTokenType.CustomOperator116,
    customOp117: AphidTokenType.CustomOperator117,
    customOp118: AphidTokenType.CustomOperator118,
    customOp119: AphidTokenType.CustomOperator119,
    customOp120: AphidTokenType.CustomOperator120,
    customOp121: AphidTokenType.CustomOperator121,
    customOp122: AphidTokenType.CustomOperator122,
    customOp123: AphidTokenType.CustomOperator123,
    customOp124: AphidTokenType.CustomOperator124,
    customOp125: AphidTokenType.CustomOperator125,
    customOp126: AphidTokenType.CustomOperator126,
    customOp127: AphidTokenType.CustomOperator127,
    customOp128: AphidTokenType.CustomOperator128,
    customOp129: AphidTokenType.CustomOperator129,
    customOp130: AphidTokenType.CustomOperator130,
    customOp131: AphidTokenType.CustomOperator131,
    customOp132: AphidTokenType.CustomOperator132,
    customOp133: AphidTokenType.CustomOperator133,
    customOp134: AphidTokenType.CustomOperator134,
    customOp135: AphidTokenType.CustomOperator135,
    customOp136: AphidTokenType.CustomOperator136,
    customOp137: AphidTokenType.CustomOperator137,
    customOp138: AphidTokenType.CustomOperator138,
    customOp139: AphidTokenType.CustomOperator139,
    customOp140: AphidTokenType.CustomOperator140,
    customOp141: AphidTokenType.CustomOperator141,
    customOp142: AphidTokenType.CustomOperator142,
    customOp143: AphidTokenType.CustomOperator143,
    customOp144: AphidTokenType.CustomOperator144,
    customOp145: AphidTokenType.CustomOperator145,
    customOp146: AphidTokenType.CustomOperator146,
    customOp147: AphidTokenType.CustomOperator147,
    customOp148: AphidTokenType.CustomOperator148,
    customOp149: AphidTokenType.CustomOperator149,
    customOp150: AphidTokenType.CustomOperator150,
    customOp151: AphidTokenType.CustomOperator151,
    customOp152: AphidTokenType.CustomOperator152,
    customOp153: AphidTokenType.CustomOperator153,
    customOp154: AphidTokenType.CustomOperator154,
    customOp155: AphidTokenType.CustomOperator155,
    customOp156: AphidTokenType.CustomOperator156,
    customOp157: AphidTokenType.CustomOperator157,
    customOp158: AphidTokenType.CustomOperator158,
    customOp159: AphidTokenType.CustomOperator159,
    customOp160: AphidTokenType.CustomOperator160,
    customOp161: AphidTokenType.CustomOperator161,
    customOp162: AphidTokenType.CustomOperator162,
    customOp163: AphidTokenType.CustomOperator163,
    customOp164: AphidTokenType.CustomOperator164,
    customOp165: AphidTokenType.CustomOperator165,
    customOp166: AphidTokenType.CustomOperator166,
    customOp167: AphidTokenType.CustomOperator167,
    customOp168: AphidTokenType.CustomOperator168,
    customOp169: AphidTokenType.CustomOperator169,
    customOp170: AphidTokenType.CustomOperator170,
    customOp171: AphidTokenType.CustomOperator171,
    customOp172: AphidTokenType.CustomOperator172,
    customOp173: AphidTokenType.CustomOperator173,
    customOp174: AphidTokenType.CustomOperator174,
    customOp175: AphidTokenType.CustomOperator175,
    customOp176: AphidTokenType.CustomOperator176,
    customOp177: AphidTokenType.CustomOperator177,
    customOp178: AphidTokenType.CustomOperator178,
    customOp179: AphidTokenType.CustomOperator179,
    customOp180: AphidTokenType.CustomOperator180,
    customOp181: AphidTokenType.CustomOperator181,
    customOp182: AphidTokenType.CustomOperator182,
    customOp183: AphidTokenType.CustomOperator183,
    customOp184: AphidTokenType.CustomOperator184,
    customOp185: AphidTokenType.CustomOperator185,
    customOp186: AphidTokenType.CustomOperator186,
    customOp187: AphidTokenType.CustomOperator187,
    customOp188: AphidTokenType.CustomOperator188,
    customOp189: AphidTokenType.CustomOperator189,
    customOp190: AphidTokenType.CustomOperator190,
    customOp191: AphidTokenType.CustomOperator191,
    customOp192: AphidTokenType.CustomOperator192,
    customOp193: AphidTokenType.CustomOperator193,
    customOp194: AphidTokenType.CustomOperator194,
    customOp195: AphidTokenType.CustomOperator195,
    customOp196: AphidTokenType.CustomOperator196,
    customOp197: AphidTokenType.CustomOperator197,
    customOp198: AphidTokenType.CustomOperator198,
    customOp199: AphidTokenType.CustomOperator199,
    customOp200: AphidTokenType.CustomOperator200,
    customOp201: AphidTokenType.CustomOperator201,
    customOp202: AphidTokenType.CustomOperator202,
    customOp203: AphidTokenType.CustomOperator203,
    customOp204: AphidTokenType.CustomOperator204,
    customOp205: AphidTokenType.CustomOperator205,
    customOp206: AphidTokenType.CustomOperator206,
    customOp207: AphidTokenType.CustomOperator207,
    customOp208: AphidTokenType.CustomOperator208,
    customOp209: AphidTokenType.CustomOperator209,
    customOp210: AphidTokenType.CustomOperator210,
    customOp211: AphidTokenType.CustomOperator211,
    customOp212: AphidTokenType.CustomOperator212,
    customOp213: AphidTokenType.CustomOperator213,
    customOp214: AphidTokenType.CustomOperator214,
    customOp215: AphidTokenType.CustomOperator215,
    customOp216: AphidTokenType.CustomOperator216,
    customOp217: AphidTokenType.CustomOperator217,
    customOp218: AphidTokenType.CustomOperator218,
    customOp219: AphidTokenType.CustomOperator219,
    customOp220: AphidTokenType.CustomOperator220,
    customOp221: AphidTokenType.CustomOperator221,
    customOp222: AphidTokenType.CustomOperator222,
    customOp223: AphidTokenType.CustomOperator223,
    customOp224: AphidTokenType.CustomOperator224,
    customOp225: AphidTokenType.CustomOperator225,
    customOp226: AphidTokenType.CustomOperator226,
    customOp227: AphidTokenType.CustomOperator227,
    customOp228: AphidTokenType.CustomOperator228,
    customOp229: AphidTokenType.CustomOperator229,
    customOp230: AphidTokenType.CustomOperator230,
    customOp231: AphidTokenType.CustomOperator231,
    customOp232: AphidTokenType.CustomOperator232,
    customOp233: AphidTokenType.CustomOperator233,
    customOp234: AphidTokenType.CustomOperator234,
    customOp235: AphidTokenType.CustomOperator235,
    customOp236: AphidTokenType.CustomOperator236,
    customOp237: AphidTokenType.CustomOperator237,
    customOp238: AphidTokenType.CustomOperator238,
    customOp239: AphidTokenType.CustomOperator239,
    customOp240: AphidTokenType.CustomOperator240,
    customOp241: AphidTokenType.CustomOperator241,
    customOp242: AphidTokenType.CustomOperator242,
    customOp243: AphidTokenType.CustomOperator243,
    customOp244: AphidTokenType.CustomOperator244,
    customOp245: AphidTokenType.CustomOperator245,
    customOp246: AphidTokenType.CustomOperator246,
    customOp247: AphidTokenType.CustomOperator247,
    customOp248: AphidTokenType.CustomOperator248,
    customOp249: AphidTokenType.CustomOperator249,
    customOp250: AphidTokenType.CustomOperator250,
    customOp251: AphidTokenType.CustomOperator251,
    customOp252: AphidTokenType.CustomOperator252,
    customOp253: AphidTokenType.CustomOperator253,
    customOp254: AphidTokenType.CustomOperator254,
    customOp255: AphidTokenType.CustomOperator255,
    customOp256: AphidTokenType.CustomOperator256,
    customOp257: AphidTokenType.CustomOperator257,
    customOp258: AphidTokenType.CustomOperator258,
    customOp259: AphidTokenType.CustomOperator259,
    customOp260: AphidTokenType.CustomOperator260,
    customOp261: AphidTokenType.CustomOperator261,
    customOp262: AphidTokenType.CustomOperator262,
    customOp263: AphidTokenType.CustomOperator263,
    customOp264: AphidTokenType.CustomOperator264,
    customOp265: AphidTokenType.CustomOperator265,
    customOp266: AphidTokenType.CustomOperator266,
    customOp267: AphidTokenType.CustomOperator267,
    customOp268: AphidTokenType.CustomOperator268,
    customOp269: AphidTokenType.CustomOperator269,
    customOp270: AphidTokenType.CustomOperator270,
    customOp271: AphidTokenType.CustomOperator271,
    customOp272: AphidTokenType.CustomOperator272,
    customOp273: AphidTokenType.CustomOperator273,
    customOp274: AphidTokenType.CustomOperator274,
    customOp275: AphidTokenType.CustomOperator275,
    customOp276: AphidTokenType.CustomOperator276,
    customOp277: AphidTokenType.CustomOperator277,
    customOp278: AphidTokenType.CustomOperator278,
    customOp279: AphidTokenType.CustomOperator279,
    customOp280: AphidTokenType.CustomOperator280,
    customOp281: AphidTokenType.CustomOperator281,
    customOp282: AphidTokenType.CustomOperator282,
    customOp283: AphidTokenType.CustomOperator283,
    customOp284: AphidTokenType.CustomOperator284,
    customOp285: AphidTokenType.CustomOperator285,
    customOp286: AphidTokenType.CustomOperator286,
    customOp287: AphidTokenType.CustomOperator287,
    customOp288: AphidTokenType.CustomOperator288,
    customOp289: AphidTokenType.CustomOperator289,
    customOp290: AphidTokenType.CustomOperator290,
    customOp291: AphidTokenType.CustomOperator291,
    customOp292: AphidTokenType.CustomOperator292,
    customOp293: AphidTokenType.CustomOperator293,
    customOp294: AphidTokenType.CustomOperator294,
    customOp295: AphidTokenType.CustomOperator295,
    customOp296: AphidTokenType.CustomOperator296,
    customOp297: AphidTokenType.CustomOperator297,
    customOp298: AphidTokenType.CustomOperator298,
    customOp299: AphidTokenType.CustomOperator299,
    customOp300: AphidTokenType.CustomOperator300,
    customOp301: AphidTokenType.CustomOperator301,
    customOp302: AphidTokenType.CustomOperator302,
    customOp303: AphidTokenType.CustomOperator303,
    customOp304: AphidTokenType.CustomOperator304,
    customOp305: AphidTokenType.CustomOperator305,
    customOp306: AphidTokenType.CustomOperator306,
    customOp307: AphidTokenType.CustomOperator307,
    customOp308: AphidTokenType.CustomOperator308,
    customOp309: AphidTokenType.CustomOperator309,
    customOp310: AphidTokenType.CustomOperator310,
    customOp311: AphidTokenType.CustomOperator311,
    customOp312: AphidTokenType.CustomOperator312,
    customOp313: AphidTokenType.CustomOperator313,
    customOp314: AphidTokenType.CustomOperator314,
    customOp315: AphidTokenType.CustomOperator315,
    customOp316: AphidTokenType.CustomOperator316,
    customOp317: AphidTokenType.CustomOperator317,
    customOp318: AphidTokenType.CustomOperator318,
    customOp319: AphidTokenType.CustomOperator319,
    decrementOp: AphidTokenType.DecrementOperator,
    defaultKeyword: AphidTokenType.defaultKeyword,
    definedKeyword: AphidTokenType.definedKeyword,
    deleteKeyword: AphidTokenType.deleteKeyword,
    distinctOp: AphidTokenType.DistinctOperator,
    divisionEqualOp: AphidTokenType.DivisionEqualOperator,
    divisionOp: AphidTokenType.DivisionOperator,
    doKeyword: AphidTokenType.doKeyword,
    elseKeyword: AphidTokenType.elseKeyword,
    endOfFile: AphidTokenType.EndOfFile,
    endOfStmt: AphidTokenType.EndOfStatement,
    endsWithOp: AphidTokenType.EndsWithOperator,
    equalityOp: AphidTokenType.EqualityOperator,
    extendKeyword: AphidTokenType.extendKeyword,
    falseKeyword: AphidTokenType.falseKeyword,
    finallyKeyword: AphidTokenType.finallyKeyword,
    firstOp: AphidTokenType.FirstOperator,
    forKeyword: AphidTokenType.forKeyword,
    functionOp: AphidTokenType.FunctionOperator,
    gatorCloseOp: AphidTokenType.GatorCloseOperator,
    gatorEmitOp: AphidTokenType.GatorEmitOperator,
    gatorOpenOp: AphidTokenType.GatorOpenOperator,
    greaterThanOp: AphidTokenType.GreaterThanOperator,
    greaterThanOrEqualOp: AphidTokenType.GreaterThanOrEqualOperator,
    groupByOp: AphidTokenType.GroupByOperator,
    hexNumber: AphidTokenType.HexNumber,
    identifier: AphidTokenType.Identifier,
    ifKeyword: AphidTokenType.ifKeyword,
    implicitArgOp: AphidTokenType.ImplicitArgumentOperator,
    implicitArgsOp: AphidTokenType.ImplicitArgumentsOperator,
    incrementOp: AphidTokenType.IncrementOperator,
    inKeyword: AphidTokenType.inKeyword,
    interopOp: AphidTokenType.InteropOperator,
    lastOp: AphidTokenType.LastOperator,
    leftBrace: AphidTokenType.LeftBrace,
    leftBracket: AphidTokenType.LeftBracket,
    leftParenthesis: AphidTokenType.LeftParenthesis,
    lessThanOp: AphidTokenType.LessThanOperator,
    lessThanOrEqualOp: AphidTokenType.LessThanOrEqualOperator,
    loadKeyword: AphidTokenType.loadKeyword,
    loadLibraryOp: AphidTokenType.LoadLibraryOperator,
    loadScriptOp: AphidTokenType.LoadScriptOperator,
    lockKeyword: AphidTokenType.lockKeyword,
    memberOp: AphidTokenType.MemberOperator,
    minusEqualOp: AphidTokenType.MinusEqualOperator,
    minusOp: AphidTokenType.MinusOperator,
    modulusEqualOp: AphidTokenType.ModulusEqualOperator,
    modulusOp: AphidTokenType.ModulusOperator,
    multiplicationEqualOp: AphidTokenType.MultiplicationEqualOperator,
    multiplicationOp: AphidTokenType.MultiplicationOperator,
    newKeyword: AphidTokenType.newKeyword,
    notEqualOp: AphidTokenType.NotEqualOperator,
    notOp: AphidTokenType.NotOperator,
    nullKeyword: AphidTokenType.nullKeyword,
    number: AphidTokenType.Number,
    orderByDescendingOp: AphidTokenType.OrderByDescendingOperator,
    orderByOp: AphidTokenType.OrderByOperator,
    orEqualOp: AphidTokenType.OrEqualOperator,
    orOp: AphidTokenType.OrOperator,
    patternMatchingOp: AphidTokenType.PatternMatchingOperator,
    pipelineOp: AphidTokenType.PipelineOperator,
    plusEqualOp: AphidTokenType.PlusEqualOperator,
    postfixCountOp: AphidTokenType.PostfixCountOperator,
    postfixFirstOp: AphidTokenType.PostfixFirstOperator,
    postfixLastOp: AphidTokenType.PostfixLastOperator,
    postfixOrderDescendingOp: AphidTokenType.PostfixOrderDescendingOperator,
    postfixOrderOp: AphidTokenType.PostfixOrderOperator,
    rangeOp: AphidTokenType.RangeOperator,
    retKeyword: AphidTokenType.retKeyword,
    rightBrace: AphidTokenType.RightBrace,
    rightBracket: AphidTokenType.RightBracket,
    rightParenthesis: AphidTokenType.RightParenthesis,
    selectManyOp: AphidTokenType.SelectManyOperator,
    selectOp: AphidTokenType.SelectOperator,
    shellText: AphidTokenType.ShellText,
    shiftLeft: AphidTokenType.ShiftLeft,
    shiftLeftEqualOp: AphidTokenType.ShiftLeftEqualOperator,
    shiftRight: AphidTokenType.ShiftRight,
    shiftRightEqualOp: AphidTokenType.ShiftRightEqualOperator,
    startsWithOp: AphidTokenType.StartsWithOperator,
    string: AphidTokenType.String,
    switchKeyword: AphidTokenType.switchKeyword,
    text: AphidTokenType.Text,
    thisKeyword: AphidTokenType.thisKeyword,
    throwKeyword: AphidTokenType.throwKeyword,
    trueKeyword: AphidTokenType.trueKeyword,
    tryKeyword: AphidTokenType.tryKeyword,
    unknown: AphidTokenType.Unknown,
    usingKeyword: AphidTokenType.usingKeyword,
    whereOp: AphidTokenType.WhereOperator,
    whileKeyword: AphidTokenType.whileKeyword,
    whiteSpace: AphidTokenType.WhiteSpace,
    xorEqualOp: AphidTokenType.XorEqualOperator,
    xorOp: AphidTokenType.XorOperator
};