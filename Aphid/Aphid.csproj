<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' And $(Configuration.Contains('32')) ">x86</Platform>
    <Platform Condition=" '$(Platform)' == '' And $(Configuration.Contains('64')) ">x64</Platform>
    <Platform Condition=" '$(Platform)' == '' And !$(Configuration.Contains('32')) And !$(Configuration.Contains('64')) ">AnyCPU</Platform>
    <ProjectGuid>{EFDE894B-FA3D-4202-9A08-C9F69C0B0799}</ProjectGuid>
    <OutputType>Exe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Aphid</RootNamespace>
    <!-- <AssemblyName>Aphid</AssemblyName> -->
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ErrorReport>prompt</ErrorReport>
    <LangVersion>latest</LangVersion>
    <ApplicationIcon>a.ico</ApplicationIcon>
    <AutoGenerateBindingRedirects>false</AutoGenerateBindingRedirects>
  </PropertyGroup>
  <Choose>
    <When Condition="$(Configuration.EndsWith('32'))">
      <PropertyGroup>
        <PlatformTarget>x86</PlatformTarget>
        <Bitness>32</Bitness>
        <BitnessDirective>X86</BitnessDirective>
      </PropertyGroup>
    </When>
    <When Condition="$(Configuration.EndsWith('64'))">
      <PropertyGroup>
        <PlatformTarget>x64</PlatformTarget>
        <Bitness>64</Bitness>
        <BitnessDirective>AMD64</BitnessDirective>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <PlatformTarget>AnyCPU</PlatformTarget>
        <Bitness>
        </Bitness>
        <BitnessDirective>ANY_CPU</BitnessDirective>
      </PropertyGroup>
    </Otherwise>
  </Choose>
  <Choose>
    <!--                                -->
    <!-- Aphid Script Debug             -->
    <!--                                -->
    <When Condition="$(Configuration.StartsWith('AphidDebug'))">
      <PropertyGroup>
        <AphidDbgDirective>;APHID_DEBUGGING_ENABLED</AphidDbgDirective>
        <IsAphidDbg>.ScriptDebugger</IsAphidDbg>
      </PropertyGroup>
    </When>
    <!--                                -->
    <!-- Aphid Time Travel Script Debug             -->
    <!--                                -->
    <When Condition="$(Configuration.StartsWith('TimeTravel'))">
      <PropertyGroup>
        <AphidDbgDirective>;APHID_DEBUGGING_ENABLED;EXPRESSION_HISTORY</AphidDbgDirective>
        <IsAphidDbg>.ScriptDebugger.TimeTravel</IsAphidDbg>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <AphidDbgDirective>
        </AphidDbgDirective>
        <IsAphidDbg>
        </IsAphidDbg>
      </PropertyGroup>
    </Otherwise>
  </Choose>
  <Choose>
    <When Condition="$([System.Text.RegularExpressions.Regex]::IsMatch($(Configuration), `^Debug(32|64)?$`))">
      <PropertyGroup>
        <DebugType>full</DebugType>
        <Optimize>false</Optimize>
        <IsDebug>.Debug</IsDebug>        
        <DefineConstants>$(DefineConstants);TRACE;DEBUG;$(BitnessDirective)</DefineConstants>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <DebugType>pdbonly</DebugType>
        <Optimize>true</Optimize>
        <IsDebug>
        </IsDebug>        
        <DefineConstants>$(DefineConstants);RELEASE;$(BitnessDirective)</DefineConstants>
      </PropertyGroup>
    </Otherwise>
  </Choose>
  <!-- <PropertyGroup> -->
  <!-- <Bitness>$([System.Text.RegularExpressions.Regex]::Match($(Configuration), `\d{2}$`))</Bitness>     -->
  <!-- </PropertyGroup> -->
  <Choose>
    <When Condition="$(Configuration.Contains('BinaryTrace'))">
      <PropertyGroup>
        <AssemblyName>Aphid$(Bitness).BinaryTrace$(IsDebug)$(IsAphidDbg)</AssemblyName>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <AssemblyName>Aphid$(Bitness)$(IsDebug)$(IsAphidDbg)</AssemblyName>
      </PropertyGroup>
    </Otherwise>
  </Choose>
  <!-- <PropertyGroup Condition="'$(Platform)' == 'x64'"> -->
  <!-- <AssemblyName Condition="$(Configuration.Contains('BinaryTrace'))">Aphid.BinaryTrace64</AssemblyName> -->
  <!-- <AssemblyName Condition="!$(Configuration.Contains('BinaryTrace'))">Aphid64</AssemblyName> -->
  <!-- </PropertyGroup> -->
  <!-- <PropertyGroup Condition="'$(Platform)' == 'x86'"> -->
  <!-- <AssemblyName Condition="$(Configuration.Contains('BinaryTrace'))">Aphid.BinaryTrace32</AssemblyName> -->
  <!-- <AssemblyName Condition="!$(Configuration.Contains('BinaryTrace'))">Aphid32</AssemblyName> -->
  <!-- </PropertyGroup> -->
  <!-- <PropertyGroup Condition="'$(Platform)' != 'x86' And '$(Platform)' != 'x64'"> -->
  <!-- <AssemblyName Condition="$(Configuration.Contains('BinaryTrace'))">Aphid.BinaryTrace</AssemblyName> -->
  <!-- <AssemblyName Condition="!$(Configuration.Contains('BinaryTrace'))">Aphid</AssemblyName> -->
  <!-- </PropertyGroup> -->
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|Default' "><OutputPath>bin\Debug\</OutputPath></PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug32|Default'"><OutputPath>bin\Debug32\</OutputPath></PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug64|Default'"><OutputPath>bin\Debug64\</OutputPath></PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|Default' "><OutputPath>bin\Release\</OutputPath></PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release32|Default'"><OutputPath>bin\Release32\</OutputPath></PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release64|Default'"><OutputPath>bin\Release64\</OutputPath></PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'AphidDebug|Default'"><OutputPath>bin\Release\</OutputPath></PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'AphidDebug32|Default'"><OutputPath>bin\Release32\</OutputPath></PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'AphidDebug64|Default'"><OutputPath>bin\Release64\</OutputPath></PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'TimeTravel|Default'"><OutputPath>bin\Release\</OutputPath></PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'TimeTravel32|Default'"><OutputPath>bin\Release32\</OutputPath></PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'TimeTravel64|Default'"><OutputPath>bin\Release64\</OutputPath></PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'BinaryTrace|Default'"><OutputPath>bin\Release\</OutputPath></PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'BinaryTrace32|Default'"><OutputPath>bin\Release32\</OutputPath></PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'BinaryTrace64|Default'"><OutputPath>bin\Release64\</OutputPath></PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <!-- <Reference Include="System.Xml.Linq" /> -->
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Runtime" />
    <Reference Include="System.Runtime.InteropServices" />
    <Reference Include="System.Threading.Thread" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Program.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="App.config">
      <SubType>Designer</SubType>
    </None>
    <None Include="Benchmarks\Charts.Config.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Benchmarks\ConditionalBenchmark.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Benchmarks\ListBenchmark.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Benchmarks\ClrInstanceBenchmark.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Benchmarks\CallBenchmark.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Benchmarks\Charts.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Benchmarks\IncludeBenchmark.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Benchmarks\OperatorBenchmark.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Benchmarks\Run.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Benchmarks\Run2.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Benchmarks\RunAll.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Samples\ConditionalOperatorExample.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Samples\AbstractSyntaxTreeExample.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Samples\NuGetMsaglExample.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Samples\RuntimeErrorExample.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Benchmarks\CustomOperatorBenchmark.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Benchmarks\ArithmeticBenchmark.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Samples\ParallelForExample.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Samples\NativeDebuggerExample.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Samples\CustomOperatorExample.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Samples\VbsExample.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Samples\ILExample.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Samples\MacroExample.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Samples\InteropExample.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Samples\TextDocumentExample.alxt">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Samples\FibonacciExample.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Samples\PatternMatchingExample.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Samples\TcpExample.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Samples\PartialFunctionExample.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Samples\PipeliningExample.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Samples\LambdaExample.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Samples\FunctionExample.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Samples\HelloWorld.alx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Components.Aphid\Components.Aphid.csproj">
      <Project>{4249db75-bbb6-4cc4-b046-3170dd1d3bc1}</Project>
      <Name>Components.Aphid</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Net.Compilers">
      <Version>3.2.0-beta3-final</Version>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <Content Include="a.ico" />
  </ItemGroup>
  <!-- <ItemGroup> -->
  <!-- <BootstrapperPackage Include="Microsoft.Net.Framework.3.5.SP1"> -->
  <!-- <Visible>False</Visible> -->
  <!-- <ProductName>.NET Framework 3.5 SP1</ProductName> -->
  <!-- <Install>false</Install> -->
  <!-- </BootstrapperPackage> -->
  <!-- </ItemGroup> -->
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <PreBuildEvent>::taskkill /im aphid.exe /f
::powershell -Command "&amp;{ Get-Process aphid -ErrorAction SilentlyContinue |? {$_.Modules.FileName -eq '$(TargetPath)'} | Stop-Process -Force }"
</PreBuildEvent>
  </PropertyGroup>
  <PropertyGroup>
    <PostBuildEvent>::copy $(ProjectDir)..\AphidUI\$(OutDir)AphidUI.exe $(TargetDir)

IF NOT EXIST "$(TargetDir)Aphid64.exe" (
    IF NOT EXIST "$(TargetDir)Ngen.exe" (
        "$(TargetDir)$(AssemblyName).exe" "$(TargetDir)Tools\MakeExe.alx" -medusa "$(TargetDir)Tools\Ngen.alx" "$(TargetDir)Ngen.exe" || exit 20
    )

    IF NOT EXIST "$(TargetDir)Run.exe" (
        "$(TargetDir)$(AssemblyName).exe" "$(TargetDir)Tools\MakeExe.alx" -medusa "$(TargetDir)Tools\Run.alx" "$(TargetDir)Run.exe" || exit 21
    )
) ELSE (
    IF NOT EXIST "$(TargetDir)Ngen.exe" (
        "$(TargetDir)$(AssemblyName).exe" "$(TargetDir)Tools\MakeExe.alx" -medusa "$(TargetDir)Tools\Ngen.alx" "$(TargetDir)Ngen.exe" || exit 22
    )

    IF NOT EXIST "$(TargetDir)Run.exe" (
        "$(TargetDir)$(AssemblyName).exe" "$(TargetDir)Tools\MakeExe.alx" -medusa "$(TargetDir)Tools\Run.alx" "$(TargetDir)Run.exe" || exit 23
    )
)</PostBuildEvent>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>