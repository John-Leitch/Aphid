using System.ComponentModel;
using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework;
using Components.Aphid.Lexer;
// <auto-generated>
// This file contains automatically generated tests.
// Do not modify this file manually.
// 
// If the contents of this file becomes outdated, you can delete it.
// For example, if it no longer compiles.
// </auto-generated>
using System;
using DescriptionAttribute = Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute;

namespace Components.Aphid.Parser.Tests
{
    public partial class AphidLexerTests
    {

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll222()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll816()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll558()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll71()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll510()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll345()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll228()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\f");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\f");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\f", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll299()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%@");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll367()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%Y");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%Y");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%Y", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll81()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll963()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll946()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\0<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "\0<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\0<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll109()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\f\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\f\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\f\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll640()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll668()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%@\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%@\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%@\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll18()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%1");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%1");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%1", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll27()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%@>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%@>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%@>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll272()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll599()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll346()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll316()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%￿");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%￿");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%￿", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll861()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%``");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%``");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%``", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll128()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%h");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%h");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%h", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll789()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<% ");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<% ");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<% ", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll323()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll583()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\"");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll110()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%a");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%a");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%a", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll314()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll747()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll983()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll594()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll265()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%$\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll55()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%$_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%$!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%b");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%b");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%b", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll775()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll556()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll853()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll546()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll876()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll565()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll108()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll638()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll25()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll166()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll589()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll7()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll491()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll77501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll839()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%::");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%::");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%::", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll847()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll685()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll712()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll231()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll670()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll829()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll370()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll925()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll152()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll535()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%i");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%i");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%i", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll199()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%if");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%if");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%if", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll572()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%in");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%in");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%in", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll54601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll828()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll732()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll570()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll384()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%j");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%j");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%j", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll146()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll779()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll562()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll871()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll168()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll593()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll520()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll907()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll929()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll71201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll922()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll115()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll410()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll781()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll340()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll833()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll317()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll182()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll796()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll416()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll396()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll449()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll75()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll764()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll216()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll271()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll726()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll771()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll21()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll729()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll100()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll945()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll60()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll682()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll622()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll26501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll72901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll390()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll557()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll8101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%p");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%p");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%p", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll564()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll121()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll521()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll774()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll616()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll294()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll664()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll996()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%</");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%</");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%</", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll68()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll949()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll56()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll671()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll295()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll883()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll188()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll86101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll684()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll423()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll208()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll947()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll534()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll794()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll148()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll917()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll30()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll766()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<<=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<<=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<<=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll658()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll910()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll513()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll719()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll443()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll997()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll761()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll226()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll312()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll94601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll524()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll551()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll975()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll11501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll335()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll962()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll769()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll944()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll27101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll623()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll325()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll733()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%x");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%x");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%x", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll972()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll360()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll490()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll29901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%r");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%r");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%r", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll461()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll147()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll169()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\'");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll280()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll850()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll631()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll439()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll460()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll624()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll663()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll36701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll649()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll268()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll674()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll438()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll537()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll130()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll763()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll10001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll394()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll620()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>>=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>>=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>>=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll34501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll568()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll310()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll91001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%><");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%><");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%><", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll43801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll573()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll888()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll584()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll451()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll866()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll859()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll289()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll73()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll851()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll85101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll680()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%q");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%q");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%q", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll936()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%z");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%z");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%z", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll688()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll576()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll899()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll980()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll83301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll560()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll90701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll14801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll759()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll42301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll998()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%??");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%??");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%??", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll76()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll358()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll376()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll548()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll68001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll514()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll40401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll35801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll450()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll55601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll37601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll608()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll55101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll636()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll56201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll75901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll2701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%##");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%##");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%##", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll875()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll628()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll160()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll639()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll835()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll600()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll191()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll63601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll318()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll881()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll679()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll332()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll374()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll466()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll462()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll984()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll144()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll251()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll161()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>$");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll626()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%y");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%y");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%y", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll83901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%c");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%c");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%c", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll591()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll459()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll528()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll86601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll569()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll218()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll363()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll353()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll532()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll456()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll973()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%>&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll29401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%d");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%d");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%d", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll223()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%do");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%do");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%do", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll369()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%:&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll107()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%!&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll16601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll970()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll181()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll62201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%<&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll57601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll215()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%`&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll709()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll16001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%f");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%f");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%f", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll60801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll170()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%e");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%e");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%e", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll91002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%#_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll85301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%t");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%t");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%t", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll699()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll164()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%u");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%u");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%u", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll993()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\n");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\n");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\n", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll722()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\t");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\t");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\t", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll224()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%v");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%v");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%v", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll97()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%s");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%s");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%s", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll6()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\v");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\v");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\v", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll913()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll321()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%g");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%g");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%g", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll960()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\r");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\r");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\r", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll313()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%w");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%w");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%w", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll84()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll845()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll97201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll15201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll57301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll634()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll70201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll655()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll77901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll597()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll67901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll745()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll436()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll43601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll10801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll43901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll69901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll809()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll70401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll87()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll737()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll916()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll533()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll99801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll817()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\\&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll966()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll517()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%l");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%l");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%l", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll83()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll414()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%&_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll797()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll749()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll742()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll57302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll477()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%||");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%||");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%||", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll23()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll575()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll909()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll819()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll68201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll40301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll274()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll225()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll47()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll1801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll79()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll246()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll12()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll758()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll195()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll793()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll937()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll62001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll419()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll398()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%|&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll27201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll33501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll592()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll86602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%k");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%k");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%k", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll209()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll320()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll33()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll88101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll37()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll453()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll76401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll915()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll66801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll73301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll411()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll92()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll132()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll508()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll79301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll867()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll78101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll36702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll711()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll248()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll85102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll59301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll434()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll359()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll324()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll63()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll81701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll3701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll770()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%^&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll51401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll914()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll51001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll831()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%n");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%n");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%n", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll211()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%%_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll196()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll864()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll563()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll13()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll618()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll81601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll20801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll938()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll512()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll63101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll471()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll776()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll81901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll30601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll129()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll54801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll41101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll352()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll552()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll437()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll258()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll64001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll82901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~$");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll3001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll625()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%~&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll63801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll748()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll167()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll630()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll41601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll57602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll66()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll52101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll279()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll65501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll57603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll176()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll96601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll52()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll190()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll6301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll486()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll463()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll17601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%**");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%**");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%**", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll22401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll45001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll27901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll427()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll838()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll681()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll596()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%*&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll872()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%m");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%m");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%m", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll995()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%}");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%}");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%}", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll250()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0x");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0x");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0x", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll39801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0b");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0b");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0b", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll74801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%o");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%o");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%o", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll752()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll648()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll37401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll555()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll707()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll281()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll725()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll193()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%./");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%./");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%./", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll41602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%..");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%..");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%..", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll44901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll13201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll571()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll20901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll91003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll472()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll245()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll36()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll189()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll76901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll525()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll496()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll31301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll183()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll259()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll852()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll768()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%.&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll448()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll16401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll862()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll351()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll52001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll492()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll10802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll214()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll727()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll667()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll952()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll392()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll389()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll10701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll59401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%++");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%++");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%++", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll543()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll267()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll81602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll212()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll36703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll429()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll44301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll391()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll985()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll880()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll362()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%+&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll445()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll17602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll355()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll45901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll824()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll53()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll465()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll276()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll263()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll692()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll92901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%--");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%--");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%--", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll744()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll647()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%->");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%->");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%->", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll911()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll894()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll780()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll818()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll19()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll598()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll694()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll91301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll39001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll656()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll48601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll441()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%-&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll738()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll16402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll659()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll01()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll577()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll59901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%//");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%//");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%//", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll34502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll62401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll691()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll982()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll80101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll35301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll26701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll33502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll843()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll420()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll42302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll2()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll426()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll57604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll530()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll4()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll76601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%/&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll89401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%w[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%w[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%w[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll46501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%s[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%s[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%s[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll979()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%el[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll545()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tr[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tr[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%tr[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll1()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%sw[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%sw[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%sw[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll20()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fi[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fi[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fi[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll375()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%b[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%b[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%b[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll792()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%u[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%u[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%u[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%de[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%de[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%de[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll239()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%lo[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%lo[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%lo[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll454()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%br[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%br[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%br[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll357()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fa[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fa[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fa[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll213()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%th[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%th[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%th[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll971()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nu[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nu[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%nu[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll71101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%d[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%d[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%d[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll36901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%wh[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%wh[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%wh[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll113()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%f[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%f[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%f[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll232()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tr[\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tr[\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%tr[\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll977()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%us[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%us[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%us[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll93701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%co[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%co[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%co[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll80901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%t[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%t[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%t[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll958()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swit");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swit");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%swit", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll243()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swit\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swit\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%swit\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll31001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll70501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switc");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll73302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switc\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switc\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switc\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll820()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switch");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switch");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switch", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll51201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swit[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swit[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%swit[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll40()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swita");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swita");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%swita", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll69101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swit0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swit0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%swit0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll26301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swit{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swit{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%swit{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll70601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swit");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swit");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%swit", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll22801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switc0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switc0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switc0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll54602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switca");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switca");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll136()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switc<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switc<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switc<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll978()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switcA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switcA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switcA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll41001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switc[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switc[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switc[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll80501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switc{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switc{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switc{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll61801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switc");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll187()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switc_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switc_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switc_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll252()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swit_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swit_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%swit_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll407()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%brea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%brea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%brea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll632()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%brea\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%brea\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%brea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll42()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%breaA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%breaA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%breaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll784()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%brea[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%brea[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%brea[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%break");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%break");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%break", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll56501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%breaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%breaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%breaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll287()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%brea0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%brea0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%brea0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll84301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%brea{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%brea{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%brea{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll22802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%brea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%brea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%brea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll98001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%brea_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%brea_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%brea_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll242()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%re");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%re");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%re", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll78()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%co");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%co");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%co", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll587()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%br");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%br");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%br", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll5()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ne");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ne");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ne", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll519()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%c");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%c");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%c", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll29()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll930()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll31302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll473()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll85901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll54301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01.\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01.\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01.\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll73801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01.0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01.0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01.0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll244()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01.:\0\0\0\0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01.:\0\0\0\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01.:\0\0\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll481()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%th");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%th");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%th", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll91302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defi");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defi");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll26302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defi\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defi\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defi\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll2101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defiA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defiA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll65()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defia");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll220()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll470()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defi0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defi0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defi0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll40701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defin\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll51()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defi<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defi<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defi<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll91701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defin0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll19601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defin<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%define");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%define");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%define", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll57701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defi{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defi{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defi{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll41603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%definA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%definA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%definA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll16901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defina");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defina");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll68501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%define\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%define\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%define\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll45101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defineA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defineA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defineA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll8102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defi");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defi");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll813()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%definea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%definea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%definea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll56901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defin[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll33201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defin{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll162()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%define0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%define0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%define0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll7801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defined");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defined");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defined", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll54302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll91101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%define[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%define[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%define[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll58701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%define{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%define{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%define{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll730()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%define");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%define");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%define", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll23901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defi_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defi_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defi_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll72501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defin_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll97701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%lo");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%lo");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%lo", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll1901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01.0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01.0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01.0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll783()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%dele");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%dele");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%dele", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll21801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%dele\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%dele\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%dele\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll41002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deleA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deleA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%deleA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll400()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%dele0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%dele0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%dele0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll111()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%dele[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%dele[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%dele[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll72601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delet");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delet");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delet", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll83501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delet\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delet\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delet\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll5201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deletA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deletA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%deletA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll64()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deleta");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deleta");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%deleta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll931()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delete");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delete");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delete", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll45401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll46502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delet{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delet{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delet{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll59()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delet0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delet0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delet0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll567()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delet");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delet");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delet", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll62202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%dele{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%dele{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%dele{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%dele");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%dele");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%dele", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll26303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%dele_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%dele_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%dele_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll198()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delet_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delet_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delet_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll38()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tr");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tr");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%tr", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll94501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll566()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catc\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll93001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catcA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catcA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catcA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll16201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catca");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catca");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catc{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll184()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catch");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catch");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catch", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll484()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll328()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catc0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll82()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catc_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll76402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%b");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%b");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%b", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll57702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exte");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exte");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exte", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll873()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exte\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exte\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exte\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll467()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exte0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exte0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exte0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll22301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll830()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exte<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exte<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exte<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll67()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exte{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exte{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exte{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll37402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exte");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exte");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exte", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll290()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exteA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exteA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exteA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll17603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exten");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exten");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exten", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll29001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exten\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exten\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exten\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll63802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exten0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exten0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exten0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll837()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extend");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extend");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extend", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll26502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extena");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extena");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extena", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll31()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exten<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exten<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exten<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll581()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extenA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extenA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extenA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll91303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exten[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exten[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exten[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll690()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exten{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exten{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exten{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll69()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exten");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exten");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exten", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll348()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exte_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exte_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exte_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll59302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exten_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exten_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exten_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll762()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%thro");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%thro");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%thro", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll197()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%thro\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%thro\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%thro\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll59303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll47101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throw");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throw");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throw", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll382()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll772()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%thro{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%thro{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%thro{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll509()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%thro");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%thro");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%thro", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%thro0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%thro0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%thro0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll81801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%thro_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%thro_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%thro_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll8()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fina");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fina");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fina\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fina\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fina\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll21101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll31701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%final");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%final");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%final", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll447()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fina0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fina0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fina0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll529()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finaA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finaA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll92902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fina<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fina<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fina<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll696()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%final\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%final\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%final\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%final0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%final0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%final0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll893()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fina{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fina{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fina{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll76301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finala");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finala");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finala", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll88001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finalA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finalA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finalA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll957()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%final[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%final[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%final[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll22001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finall", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll951()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finall\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll36902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finally");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finally");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finally", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll21501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finalla");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finalla");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finalla", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll28901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%final{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%final{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%final{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll808()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fina");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fina");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll96602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finall0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll714()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%final");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%final");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%final", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll849()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finallA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finallA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finallA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll860()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finall[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll735()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finall{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll38201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finall", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll44801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fina_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fina_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fina_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll900()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%f");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%f");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%f", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll612()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ca");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ca");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll617()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$arg");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$arg");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%$arg", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll21102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$arg\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$arg\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%$arg\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll969()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$arg0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$arg0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%$arg0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll25201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$arg<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$arg<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%$arg<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll260()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$arg{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$arg{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%$arg{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll21802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$argA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$argA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%$argA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll93002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$args");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$args");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%$args", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll841()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$arg");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$arg");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%$arg", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll687()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$arg_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$arg_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%$arg_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll27202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\0\"\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\0\"\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\0\"\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll36001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\0\"\"");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\0\"\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\0\"\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll349()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll475()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finall_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll165()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%el", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll559()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whil");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whil");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whil", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll812()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whil\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whil\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whil\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whil0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whil0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whil0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll61201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whilA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whilA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whilA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll77101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whil<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whil<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whil<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll67902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whila");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whila");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whila", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll56301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whil[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whil[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whil[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll2102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whil{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whil{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whil{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll22501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whil");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whil");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whil", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll134()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%while");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%while");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%while", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll39601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whil_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whil_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whil_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll3301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%final_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%final_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%final_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%s");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%s");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%s", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll82001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%define_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%define_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%define_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll88301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%r");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%r");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%r", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll253()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%d");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%d");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%d", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\010");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\010");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\010", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll44701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01E");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01E");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01E", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll20902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%de");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%de");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%de", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll52801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nu");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nu");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%nu", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll60301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fals", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll43401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fals\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll177()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fals0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll45402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%false");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%false");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%false", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll12901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fals<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll14601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%falsA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%falsA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%falsA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fals[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll74401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%falsa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%falsa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%falsa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll723()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fals{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll1902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fals", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll613()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fals_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll82801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%us");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%us");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%us", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%cont");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%cont");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%cont", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll574()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%cont\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%cont\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%cont\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll91004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conta");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conta");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%conta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll58702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%cont0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%cont0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%cont0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll51402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll9701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conti");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conti");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%conti", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll26503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%cont[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%cont[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%cont[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll185()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conti\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conti\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%conti\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll319()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conti0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conti0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%conti0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll94()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contia");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll145()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conti<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conti<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%conti<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll58301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conti{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conti{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%conti{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll518()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contin");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contin");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll77601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contin\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contin\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contin\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll56902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll430()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contin0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contin0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contin0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll956()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continu");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continu");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continu", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll887()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continu\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continu\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continu\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll30701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%cont{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%cont{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%cont{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll80801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contina");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contina");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll51202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contin<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contin<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contin<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll74701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continuA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continuA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continuA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll93101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continu[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continu[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continu[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll16801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continua");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continua");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll88701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continu{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continu{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continu{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll354()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contin[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contin[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contin[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll347()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contiA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contiA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll94701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%cont");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%cont");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%cont", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll440()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contin{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contin{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contin{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll17()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conti");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conti");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%conti", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll646()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continu0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continu0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continu0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll55801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continu");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continu");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continu", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll43402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continue");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continue");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continue", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll425()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contin");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contin");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll657()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conti_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conti_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%conti_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll51403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%cont_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%cont_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%cont_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contin_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contin_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contin_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll98201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ex");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ex");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ex", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll69201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continu_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continu_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continu_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll69102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%e");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%e");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%e", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll59902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\010\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\010\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\010\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll96901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll741()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll68202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defau");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defau");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defau", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll25301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll64901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defa[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defa[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defa[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll731()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defa0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defa0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defa0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll83801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defau\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defau\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defau\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll92501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll93702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaua");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaua");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll63602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defa{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defa{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defa{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defauA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defauA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defauA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll717()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll366()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defau[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defau[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defau[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll63401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaul");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaul");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaul", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll73101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defau0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defau0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defau0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaul\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaul\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaul\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll652()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaulA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaulA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaulA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll751()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%default");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%default");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%default", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll81802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defau{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defau{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defau{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll74101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaul[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaul[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaul[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll28902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaul0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaul0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaul0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll10901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defau");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defau");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defau", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll60802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaula");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaula");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaula", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll261()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaul{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaul{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaul{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll542()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaul");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaul");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaul", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll526()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defa_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defa_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defa_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaul_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaul_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaul_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll823()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defau_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defau_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defau_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll927()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%sw");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%sw");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%sw", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll334()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%wh");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%wh");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%wh", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll16()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll221()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usin\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll527()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usinA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usinA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usinA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll343()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usin0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll67401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usin[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll56001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usina");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usina");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll78001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usin{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll81201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%using");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%using");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%using", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll78401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll65201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usin_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll73802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01E\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01E\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01E\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll86001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01E0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01E0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01E0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll42901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01E-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01E-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01E-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll827()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fi");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fi");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll72902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fo");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fo");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fo", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll171()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%u");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%u");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%u", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll869()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ne\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ne\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ne\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll21502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%brea\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%brea\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%brea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll66802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%cont\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%cont\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%cont\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll791()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fals\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll278()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whil\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whil\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whil\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll55701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finall\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll43()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%el\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll8301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swit\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swit\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%swit\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll330()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tr\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tr\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%tr\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll79101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01:@");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01:@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01:@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll64701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usin\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll300()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%dele\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%dele\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%dele\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll90702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll7301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\0\"\0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\0\"\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\0\"\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll19701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\0\"\\\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\0\"\\\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\0\"\\\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll24301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catc\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll12902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%th\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%th\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%th\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll43701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contin\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contin\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contin\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll44501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nu\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nu\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%nu\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll269()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%define\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%define\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%define\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll455()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%de\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%de\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%de\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll80201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defin\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll5501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%sw\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%sw\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%sw\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll476()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continu\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continu\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continu\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll368()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ca\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ca\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ca\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll46701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exten\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exten\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exten\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll97101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%us\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%us\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%us\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll233()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switc\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switc\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switc\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll30101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%thro\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%thro\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%thro\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll822()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%try");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%try");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%try", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll80401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exte\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exte\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exte\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll28()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll413()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%i");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%i");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%i", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll51203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%co\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%co\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%co\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll26101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%lo\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%lo\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%lo\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll73102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fi\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fi\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fi\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll40601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ex\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ex\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ex\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll5901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%wh\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%wh\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%wh\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll67903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaul\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaul\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaul\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll621()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%br\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%br\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%br\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll46201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%re\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%re\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%re\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll262()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%final\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%final\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%final\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll72602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defau\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defau\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defau\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll991()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fo\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fo\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fo\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll26504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defi\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defi\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defi\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll18201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fina\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fina\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fina\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll154()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conti\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conti\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%conti\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll77()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%w");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%w");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%w", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll70301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delet\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delet\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delet\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll826()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%e\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%e\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%e\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll24302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%wha");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%wha");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%wha", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll941()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conta");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conta");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%conta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll47301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defia");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll322()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%loa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%loa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%loa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll814()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%r\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%r\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%r\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll700()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%rea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%rea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%rea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll256()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%faa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%faa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%faa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll95()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%try\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%try\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%try\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll12101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%l");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%l");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%l", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll736()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaula");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaula");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaula", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll97702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%f\0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%f\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%f\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll458()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contina");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contina");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll138()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%foa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%foa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%foa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll619()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%bra");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%bra");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%bra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll834()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%s\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%s\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%s\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll49601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fa{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fa{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fa{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll48401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%definea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%definea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%definea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll483()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nua");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nua");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%nua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll88()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%define0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%define0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%define0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll36704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catch\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catch\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catch\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll373()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catcha");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catcha");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catcha", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll19001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catch{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catch{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catch{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll344()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catch");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catch");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catch", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll954()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catch0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catch0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catch0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll800()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catchA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catchA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catchA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll78002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catch\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catch\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catch\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll77602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catch_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catch_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catch_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll99301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swita");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swita");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%swita", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll415()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01E-\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01E-\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01E-\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll142()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01E-0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01E-0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01E-0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll43702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%t");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%t");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%t", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll43703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll889()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continua");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continua");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll955()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%u\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%u\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%u\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll428()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catca");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catca");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll689()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%n");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%n");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%n", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll61701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deleta");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deleta");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%deleta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll40001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whila");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whila");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whila", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll964()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tra");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tra");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%tra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll98()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%co0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%co0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%co0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll240()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finalA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finalA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finalA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll48101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throw\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throw\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throw\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll273()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throwa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throwa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throwa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll6401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throw0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throw0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throw0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll112()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throwA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throwA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throwA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll83802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throw[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throw[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throw[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll44502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throw{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throw{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throw{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll117()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throw");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throw");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throw", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll12102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throw_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throw_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throw_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll5502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throw\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throw\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throw\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll94702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll540()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ela");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ela");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ela", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll52901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%falsa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%falsa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%falsa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll886()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tr{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tr{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%tr{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll122()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extena");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extena");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extena", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll990()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%nea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll45601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catchA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catchA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catchA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll91702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%wh0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%wh0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%wh0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll116()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continuA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continuA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continuA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll14701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continue\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continue\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continue\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll82601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continuea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continuea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continuea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll217()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continue0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continue0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continue0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll99302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continue<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continue<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continue<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll642()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continueA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continueA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continueA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll3601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continue{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continue{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continue{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll125()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continue");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continue");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continue", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll86201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continue\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continue\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continue\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll98401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continue_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continue_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continue_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll53301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01E-0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01E-0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01E-0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll912()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01E-00");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01E-00");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01E-00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll832()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%reA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%reA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%reA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll51801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defined\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defined\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defined\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll5503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defined0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defined0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defined0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll88002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defined<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defined<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defined<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll96201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defineda");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defineda");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defineda", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll159()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%definedA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%definedA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%definedA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll72502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defined[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defined[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defined[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll734()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defined{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defined{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defined{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll96603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defined");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defined");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defined", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll5601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defined_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defined_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defined_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll99701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defined\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defined\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defined\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll807()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%trya");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%trya");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%trya", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll73201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fina{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fina{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fina{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll85103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%sw0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%sw0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%sw0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll62203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%cont{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%cont{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%cont{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll49201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defau0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defau0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defau0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll72503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defi{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defi{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defi{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll292()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catchA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catchA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catchA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll85001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continuea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continuea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continuea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll32201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continueA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continueA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continueA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll877()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaul{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaul{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaul{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll93703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ex0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ex0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ex0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll75902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%lo0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%lo0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%lo0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll3101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll579()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%try{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%try{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%try{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll586()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finall0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll785()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continu0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continu0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continu0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll163()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contia");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll418()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%￿0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%￿0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%￿0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll31601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll715()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%lo{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%lo{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%lo{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll41301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usin0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll19002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switch\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switch\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switch\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll32401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switcha");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switcha");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switcha", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll585()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switch{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switch{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switch{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll5602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switch");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switch");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switch", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll297()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switchA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switchA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switchA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll36301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switch0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switch0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switch0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll708()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switch\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switch\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switch\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll85201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switch_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switch_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switch_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll25901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tr");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tr");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%tr", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll22101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%d\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%d\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%d\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll39002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%la");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%la");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%la", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll388()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%caa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%caa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%caa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll856()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%falsa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%falsa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%falsa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll21103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%definA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%definA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%definA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll43602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%if");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%if");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%if", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll91()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ifa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ifa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ifa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll83701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extena\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extena\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extena\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll76403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%try");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%try");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%try", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll37001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%br{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%br{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%br{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll760()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tha");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tha");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%tha", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll371()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll194()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%lo");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%lo");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%lo", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll750()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%el{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll675()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fia");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll126()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%dea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%dea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%dea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll943()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defi");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defi");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%wa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%wa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%wa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll52802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%el", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll56903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%breaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%breaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%breaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll858()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nua\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nua\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%nua\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll50801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0e");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0e");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0e", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll21201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finall0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll590()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finalA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finalA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finalA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll96902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaul");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaul");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaul", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll90()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continue0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continue0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continue0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll14702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll83702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%na");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%na");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%na", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll16802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%define{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%define{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%define{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll393()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<\0<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<\0<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<\0<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll610()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%co0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%co0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%co0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll2103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usin<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll41()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catch0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catch0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catch0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll50601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%doa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%doa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%doa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll16701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaua");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaua");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll53302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ifa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ifa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ifa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll71901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ta");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ta");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll710()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll757()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%doa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%doa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%doa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll02()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delea\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delea\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll379()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fina");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fina");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll452()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll994()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%swa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll98501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contia\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contia\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contia\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll4001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%cont");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%cont");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%cont", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll86901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usin0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switca");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switca");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll114()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catcA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catcA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catcA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll9702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%definA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%definA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%definA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll653()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usinA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usinA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usinA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll79201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continu<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continu<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continu<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll26304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%using\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%using\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%using\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll43603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%using0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%using0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%using0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll12501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usinga");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usinga");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usinga", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll97501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usingA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usingA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usingA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll76801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%using[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%using[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%using[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll408()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%using{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%using{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%using{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll24303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%using");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%using");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%using", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll61202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%using_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%using_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%using_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll119()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%using\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%using\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%using\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll54501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usinga");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usinga");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usinga", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll926()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%define");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%define");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%define", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll953()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\08E-00\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\08E-00\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\08E-00\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll35()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%￿A");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%￿A");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%￿A", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll70302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exte{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exte{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exte{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll70602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\'\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\'\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\'\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll337()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\'\'");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\'\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\'\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll42303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%br");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%br");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%br", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll35701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ela\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ela\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ela\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll36002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swit0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swit0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%swit0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll36903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continu{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continu{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continu{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll80102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extend\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extend\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extend\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll633()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extenda");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extenda");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extenda", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll976()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extend0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extend0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extend0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll137()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extend<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extend<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extend<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll57201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extend{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extend{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extend{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll33701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extendA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extendA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extendA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll98202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extend");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extend");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extend", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll661()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extend\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extend\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extend\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll68701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extend_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extend_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extend_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll72603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extenda");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extenda");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extenda", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll63803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extend0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extend0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extend0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll91401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extenda\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extenda\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extenda\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll87501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll80502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switc0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switc0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switc0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll22201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ifaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ifaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ifaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll36201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fals0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll6801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nu{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nu{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%nu{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll25202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll47201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%us0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%us0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%us0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll31401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conti{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conti{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%conti{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll36302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finally\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finally\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finally\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll3602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finallya");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finallya");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finallya", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll39602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finally{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finally{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finally{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll609()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finally0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finally0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finally0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll890()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finally");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finally");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finally", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll19602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finallyA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finallyA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finallyA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll62002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finally\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finally\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finally\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll55802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finally_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finally_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finally_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll3002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%thro{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%thro{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%thro{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll59601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%re0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%re0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%re0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll933()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throwa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throwa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throwa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll155()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%dele{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%dele{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%dele{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll64902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%doaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%doaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%doaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll765()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fals0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll95501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defineda");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defineda");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defineda", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll409()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%final[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%final[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%final[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll18401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swit{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swit{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%swit{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll18801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%wh<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%wh<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%wh<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll786()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%break\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%break\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%break\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll39802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%breakA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%breakA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%breakA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll24401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%breaka");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%breaka");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%breaka", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll93102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%break[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%break[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%break[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll91601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%break{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%break{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%break{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll547()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%break0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%break0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%break0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll55602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%break");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%break");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%break", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll33702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%break_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%break_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%break_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll15501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%break\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%break\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%break\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll43902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%breaka");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%breaka");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%breaka", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll293()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ia");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll24601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usinga\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usinga\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usinga\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll36202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exte");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exte");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exte", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll249()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fo0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fo0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fo0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll457()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finalla");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finalla");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finalla", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll431()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defin0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll11()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switcha");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switcha");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switcha", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll157()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finallya");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finallya");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finallya", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll69103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ex{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ex{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ex{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll29902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catc0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll6501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tryA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tryA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%tryA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll480()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%brea0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%brea0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%brea0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll821()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%new[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%new[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%new[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll59602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%new");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%new");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%new", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll41003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%new\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%new\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%new\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll897()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%newa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%newa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%newa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll95101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll46202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tha\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tha\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%tha\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll20201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%dele");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%dele");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%dele", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll75001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%thro");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%thro");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%thro", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll36203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nu");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nu");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%nu", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll39301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swit");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swit");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%swit", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll728()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%rea\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%rea\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%rea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll22102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%wha\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%wha\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%wha\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll34901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nea\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nea\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%nea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll65801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continu");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continu");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continu", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll63901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deleta\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deleta\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%deleta\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll746()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%dea\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%dea\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%dea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll5603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extenA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extenA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extenA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll63001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whila\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whila\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whila\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll86902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%swa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll11401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delet{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delet{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delet{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll50901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%foa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%foa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%foa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll28903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switch{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switch{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switch{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll20601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%falsaA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%falsaA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%falsaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll724()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%for[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%for[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%for[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll935()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%for");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%for");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%for", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll62301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%for\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%for\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%for\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll73501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fora");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fora");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fora", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll75002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%e0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%e0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%e0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll986()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fa0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fa0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fa0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll908()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%breaA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%breaA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%breaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll94401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ca");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ca");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll446()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%uA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%uA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%uA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll172()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ex");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ex");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ex", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll82701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%f\0￿0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%f\0￿0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%f\0￿0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll79202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finally0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finally0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finally0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll61802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switch");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switch");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switch", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll97202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catch<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catch<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catch<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll59304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fia\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fia\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fia\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll478()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaua\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaua\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaua\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll53001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ba");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ba");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ba", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll40901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fals{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll974()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conti");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conti");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%conti", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll342()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switca\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switca\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switca\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll41501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%da");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%da");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%da", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll47501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll29201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%lA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%lA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%lA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll84501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%th0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%th0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%th0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll756()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defa{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defa{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defa{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll94101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%br0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%br0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%br0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll22()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%caa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%caa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%caa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll75903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%nA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll68502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delet");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delet");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delet", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll44302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tra\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tra\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%tra\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll85902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continua\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continua\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continua\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll43802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%i\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%i\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%i\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll98203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%foA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%foA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%foA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll773()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finaa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finaa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finaa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll665()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%breaka\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%breaka\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%breaka\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll74501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%newa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%newa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%newa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll74601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defined{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defined{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defined{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll892()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%de0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%de0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%de0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll72504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%false\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%false\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%false\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll56002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%falseA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%falseA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%falseA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll71401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%falsea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%falsea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%falsea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll97502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%false{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%false{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%false{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll58401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%false0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%false0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%false0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll9703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%false");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%false");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%false", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll811()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%false\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%false\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%false\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll693()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%false_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%false_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%false_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll59101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%falsea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%falsea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%falsea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll10401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%tA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll75003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conta\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conta\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%conta\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll895()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defauA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defauA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defauA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll380()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%￠");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%￠");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%￠", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll81702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swita\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swita\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%swita\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll210()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switc{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switc{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switc{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll284()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll9()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%loa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%loa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%loa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll247()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%try0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%try0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%try0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll7101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%new{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%new{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%new{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll1701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ret");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ret");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ret", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll70303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ret\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ret\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ret\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll72903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%reta");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%reta");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%reta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll356()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%retA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%retA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%retA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll660()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll62101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%de@");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%de@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%de@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll70801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finallya\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finallya\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finallya\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll15202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fiA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fiA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll70802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catch0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catch0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catch0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll68702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%definea\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%definea\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%definea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll56601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defined");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defined");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defined", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll81202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%sa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%sa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%sa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll72904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%using{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%using{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%using{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll54()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%wA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%wA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%wA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll49()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%falsea\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%falsea\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%falsea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll30702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%reta\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%reta\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%reta\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll417()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defia\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defia\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defia\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll25101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%co<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%co<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%co<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll70402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fals", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll192()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll10601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extea\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extea\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll50101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%faa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%faa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%faa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll55501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exten{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exten{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exten{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll50602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defin[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll71902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fora\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fora\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fora\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll90501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%bra\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%bra\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%bra\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll86202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throw{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throw{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throw{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll7302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ina");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ina");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll54603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ina\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ina\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ina\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll79102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%inaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%inaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%inaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll468()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ina{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ina{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ina{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ina");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ina");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll153()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%caA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%caA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%caA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll18901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%us<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%us<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%us<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll40702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finall{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll77001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaula\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaula\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaula\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ra");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ra");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll88702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finala");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finala");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finala", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll19201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%coa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%coa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%coa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll554()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finall", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll67402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exten");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exten");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exten", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll39302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tr0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tr0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%tr0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll68002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defina");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defina");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll651()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%trA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%trA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%trA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll88901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fo{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fo{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fo{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll26801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extendA\0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extendA\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extendA\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll311()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contin{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contin{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contin{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll99501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%l[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%l[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%l[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll83803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switc");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll578()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%coA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%coA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%coA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll73303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%b\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%b\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%b\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll82401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switcha\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switcha\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switcha\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll90101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll69001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ca{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ca{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ca{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll237()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delete\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delete\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delete\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll47801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deleteA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deleteA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%deleteA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll38001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delete[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delete[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delete[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll71501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deletea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deletea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%deletea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll76602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delete0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delete0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delete0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll879()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delete{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delete{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delete{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll229()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delete");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delete");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delete", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll87701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delete_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delete_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delete_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll23301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delete\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delete\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delete\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll15401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deletea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deletea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%deletea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll94402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deletea\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deletea\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%deletea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll47202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%thA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%thA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%thA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll60701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%for0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%for0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%for0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll45701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contin");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contin");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll788()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%trya\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%trya\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%trya\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll45801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%f\0￿00");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%f\0￿00");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%f\0￿00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll57703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finally<\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finally<\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finally<\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll35201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%break{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%break{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%break{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll810()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%default\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%default\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%default\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll51301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaultA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaultA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaultA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll123()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaulta");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaulta");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaulta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll948()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%default{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%default{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%default{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll331()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%default");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%default");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%default", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll63102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%default0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%default0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%default0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll60201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%default\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%default\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%default\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll95401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%default_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%default_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%default_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll13401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaulta");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaulta");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaulta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll83804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaulta\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaulta\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaulta\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll46001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%u[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%u[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%u[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll57303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%new");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%new");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%new", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll743()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%default{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%default{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%default{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll16301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catcha");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catcha");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catcha", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll28701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%using");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%using");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%using", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll98601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll58101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usina");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usina");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll76404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%forA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%forA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%forA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll7802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%while\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%while\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%while\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll383()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whileA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whileA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whileA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll669()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whilea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whilea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whilea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll45602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%while{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%while{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%while{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll97801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%while");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%while");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%while", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll57()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%while0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%while0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%while0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll541()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%while\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%while\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%while\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll549()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%while_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%while_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%while_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll683()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whilea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whilea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whilea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll326()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whilea\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whilea\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whilea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll68801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%while0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%while0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%while0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll30501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%while0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%while0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%while0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll20802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%e<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%e<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%e<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll878()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%faA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%faA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%faA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll920()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%cA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%cA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%cA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll3702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%f\0￠\0￿");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%f\0￠\0￿");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%f\0￠\0￿", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll73001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defineda\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defineda\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defineda\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll58302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%d0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%d0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%d0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%false0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%false0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%false0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll96301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throw");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throw");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throw", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll718()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whileA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whileA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whileA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll34001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%break");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%break");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%break", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll71801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deleteA\0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deleteA\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%deleteA\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll48102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delete{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delete{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delete{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll650()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\'\0\'");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\'\0\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%\'\0\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll921()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%re{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%re{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%re{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll49001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tr_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tr_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%tr_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll41901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nuA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nuA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%nuA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll381()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usin[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll77201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ret{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ret{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ret{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll71202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catch[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catch[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catch[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll1201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ne0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ne0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ne0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll44702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%w");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%w");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%w", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll68101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catc[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll57304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%doa0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%doa0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%doa0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll40302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%while<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%while<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%while<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll53201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finallyA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finallyA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finallyA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll124()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%for[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%for[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%for[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll55502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fo");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fo");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fo", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll469()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catc{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll39303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%brA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%brA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%brA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll80()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fi{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fi{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fi{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll88801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%co{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%co{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%co{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll31801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%deA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll919()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<\0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll46301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%f\0￡\0￿\0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%f\0￡\0￿\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%f\0￡\0￿\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll474()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%th@");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%th@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%th@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll79203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extend[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extend[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extend[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll497()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\0!\"");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\0!\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\0!\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll40303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\0!$");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\0!$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\0!$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll72201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\0!\'");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\0!\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\0!\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll32()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%de{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%de{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%de{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll37301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whil{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whil{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whil{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll93704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll94703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%falseA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%falseA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%falseA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll39401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continueaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continueaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continueaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll286()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ne{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ne{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ne{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll865()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catcaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catcaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catcaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll52902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%for{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%for{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%for{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll70603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ne");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ne");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ne", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll41604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defau{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defau{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defau{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll60803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%s0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%s0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%s0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll76802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%de");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%de");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%de", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll372()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finallyß[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finallyß[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finallyß[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll54101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\0\0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "\0\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll70101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%for");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%for");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%for", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll43101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%default");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%default");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%default", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll96401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%us[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%us[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%us[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll790()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%wh[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%wh[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%wh[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll78102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%new0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%new0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%new0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll73601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el|\"");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el|\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%el|\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll87502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el|$");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el|$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%el|$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll39003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el|\'");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el|\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%el|\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contina\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contina\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contina\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll74102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fi");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fi");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll87201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%newaA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%newaA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%newaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll65001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throwaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throwaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throwaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll33001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%breaaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%breaaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%breaaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll73202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%final{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%final{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%final{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll6802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%neA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%neA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%neA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll18701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whil");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whil");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whil", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll71903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%co");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%co");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%co", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll58303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%thý[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%thý[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%thý[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll799()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%elaA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%elaA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%elaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll309()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%th_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%th_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%th_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll72801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ret");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ret");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ret", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<<%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll150()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defineaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defineaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defineaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll85002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extend{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extend{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extend{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll18702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%loaA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%loaA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%loaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll80402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%breakaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%breakaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%breakaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll78003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ca0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ca0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ca0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll57501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defau");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defau");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defau", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll88802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ca");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ca");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll854()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fi0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fi0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fi0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll52601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fina<<\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fina<<\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fina<<\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll238()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el|@");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el|@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%el|@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll24304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finally{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finally{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finally{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll55503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catch{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catch{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catch{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll173()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%re");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%re");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%re", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll20101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%de_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%de_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%de_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll54901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01.00");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01.00");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01.00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll918()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%definedaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%definedaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%definedaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll15203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%false[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%false[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%false[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll80103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll34902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extend");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extend");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extend", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll18202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usin{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll69202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delete");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delete");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delete", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll86903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ela0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ela0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ela0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll92101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deleteaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deleteaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%deleteaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll75801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el|_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el|_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%el|_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll87601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%false{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%false{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%false{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll65101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extenaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extenaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extenaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll6803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%while[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%while[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%while[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll86()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%th{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%th{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%th{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll855()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%swA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll84302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll288()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%false");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%false");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%false", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll82802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%sw<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%sw<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%sw<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll10301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extendaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extendaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extendaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll89001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%while{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%while{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%while{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll74602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defin{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll72802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%us{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%us{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%us{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll13701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%th");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%th");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%th", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll65102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nuA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nuA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%nuA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll884()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%sw[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%sw[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%sw[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll53401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%sw{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%sw{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%sw{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll27301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catch");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catch");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catch", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll387()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usingaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usingaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usingaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll53303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaultaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaultaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaultaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll43903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%while");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%while");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%while", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll753()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaulaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaulaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaulaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll70403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switchaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switchaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switchaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll8601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finally<@");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finally<@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finally<@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll479()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%brea<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%brea<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%brea<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll60302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%us");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%us");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%us", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll42701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finally<_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finally<_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finally<_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll26505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ret0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ret0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ret0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll69002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\0!\'\0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\0!\'\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\0!\'\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll588()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01.z");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01.z");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01.z", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll76501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%doa@");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%doa@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%doa@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll83703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ne<\"");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ne<\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ne<\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll40801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ne<$");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ne<$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ne<$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll29002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ne<\'");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ne<\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ne<\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll25102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continuaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continuaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continuaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll57502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%sw");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%sw");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%sw", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll60303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nu0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nu0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%nu0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll37602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll432()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%e0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%e0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%e0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll61901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%retA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%retA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%retA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll40402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el`\"");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el`\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%el`\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll53002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el`$");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el`$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%el`$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll81902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el`\'");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el`\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%el`\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll686()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\0!\'\\\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\0!\'\\\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\0!\'\\\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll70803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll264()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll76502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01._");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01._");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01._", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll9501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%falseaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%falseaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%falseaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll538()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%caA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%caA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%caA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll235()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%final");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%final");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%final", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll54001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%wh{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%wh{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%wh{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll66901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%neA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%neA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%neA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll99502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\0!@");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\0!@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\0!@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll3201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%faA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%faA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%faA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll45()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%new0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%new0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%new0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll90601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%deA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll57305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finally");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finally");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finally", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll16803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el`@");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el`@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%el`@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll69203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%da\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%da\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%da\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll30001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%wh");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%wh");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%wh", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll296()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el`_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el`_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%el`_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll97802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finallyaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finallyaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finallyaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll32001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%breaA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%breaA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%breaA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll19901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01.\"");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01.\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01.\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll43403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01.$");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01.$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01.$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll69104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01.\'");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01.\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01.\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll83101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0:\"");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0:\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0:\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll516()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0:$");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0:$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0:$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll19003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0:\'");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0:\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0:\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll32801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%cA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%cA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%cA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll35202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0:_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0:_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0:_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll52102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%sw0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%sw0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%sw0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll35501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whilaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whilaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whilaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll60001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%sa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%sa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%sa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll36003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll40802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tryA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tryA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%tryA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll676()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switcA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switcA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switcA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll78301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%lo_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%lo_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%lo_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll70202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ret_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ret_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ret_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll870()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ela0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ela0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ela0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll37501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defiaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defiaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defiaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll81301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throwA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throwA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throwA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll282()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ifa0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ifa0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ifa0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll81603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%neaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%neaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%neaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll544()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%reA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%reA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%reA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll75004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fiA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fiA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fiA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll52701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switcaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switcaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switcaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll91102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ex0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ex0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ex0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll444()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%newa_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%newa_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%newa_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll3501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deletaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deletaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%deletaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll90102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continue{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continue{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continue{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll41401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%newaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%newaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%newaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll16702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tryaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tryaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%tryaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll755()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catcaa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catcaa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catcaa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll52903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll70604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defauaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defauaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defauaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll22803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%co00");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%co00");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%co00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll21601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%brA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%brA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%brA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll7501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%thaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%thaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%thaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll561()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%loaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%loaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%loaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll988()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%loaA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%loaA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%loaA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll70804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%swaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll89402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%retaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%retaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%retaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll25302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whaA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whaA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whaA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll2301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nuAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nuAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%nuAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll23101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tr0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tr0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%tr0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll22601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%e0a");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%e0a");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%e0a", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll22302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll28801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finaaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finaaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finaaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll8201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll412()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fora0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fora0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fora0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll7502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exteaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exteaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exteaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll79204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continue");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continue");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continue", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll815()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll73304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%thaA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%thaA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%thaA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll68503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ifaaA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ifaaA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ifaaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll219()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deleaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deleaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%deleaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll40602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continueaA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continueaA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continueaA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll74201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ba\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ba\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ba\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll91103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll36303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contiaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contiaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contiaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll48602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nuaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nuaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%nuaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll69902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%reaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%reaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%reaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll29701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usinAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usinAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usinAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll778()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%saA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%saA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%saA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll21104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fiAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fiAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fiAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll89901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%doaa{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%doaa{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%doaa{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll15()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whileAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whileAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whileAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll86701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%doaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%doaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%doaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll677()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contiA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contiA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contiA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll20803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%d0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%d0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%d0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll86401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delete0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delete0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delete0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll26702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%brea{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%brea{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%brea{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll40902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%doaA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%doaA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%doaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll641()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%foraa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%foraa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%foraa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll58102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ex00");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ex00");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ex00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll35101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%foaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%foaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%foaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll11301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ifa{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ifa{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ifa{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll6001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%faaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%faaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%faaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll42702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01:@>1\0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01:@>1\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01:@>1\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll52103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%braa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%braa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%braa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll59701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals00");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals00");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fals00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll33002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%deAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll329()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%falsaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%falsaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%falsaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll28601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%deaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll82702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extendAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extendAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extendAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll50401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%definedA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%definedA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%definedA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll18501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%e0A");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%e0A");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%e0A", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll51901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%new00");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%new00");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%new00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll2001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fiaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fiaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fiaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll97102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%sa[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%sa[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%sa[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll10803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%neAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%neAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%neAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll69401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%saA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%saA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%saA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll71402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%elaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%elaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%elaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll90901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catcA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catcA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catcA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll38202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%traa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%traa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%traa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll19702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%while00");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%while00");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%while00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll666()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whileaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whileaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whileaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll40603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01:$a");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01:$a");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01:$a", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll31802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01:$a\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01:$a\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01:$a\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll158()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01:$ar");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01:$ar");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01:$ar", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll11901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01:$ar\0\0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01:$ar\0\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\01:$ar\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll92001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contin0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contin0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contin0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll10602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%caaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%caaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%caaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll56202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%definaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%definaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%definaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll38203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%e0{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%e0{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%e0{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll16602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%foA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%foA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%foA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll39304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<<<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<<<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<<<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll5401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%breakA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%breakA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%breakA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll493()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaulA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaulA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaulA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll777()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%brea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%brea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%brea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll74802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%e0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%e0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%e0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll498()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ra\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ra\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ra\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll90301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ta\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ta\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ta\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll11601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ia\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ia\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ia\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll73602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%nA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll60401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tr00");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tr00");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%tr00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll22202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throwa0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throwa0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throwa0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll34503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finallaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finallaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finallaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll50301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll713()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usa0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usa0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usa0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll716()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%de0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%de0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%de0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll63301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defineaA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defineaA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defineaA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll23302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finalaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finalaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finalaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll39004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whilA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whilA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whilA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll63902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ifa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ifa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ifa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll365()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nu0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nu0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%nu0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll9101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el~\"");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el~\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%el~\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll26401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el~\'");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el~\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%el~\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll70102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaultA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaultA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaultA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll33703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el~@");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el~@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%el~@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll85104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exteaA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exteaA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%exteaA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll3603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el~_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el~_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%el~_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll981()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finallyaA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finallyaA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finallyaA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll629()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%raA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%raA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%raA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll200()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usingA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usingA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usingA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll500()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ex0AA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ex0AA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ex0AA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll85202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%lA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%lA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%lA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll3102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contiAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contiAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contiAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll53701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switchA\0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switchA\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switchA\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll54502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%de00");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%de00");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%de00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll16703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%rea_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%rea_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%rea_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll54604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nu_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nu_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%nu_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll41701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fiA0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fiA0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%fiA0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll11201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%wA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%wA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%wA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll8103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%s0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%s0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%s0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll37901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%uA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%uA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%uA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%coaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%coaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%coaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll58()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ifaa_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ifaa_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ifaa_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll26802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%braAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%braAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%braAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll23701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defauA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defauA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defauA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll54102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nu00");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nu00");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%nu00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll487()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switaA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switaA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switaA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll133()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usingAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usingAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usingAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll67501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catc0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll44902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delete00");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delete00");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%delete00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll1702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extenaA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extenaA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extenaA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll12401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%definedAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%definedAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%definedAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll350()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deleta0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deleta0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%deleta0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll275()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%wA0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%wA0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%wA0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll90602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%breakAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%breakAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%breakAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll81001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swa0A0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swa0A0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%swa0A0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll4101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%taa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%taa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%taa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll41004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ta{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ta{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ta{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%daA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%daA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%daA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll93()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%caaAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%caaAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%caaAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll22901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%falseA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%falseA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%falseA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll44001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ta");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ta");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll31602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%th0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%th0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%th0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll41702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll494()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swa0AA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swa0AA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%swa0AA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll43803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defiaA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defiaA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defiaA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll57306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extenaAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extenaAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extenaAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll30602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaulAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaulAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaulAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll31901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%inaA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%inaA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%inaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll83001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%falseAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%falseAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%falseAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll41201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extend0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extend0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%extend0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll11202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usinaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usinaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usinaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll33101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%re0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%re0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%re0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll63302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%caA0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%caA0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%caA0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll65901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%tA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll90902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whilAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whilAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whilAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll97901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defineaa0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defineaa0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defineaa0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll90401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nA{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nA{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%nA{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll28401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ex0_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ex0_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ex0_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll678()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%loAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%loAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%loAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll81302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%doa0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%doa0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%doa0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll27501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%el_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll10702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall\\@");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall\\@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finall\\@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll422()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall\\_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall\\_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finall\\_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll93003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall\\\"");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall\\\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finall\\\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll62402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall\\$");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall\\$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finall\\$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll230()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall\\\'\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall\\\'\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finall\\\'\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll34701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%thAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%thAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%thAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll75005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usA0A");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usA0A");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%usA0A", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll64903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%raA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%raA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%raA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll857()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll32202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continueAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continueAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continueAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll82602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc*@");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc*@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catc*@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll10703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc*\"\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc*\"\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catc*\"\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll60402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc*$");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc*$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catc*$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll80601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc*\'\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc*\'\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catc*\'\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll361()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc*_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc*_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%catc*_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll90103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%￠<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%￠<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%￠<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll87702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%nA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll285()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throwAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throwAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throwAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll78004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contaa0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contaa0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%contaa0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll42001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defin0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll19902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tryAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tryAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%tryAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll149()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whA0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whA0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%whA0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll2501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finalAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finalAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%finalAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll46702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switchaa0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switchaa0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switchaa0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll99001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%throAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll48103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%saAa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%saAa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%saAa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll35502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ia0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ia0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ia0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll91703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deleA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deleA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%deleA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll14602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%da[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%da[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%da[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll71601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%elAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%elAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%elAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll40903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switaAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switaAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%switaAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll74901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\0!\'\\\0\\\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\0!\'\\\0\\\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E\0!\'\\\0\\\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll81803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ifa0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ifa0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ifa0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll80202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ra[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ra[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ra[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll37201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%e00");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%e00");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%e00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll75201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%breaAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%breaAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%breaAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll77701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%defaAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll5504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deleAA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deleAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%deleAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll77102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E-\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E-\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E-\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll37202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E-0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E-0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E-0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll26703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E-0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E-0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E-0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll56701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E-00");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E-00");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%0E-00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll3801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ia<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ia<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%ia<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll62801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continuA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continuA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%continuA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeDocumentAll19501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?\"");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%?\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll22203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll81604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll55803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll80203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll7102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll51002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll34504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll22804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll60403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\f");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\f");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\f", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll29903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%@");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%@");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll80403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll36705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%Y");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%Y");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%Y", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll8104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll96302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll94602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\0<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "\0<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\0<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll10902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\f\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\f\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\f\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll64002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll66803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%@\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%@\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%@\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll1802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%1");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%1");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%1", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll2702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%@>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%@>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%@>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll27203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll59903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll34601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll31603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%￿");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%￿");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%￿", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll86102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%``");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%``");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%``", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll12801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%h");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%h");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%h", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll78901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<% ");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<% ");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<% ", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll32301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll58304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll80503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\"");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll80104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll11001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%a");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%a");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%a", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll31402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll74702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll98301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll59402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll26506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%$\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll5505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%$_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll40403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%$!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll70203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%b");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%b");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%b", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll77502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll55603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll85302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll54605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll87602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll56502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll10804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll63804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll60202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll2502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll16603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll58901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll720()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll49101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll77503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll83902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%::");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%::");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%::", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll84701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll68504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll71203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll23102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll67001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll82902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll37002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll92502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll60304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll15204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll53501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%i");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%i");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%i", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll19903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%if");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%if");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%if", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll57202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%in");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%in");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%in", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll54606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll82803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll73203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll57001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll38401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%j");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%j");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%j", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll14603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll77902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll56203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll87101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll16804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll59305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll52002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll90703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll92903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll71204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll92201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll11502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll41005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll78103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll34002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll83302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll31702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll18203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll79601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll41605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll39603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll44903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll7503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll76405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll21602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll27102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll72604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll77103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll2104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll72905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll10002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll94502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll6002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll68203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll62204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll20301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll26507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll72906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll39005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll55702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll8105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%p");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%p");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%p", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll56401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll12103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll52104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll77401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll61601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll29402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll66401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll99601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%</");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%</");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%</", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll6804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll94901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll5604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll67101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll29501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll88302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll18802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll86103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll68401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll42304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll20804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll94704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll53402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll79401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll14802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll40201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll91704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll3003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll76603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<<=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<<=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<<=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll90603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll65802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll91005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll51302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll71904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll44303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll99702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll76101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll22602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll31201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll94603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll52401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll55102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll97503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll11503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll33503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll96202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll76902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll94403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll27103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll62302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll32501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll73305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%x");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%x");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%x", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll97203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll36004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll49002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll29904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll70605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%r");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%r");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%r", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll46101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll14703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll16902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\'");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll28001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll85003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll63103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll43904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll46002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll30603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll62403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll66301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll36706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll64904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll26803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll67403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll43804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll53702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll13001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll76302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll10003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll39402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll62003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>>=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>>=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>>=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll34505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll56801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll31002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll91006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%><");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%><");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%><", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll43805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll57307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll88803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll58402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll45102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll86603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll85903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll28904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll7303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll85105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll85106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll68003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%q");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%q");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%q", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll93601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%z");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%z");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%z", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll68802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll57605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll89902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll98002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll83303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll56003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll90704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll14803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll75904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll42305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll99802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll50302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%??");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%??");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%??", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll7601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll35802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll37603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll54802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll68004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll51404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll40404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll35803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll45002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll55604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll37604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll60804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll55103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll63603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll56204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll75905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll2703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%##");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%##");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%##", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll87503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll62802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll16002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll63903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll70404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll83502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll60002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll19101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll63604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll90302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll31803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll88102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll67904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll33202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll37403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll46601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll46203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll98402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll14401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll60702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll25103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll16101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>$");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll62601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%y");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%y");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%y", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll83903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%c");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%c");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%c", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll59102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll45902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll52803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll86604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll56904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll21803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll36304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll35302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll53202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll45603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll97301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%>&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%>&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%>&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll29403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%d");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%d");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%d", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll22303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%do");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%do");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%do", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll36904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%:&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%:&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%:&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll10704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%!&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%!&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%!&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll16604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll97001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll18101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll62205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%<&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%<&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%<&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll50201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll57606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%?&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%?&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%?&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll21503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%`&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%`&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%`&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll70901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll16003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%f");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%f");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%f", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll60805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll17001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%e");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%e");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%e", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll91007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%#_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%#_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%#_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll85303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%t");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%t");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%t", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll69903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll16403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%u");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%u");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%u", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll99303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\n");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\n");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\n", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll72202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\t");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\t");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\t", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll22402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%v");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%v");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%v", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll9704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%s");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%s");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%s", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll611()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\v");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\v");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\v", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll91304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll32101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%g");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%g");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%g", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll96001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\r");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\r");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\r", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll31303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%w");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%w");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%w", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll40604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll8401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll84502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll97204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll15205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll57308()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll63402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll70204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll65502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll77903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll59702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll67905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll74502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll43604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll43605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll10805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll43905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll69904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll80902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll70405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll8701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll73701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll91602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll53304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll99803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll81703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%\\&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%\\&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%\\&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll96604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll51701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%l");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%l");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%l", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll40304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll8302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll41402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%&_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%&_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%&_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll79701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll74902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll74202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll57309()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll47701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%||");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%||");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%||", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll2302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll57503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll90903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll81903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll68204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll40305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll27401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll22502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll4701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll1803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll7901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll24602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll1202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll75802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll70304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll19502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll79302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll93705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll62004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll41902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll39803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%|&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%|&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%|&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll27204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll33504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll59201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll86605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%k");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%k");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%k", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll20903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll32002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll3302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll88103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll3703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll45301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll76406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll91501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll66804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll73306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll41102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll9201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll13202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll50802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll79303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll86702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll78104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll36707()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll71102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll24801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll85107()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll59306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll43404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll35901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll32402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll6302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll81704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll3704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll77002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%^&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%^&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%^&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll51405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll91402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll51003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll83102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%n");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%n");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%n", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll21105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%%_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%%_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%%_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll19603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll86402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll56302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll1301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll61803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll81605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll20805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll50402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll93801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll51204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll63104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll47102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll10402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll77603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll81904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll30604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll12903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll54803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll41103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll35203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll55201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll43704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll25801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll64003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll82903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~$");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll3004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll62501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%~&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%~&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%~&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll63805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll74803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll16704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll63002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll41606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll57607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll6601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll52105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll27902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll65503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll57608()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll17604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll96605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll5202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll19004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll6303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll48603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll46302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll17605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%**");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%**");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%**", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll22403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll45003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll27903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll42703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll83805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll68102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll59603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%*&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%*&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%*&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll87202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%m");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%m");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%m", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll99503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%}");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%}");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%}", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll25001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0x");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0x");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0x", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll39804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0b");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0b");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0b", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll74804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%o");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%o");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%o", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll75202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll64801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll37404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll55504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll70701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll28101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll72505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll19301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%./");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%./");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%./", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll41607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%..");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%..");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%..", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll44904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll13203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll57101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll20904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll91008()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll47203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll24501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll3604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll18902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll76903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll52501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll49602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll31304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll18301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll25902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll85203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll76803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%.&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%.&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%.&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll44802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll16404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll86203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll35102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll52003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll49202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll10806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll21401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll72701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll66701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll95201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll39201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll38901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll10705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll59403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%++");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%++");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%++", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll54303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll26704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll81606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll21202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll36708()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll42902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll44304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll39101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll98502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll88003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll36204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%+&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%+&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%+&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll44503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll17606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll35503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll45903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll40101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll82402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll5301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll46503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll27601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll26305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll69204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll92904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%--");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%--");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%--", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll74402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll64702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%->");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%->");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%->", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll91104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll89403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll78005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll81804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll1903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll59801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll69402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll91305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll39006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll65601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll48604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll44101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%-&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%-&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%-&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll73803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll16405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll65902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/!");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll03()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll10603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/`");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll57704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/|");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll59904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/~");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll60101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%//");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%//");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%//", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll34506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll62404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/?");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll69105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/]");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll98204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll80105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/,");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll70502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/>");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll35303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/+");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll26705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/^");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll33505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/)");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll84303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll42002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/*");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll42306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/(");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/=");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll42601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/#");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll57609()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/\\");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll53003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/;");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll421()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/%");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll76604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%/&");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%/&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%/&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll30703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll89404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%w[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%w[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%w[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll46504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%s[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%s[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%s[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll97902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%el[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll54503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tr[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tr[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%tr[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll118()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%sw[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%sw[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%sw[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll2002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fi[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fi[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fi[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll37502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%b[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%b[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%b[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll79205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%u[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%u[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%u[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll20501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%de[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%de[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%de[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll23902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%lo[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%lo[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%lo[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll45403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%br[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%br[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%br[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll35702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fa[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fa[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fa[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll21301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%th[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%th[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%th[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll97103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nu[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nu[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%nu[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll71103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%d[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%d[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%d[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll36905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%wh[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%wh[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%wh[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll11302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%f[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%f[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%f[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll23201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tr[\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tr[\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%tr[\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll97703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%us[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%us[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%us[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll93706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%co[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%co[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%co[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll80903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%t[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%t[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%t[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll95801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swit");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swit");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%swit", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll24305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swit\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swit\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%swit\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll31003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%switA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll70503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switc");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%switc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll73307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switc\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switc\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%switc\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll82002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switch");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switch");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%switch", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll51205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swit[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swit[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%swit[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll4002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swita");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swita");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%swita", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll69106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swit0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swit0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%swit0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll26306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swit{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swit{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%swit{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll70606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swit");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swit");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%swit", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll22805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switc0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switc0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%switc0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll54607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switca");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switca");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%switca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll13601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switc<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switc<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%switc<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll97803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switcA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switcA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%switcA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll41006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switc[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switc[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%switc[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll80504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switc{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switc{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%switc{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll61804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switc");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%switc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll18703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switc_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switc_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%switc_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll25203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swit_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swit_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%swit_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll40703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%brea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%brea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%brea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll63201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%brea\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%brea\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%brea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll4201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%breaA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%breaA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%breaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll78402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%brea[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%brea[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%brea[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll120()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%break");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%break");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%break", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll56503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%breaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%breaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%breaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll28702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%brea0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%brea0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%brea0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll84304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%brea{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%brea{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%brea{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll22806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%brea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%brea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%brea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll98003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%brea_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%brea_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%brea_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll24201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%re");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%re");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%re", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll7803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%co");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%co");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%co", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll58703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%br");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%br");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%br", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll511()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ne");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ne");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%ne", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll51902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%c");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%c");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%c", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll2901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll93004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll31305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E:");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll47302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E\01\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll85904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01.");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E\01.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll54304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01.\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01.\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E\01.\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll73804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01.0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01.0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E\01.0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll24402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01.:\0\0\0\0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01.:\0\0\0\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E\01.:\0\0\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll48104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%th");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%th");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%th", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll91306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defi");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defi");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll26307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defi\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defi\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defi\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll2105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defiA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defiA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll6502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defia");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defia");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll22002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll47001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defi0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defi0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defi0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll40704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defin\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll5101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defi<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defi<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defi<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll91705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defin0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll19604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defin<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll50603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%define");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%define");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%define", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll57705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defi{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defi{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defi{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll41608()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%definA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%definA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%definA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll16903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defina");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defina");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll68505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%define\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%define\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%define\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll45103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defineA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defineA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defineA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll8106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defi");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defi");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll81303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%definea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%definea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%definea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll56905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defin[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll33203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defin{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll16202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%define0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%define0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%define0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll7804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defined");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defined");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defined", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll54305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll91105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%define[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%define[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%define[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll58704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%define{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%define{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%define{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll73002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%define");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%define");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%define", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll23903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defi_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defi_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defi_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll72506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defin_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll97704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%lo");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%lo");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%lo", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll1904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01.0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01.0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E\01.0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll78302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%dele");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%dele");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%dele", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll21804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%dele\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%dele\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%dele\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll41007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deleA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deleA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%deleA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll40002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%dele0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%dele0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%dele0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll11101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%dele[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%dele[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%dele[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll72605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delet");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delet");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%delet", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll83503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delet\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delet\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%delet\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll5203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deletA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deletA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%deletA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll6402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deleta");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deleta");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%deleta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll93103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delete");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delete");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%delete", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll45404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%delea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll46505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delet{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delet{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%delet{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll5902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delet0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delet0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%delet0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll56702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delet");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delet");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%delet", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll62206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%dele{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%dele{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%dele{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll90104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%dele");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%dele");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%dele", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll26308()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%dele_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%dele_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%dele_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll19801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delet_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delet_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%delet_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll3802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tr");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tr");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%tr", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll94503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll56602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catc\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll93005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catcA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catcA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catcA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll16203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catca");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catca");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll424()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catc{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll18402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catch");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catch");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catch", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll48402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll32802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catc0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll8202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catc_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll76407()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%b");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%b");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%b", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll57706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exte");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exte");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%exte", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll87301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exte\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exte\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%exte\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll46703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exte0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exte0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%exte0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll22304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%extea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll83002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exte<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exte<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%exte<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll6701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exte{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exte{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%exte{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll37405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exte");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exte");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%exte", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll29003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exteA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exteA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%exteA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll17607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exten");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exten");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%exten", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll29004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exten\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exten\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%exten\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll63806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exten0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exten0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%exten0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll83704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extend");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extend");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%extend", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll26508()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extena");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extena");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%extena", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll3103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exten<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exten<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%exten<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll58103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extenA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extenA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%extenA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll91307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exten[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exten[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%exten[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll69003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exten{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exten{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%exten{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll6901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exten");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exten");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%exten", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll34801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exte_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exte_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%exte_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll59307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exten_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exten_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%exten_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll76201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%thro");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%thro");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%thro", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll19703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%thro\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%thro\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%thro\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll59308()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%throA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll47103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throw");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throw");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%throw", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll38204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%throa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll77202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%thro{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%thro{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%thro{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll50902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%thro");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%thro");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%thro", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll50102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%thro0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%thro0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%thro0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll81805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%thro_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%thro_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%thro_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll825()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fina");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fina");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll207()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fina\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fina\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fina\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll21106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%finaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll31703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%final");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%final");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%final", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll44703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fina0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fina0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fina0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll52904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finaA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finaA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%finaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll92905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fina<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fina<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fina<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll69601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%final\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%final\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%final\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll30201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%final0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%final0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%final0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll89301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fina{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fina{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fina{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll76303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finala");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finala");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%finala", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll88004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finalA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finalA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%finalA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll95701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%final[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%final[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%final[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll22003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%finall", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll95102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%finall\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll36906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finally");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finally");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%finally", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll21504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finalla");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finalla");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%finalla", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll28905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%final{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%final{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%final{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll80802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fina");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fina");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll96606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%finall0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll71403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%final");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%final");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%final", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll84901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finallA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finallA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%finallA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll86002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%finall[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll73502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%finall{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll38205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%finall", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll44803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fina_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fina_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fina_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll90001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%f");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%f");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%f", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll61203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ca");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ca");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%ca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll61702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$arg");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$arg");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%$arg", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll21107()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$arg\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$arg\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%$arg\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll96903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$arg0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$arg0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%$arg0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll25204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$arg<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$arg<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%$arg<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll26001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$arg{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$arg{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%$arg{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll21805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$argA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$argA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%$argA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll93006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$args");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$args");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%$args", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll84101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$arg");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$arg");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%$arg", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll68703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%$arg_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%$arg_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%$arg_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll27205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\0\"\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\0\"\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E\0\"\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll36005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\0\"\"");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\0\"\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E\0\"\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll34903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll47502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%finall_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll16501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%el", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll55901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whil");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whil");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%whil", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll81203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whil\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whil\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%whil\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll90201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whil0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whil0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%whil0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll61204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whilA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whilA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%whilA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll77104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whil<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whil<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%whil<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll67906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whila");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whila");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%whila", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll56303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whil[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whil[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%whil[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll2106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whil{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whil{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%whil{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll22503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whil");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whil");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%whil", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll13402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%while");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%while");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%while", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll39604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whil_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whil_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%whil_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll3303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%final_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%final_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%final_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll90402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%s");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%s");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%s", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll82003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%define_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%define_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%define_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll88303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%r");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%r");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%r", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll25303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%d");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%d");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%d", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll30502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\010");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\010");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E\010", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll44704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01E");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01E");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E\01E", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll20905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%de");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%de");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%de", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll52804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nu");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nu");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%nu", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll60305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fals", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll43405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fals\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll17701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fals0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll45405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%false");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%false");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%false", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll12904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fals<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll14604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%falsA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%falsA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%falsA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll80301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fals[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll74403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%falsa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%falsa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%falsa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll72301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fals{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll1905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fals", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll61301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fals_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll82804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%us");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%us");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%us", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll30102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%cont");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%cont");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%cont", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll57401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%cont\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%cont\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%cont\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll91009()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conta");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conta");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%conta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll58705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%cont0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%cont0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%cont0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll51406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%contA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll9705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conti");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conti");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%conti", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll26509()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%cont[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%cont[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%cont[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll18502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conti\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conti\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%conti\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll31902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conti0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conti0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%conti0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll9401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contia");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contia");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%contia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll14501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conti<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conti<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%conti<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll58305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conti{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conti{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%conti{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll51802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contin");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contin");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%contin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll77604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contin\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contin\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%contin\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll56906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll43001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contin0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contin0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%contin0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll95601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continu");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continu");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continu", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll88703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continu\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continu\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continu\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll30704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%cont{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%cont{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%cont{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll80803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contina");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contina");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%contina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll51206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contin<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contin<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%contin<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll74703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continuA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continuA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continuA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll93104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continu[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continu[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continu[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll16805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continua");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continua");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll88704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continu{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continu{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continu{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll35401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contin[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contin[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%contin[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll34702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contiA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contiA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%contiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll94705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%cont");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%cont");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%cont", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll44002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contin{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contin{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%contin{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll1703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conti");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conti");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%conti", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll64601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continu0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continu0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continu0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll55804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continu");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continu");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continu", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll43406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continue");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continue");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continue", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll42501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contin");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contin");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%contin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll65701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conti_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conti_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%conti_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll51407()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%cont_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%cont_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%cont_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll10201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contin_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contin_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%contin_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll98205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ex");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ex");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%ex", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll69205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continu_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continu_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continu_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll69107()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%e");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%e");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%e", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll59905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\010\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\010\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E\010\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll96904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll74103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defa\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll68205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defau");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defau");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defau", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll25304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll64905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defa[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defa[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defa[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll73103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defa0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defa0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defa0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll83806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defau\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defau\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defau\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll92503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll93707()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaua");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaua");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defaua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll63605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defa{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defa{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defa{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll836()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defauA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defauA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defauA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll71701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll36601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defau[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defau[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defau[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll63403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaul");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaul");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defaul", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll73104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defau0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defau0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defau0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll10302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaul\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaul\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defaul\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll65202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaulA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaulA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defaulA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll75101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%default");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%default");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%default", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll81806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defau{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defau{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defau{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll74104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaul[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaul[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defaul[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll28906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaul0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaul0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defaul0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll10903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defau");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defau");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defau", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll60806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaula");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaula");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defaula", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll26102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaul{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaul{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defaul{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll54201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaul");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaul");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defaul", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll52602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defa_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defa_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defa_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll30301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaul_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaul_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defaul_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll82301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defau_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defau_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defau_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll92701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%sw");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%sw");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%sw", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll33401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%wh");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%wh");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%wh", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll1601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%usin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll22103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%usin\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll52702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usinA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usinA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%usinA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll34301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%usin0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll67404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%usin[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll56004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usina");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usina");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%usina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll78006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%usin{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll81204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%using");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%using");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%using", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll78403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%usin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll65203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%usin_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll73805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01E\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01E\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E\01E\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll86003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01E0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01E0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E\01E0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll42903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01E-");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01E-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E\01E-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll82703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fi");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fi");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll72907()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fo");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fo");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fo", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll17101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%u");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%u");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%u", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll86904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ne\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ne\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%ne\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll21505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%brea\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%brea\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%brea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll66805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%cont\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%cont\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%cont\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll79103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fals\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fals\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fals\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll27801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whil\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whil\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%whil\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll55703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%finall\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll4301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%el\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll8303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swit\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swit\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%swit\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll33003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tr\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tr\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%tr\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll79104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01:@");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01:@");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E\01:@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll64703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%usin\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll30002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%dele\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%dele\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%dele\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll90705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defa\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll7304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\0\"\0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\0\"\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E\0\"\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll19704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\0\"\\\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\0\"\\\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E\0\"\\\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll24306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catc\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catc\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catc\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll12905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%th\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%th\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%th\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll43705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contin\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contin\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%contin\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll44504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nu\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nu\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%nu\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll26901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%define\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%define\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%define\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll45501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%de\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%de\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%de\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll80204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defin\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defin\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defin\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll5506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%sw\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%sw\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%sw\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll47601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continu\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continu\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continu\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll36801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ca\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ca\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%ca\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll46704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exten\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exten\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%exten\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll97104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%us\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%us\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%us\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll23303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switc\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switc\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%switc\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll30103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%thro\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%thro\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%thro\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll82201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%try");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%try");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%try", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll80404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exte\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exte\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%exte\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll2801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fa\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll41302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%i");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%i");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%i", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll51207()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%co\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%co\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%co\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll26103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%lo\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%lo\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%lo\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll73105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fi\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fi\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fi\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll40605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ex\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ex\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%ex\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll5903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%wh\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%wh\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%wh\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll67907()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaul\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaul\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defaul\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll62102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%br\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%br\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%br\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll46204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%re\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%re\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%re\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll26201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%final\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%final\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%final\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll72606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defau\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defau\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defau\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll99101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fo\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fo\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fo\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll26510()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defi\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defi\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defi\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll18204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fina\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fina\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fina\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll15402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conti\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conti\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%conti\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll7701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%w");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%w");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%w", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll70305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delet\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delet\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%delet\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll82603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%e\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%e\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%e\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll24307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%wha");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%wha");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%wha", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll94102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%conta");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%conta");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%conta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll47303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defia");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defia");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll32203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%loa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%loa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%loa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll81401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%r\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%r\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%r\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll70001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%rea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%rea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%rea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll25601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%faa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%faa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%faa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll9502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%try\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%try\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%try\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll12104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%l");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%l");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%l", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll73603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaula");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaula");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defaula", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll97705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%f\0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%f\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%f\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll45802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contina");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contina");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%contina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll13801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%foa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%foa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%foa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll61902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%bra");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%bra");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%bra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll83401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%s\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%s\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%s\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll49603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fa{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fa{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fa{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll48403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%definea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%definea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%definea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll20202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%delea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll48301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nua");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nua");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%nua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll8801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%define0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%define0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%define0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll36709()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catch\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catch\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catch\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll37302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catcha");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catcha");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catcha", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll19005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catch{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catch{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catch{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll34401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catch");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catch");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catch", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll95402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catch0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catch0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catch0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll80001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catchA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catchA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catchA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll78007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catch\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catch\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catch\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll77605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catch_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catch_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catch_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll99304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swita");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swita");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%swita", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll41502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01E-\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01E-\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E\01E-\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll14201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01E-0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01E-0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E\01E-0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll43706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%t");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%t");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%t", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll43707()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%finaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll88902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continua");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continua");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll95502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%u\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%u\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%u\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll42801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catca");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catca");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll68901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%n");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%n");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%n", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll61703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%deleta");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%deleta");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%deleta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll40003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%whila");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%whila");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%whila", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll96402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tra");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tra");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%tra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll9801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%co0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%co0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%co0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll24001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finalA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finalA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%finalA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll48105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throw\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throw\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%throw\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll27302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throwa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throwa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%throwa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll6403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throw0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throw0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%throw0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll11203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throwA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throwA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%throwA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll83807()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throw[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throw[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%throw[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll44505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throw{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throw{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%throw{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll11701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throw");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throw");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%throw", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll12105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throw_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throw_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%throw_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll5507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throw\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throw\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%throw\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll94706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%extea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll54002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ela");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ela");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%ela", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll52905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%falsa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%falsa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%falsa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll88601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tr{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tr{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%tr{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll12201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extena");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extena");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%extena", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll99002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%nea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll45604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catchA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catchA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catchA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll91706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%wh0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%wh0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%wh0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll11602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continuA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continuA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continuA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll14704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continue\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continue\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continue\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll82604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continuea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continuea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continuea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll21701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continue0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continue0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continue0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll99305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continue<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continue<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continue<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll64201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continueA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continueA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continueA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll3605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continue{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continue{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continue{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll12502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continue");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continue");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continue", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll86204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continue\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continue\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continue\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll98403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continue_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continue_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continue_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll53305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01E-0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01E-0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E\01E-0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll91201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0E\01E-00");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0E\01E-00");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0E\01E-00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll83201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%reA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%reA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%reA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll51803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defined\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defined\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defined\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll5508()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defined0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defined0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defined0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll88005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defined<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defined<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defined<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll96203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defineda");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defineda");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defineda", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll15901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%definedA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%definedA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%definedA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll72507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defined[");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defined[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defined[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll73401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defined{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defined{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defined{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll96607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defined");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defined");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defined", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll5605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defined_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defined_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defined_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll99703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defined\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defined\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defined\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll840()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%trya");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%trya");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%trya", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll73204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fina{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fina{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fina{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll85108()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%sw0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%sw0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%sw0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll62207()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%cont{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%cont{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%cont{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll49203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defau0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defau0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defau0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll72508()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defi{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defi{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defi{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll29202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catchA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catchA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catchA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll85004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continuea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continuea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continuea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll32204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continueA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continueA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continueA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll87703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaul{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaul{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defaul{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll93708()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ex0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ex0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%ex0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll75906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%lo0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%lo0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%lo0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll3104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll57901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%try{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%try{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%try{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll58601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%finall0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll78501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continu0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continu0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continu0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll16302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contia");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contia");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%contia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll41801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%￿0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%￿0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%￿0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll31604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%throA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll71502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%lo{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%lo{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%lo{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll41303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%usin0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll19006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switch\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switch\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%switch\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll32403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switcha");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switcha");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%switcha", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll58501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switch{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switch{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%switch{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll5606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switch");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switch");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%switch", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll29702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switchA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switchA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%switchA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll36305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switch0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switch0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%switch0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll70805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switch\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switch\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%switch\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll85204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switch_");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switch_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%switch_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll25903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tr");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tr");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%tr", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll22104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%d\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%d\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%d\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll39007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%la");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%la");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%la", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll38801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%caa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%caa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%caa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll85601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%falsa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%falsa\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%falsa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll21108()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%definA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%definA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%definA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll43606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%if");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%if");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%if", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll9102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ifa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ifa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%ifa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll83705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%extena\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%extena\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%extena\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll76408()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%try");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%try");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%try", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll37003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%br{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%br{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%br{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll76001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%tha");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%tha");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%tha", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll37101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll19401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%lo");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%lo");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%lo", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll75006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%el{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll67502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fia");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fia");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll12601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%dea");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%dea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%dea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll94301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defi");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defi");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll20602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%wa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%wa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%wa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll52805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%el");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%el");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%el", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll56907()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%breaa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%breaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%breaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll85801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%nua\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%nua\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%nua\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll50803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%0e");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%0e");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%0e", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll21203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finall0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finall0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%finall0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll59001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%finalA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%finalA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%finalA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll96905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaul");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaul");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defaul", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll9001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continue0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continue0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continue0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll14705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%exa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%exa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%exa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll83706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%na");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%na");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%na", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll16806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%define{");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%define{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%define{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll39305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<\0<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<\0<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<\0<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll61001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%co0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%co0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%co0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll2107()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%usin<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll4102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catch0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catch0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catch0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll50604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%doa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%doa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%doa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll16705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%defaua");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%defaua");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%defaua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll53306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ifa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ifa\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%ifa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll71905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%ta");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%ta");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%ta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll71001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%throa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%throa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%throa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll75701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%doa\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%doa\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%doa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll04()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%delea\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%delea\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%delea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll37902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%fina");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%fina");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%fina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll45201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%usa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll99401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%swa");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%swa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%swa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll98503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%contia\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%contia\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%contia\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll4003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%cont");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%cont");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%cont", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll86905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usin0\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usin0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%usin0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll90502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%switca");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%switca");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%switca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll11402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%catcA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%catcA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%catcA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll9706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%definA\0");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%definA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%definA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll65301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%usinA");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%usinA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%usinA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
[Priority(2147483647)]
public void TokenizeDocumentAll79206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%continu<");
    AphidLexerTests.TokenizeDocumentAll(aphidLexer, "<%continu<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%continu<", aphidLexer.Text);
}
    }
}
