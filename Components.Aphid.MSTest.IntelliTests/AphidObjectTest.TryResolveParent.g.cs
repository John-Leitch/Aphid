using System.Collections.Generic;
using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Components.Aphid.TypeSystem;
// <copyright file="AphidObjectTest.TryResolveParent.g.cs">Copyright Â© AutoSec Tools LLC 2019</copyright>
// <auto-generated>
// This file contains automatically generated tests.
// Do not modify this file manually.
// 
// If the contents of this file becomes outdated, you can delete it.
// For example, if it no longer compiles.
// </auto-generated>
using System;
using Microsoft.Pex.Engine.Exceptions;

namespace Components.Aphid.TypeSystem.Tests
{
    public partial class AphidObjectTest
    {

[TestMethod]
[PexGeneratedBy(typeof(AphidObjectTest))]
[PexRaisedException(typeof(ArgumentNullException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(ArgumentNullException))]
public void TryResolveParentThrowsArgumentNullException54101()
{
    object o;
    AphidObject aphidObject;
    o = AphidObjectFactory.Create();
    aphidObject = this.TryResolveParent((AphidObject)o, (string)null);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidObjectTest))]
[PexRaisedException(typeof(ArgumentNullException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(ArgumentNullException))]
public void TryResolveParentThrowsArgumentNullException74603()
{
    object o;
    AphidObject aphidObject;
    o = AphidObjectFactory.Create(4);
    aphidObject = this.TryResolveParent((AphidObject)o, (string)null);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidObjectTest))]
[PexRaisedException(typeof(ArgumentNullException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(ArgumentNullException))]
public void TryResolveParentThrowsArgumentNullException74602()
{
    object o;
    AphidObject aphidObject;
    o = AphidObjectFactory.Create(608);
    aphidObject = this.TryResolveParent((AphidObject)o, (string)null);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidObjectTest))]
[PexRaisedException(typeof(ArgumentNullException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(ArgumentNullException))]
public void TryResolveParentThrowsArgumentNullException541()
{
    object o;
    AphidObject aphidObject;
    o = AphidObjectFactory.Create(2);
    aphidObject = this.TryResolveParent((AphidObject)o, (string)null);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidObjectTest))]
[PexRaisedException(typeof(ArgumentNullException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(ArgumentNullException))]
public void TryResolveParentThrowsArgumentNullException74601()
{
    object o;
    AphidObject aphidObject;
    o = AphidObjectFactory.Create(1);
    aphidObject = this.TryResolveParent((AphidObject)o, (string)null);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidObjectTest))]
public void TryResolveParent880()
{
    object o;
    AphidObject aphidObject;
    o = AphidObjectFactory.Create(170);
    aphidObject = this.TryResolveParent((AphidObject)o, "");
    Assert.IsNull((object)aphidObject);
    Assert.IsNotNull(o);
    Assert.AreEqual<bool>(true, ((AphidObject)o).IsScalar);
    Assert.AreEqual<bool>(false, ((AphidObject)o).IsComplex);
    Assert.AreEqual<bool>(true, ((AphidObject)o).IsComplexitySet);
    Assert.IsNotNull(((AphidObject)o).Value);
    Assert.IsNull(((AphidObject)o).Parent);
    Assert.IsNotNull(((Dictionary<string, AphidObject>)o).Comparer);
    Assert.AreEqual<int>(0, ((Dictionary<string, AphidObject>)o).Count);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidObjectTest))]
[PexRaisedException(typeof(ArgumentNullException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(ArgumentNullException))]
public void TryResolveParentThrowsArgumentNullException725()
{
    object o;
    AphidObject aphidObject;
    o = AphidObjectFactory.Create(0);
    aphidObject = this.TryResolveParent((AphidObject)o, (string)null);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidObjectTest))]
[PexRaisedException(typeof(ArgumentNullException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(ArgumentNullException))]
public void TryResolveThrowsArgumentNullException684()
{
    object o;
    bool b;
    o = AphidObjectFactory.Create(2);
    AphidObject aphidObject = (AphidObject)null;
    b = this.TryResolve((AphidObject)o, (string)null, out aphidObject);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidObjectTest))]
[PexRaisedException(typeof(ArgumentNullException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(ArgumentNullException))]
public void TryResolveThrowsArgumentNullException581()
{
    object o;
    bool b;
    o = AphidObjectFactory.Create(0);
    AphidObject aphidObject = (AphidObject)null;
    b = this.TryResolve((AphidObject)o, (string)null, out aphidObject);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidObjectTest))]
public void TryResolve36()
{
    object o;
    bool b;
    o = AphidObjectFactory.Create(0);
    AphidObject aphidObject = (AphidObject)null;
    b = this.TryResolve((AphidObject)o, "", out aphidObject);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull(o);
    Assert.AreEqual<bool>(true, ((AphidObject)o).IsScalar);
    Assert.AreEqual<bool>(false, ((AphidObject)o).IsComplex);
    Assert.AreEqual<bool>(true, ((AphidObject)o).IsComplexitySet);
    Assert.IsNotNull(((AphidObject)o).Value);
    Assert.IsNull(((AphidObject)o).Parent);
    Assert.IsNotNull(((Dictionary<string, AphidObject>)o).Comparer);
    Assert.AreEqual<int>(0, ((Dictionary<string, AphidObject>)o).Count);
    Assert.IsNull((object)aphidObject);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidObjectTest))]
[PexRaisedException(typeof(ArgumentNullException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(ArgumentNullException))]
public void TryResolveThrowsArgumentNullException58101()
{
    object o;
    bool b;
    o = AphidObjectFactory.Create(269);
    AphidObject aphidObject = (AphidObject)null;
    b = this.TryResolve((AphidObject)o, (string)null, out aphidObject);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidObjectTest))]
[PexRaisedException(typeof(ArgumentNullException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(ArgumentNullException))]
public void TryResolveThrowsArgumentNullException68401()
{
    object o;
    bool b;
    o = AphidObjectFactory.Create();
    AphidObject aphidObject = (AphidObject)null;
    b = this.TryResolve((AphidObject)o, (string)null, out aphidObject);
}
    }
}
