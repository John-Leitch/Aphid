using System.Reflection;
using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Components.Aphid.Parser;
using System.Collections.Generic;
using Components.Aphid.Lexer;
// <copyright file="AphidParserTest.ParseFunctionExpression.g.cs">Copyright Â© AutoSec Tools LLC 2019</copyright>
// <auto-generated>
// This file contains automatically generated tests.
// Do not modify this file manually.
// 
// If the contents of this file becomes outdated, you can delete it.
// For example, if it no longer compiles.
// </auto-generated>
using System;
using Microsoft.Pex.Engine.Exceptions;
using Microsoft.Pex.Framework;

namespace Components.Aphid.Parser.Tests
{
    public partial class AphidParserTest
    {
        [PexMethod]
        public AphidExpression ParseFunctionExpression(AphidParser parser)
            => parser.ParseExpression();


        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63524()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator150, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63525()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator233, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63526()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator291, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63527()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator274, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63528()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator212, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63529()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator315, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63530()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator279, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63531()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator168, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63532()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator304, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63533()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator185, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63534()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator188, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63535()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator305, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63536()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator286, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63537()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator223, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63538()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator140, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63539()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator231, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63540()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator162, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63541()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator307, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63542()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator132, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63543()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator292, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63544()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator272, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63545()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator270, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63546()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator135, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63547()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator178, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63548()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator276, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63549()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator192, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63550()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator240, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63551()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator226, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63552()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator214, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63553()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator130, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63554()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator262, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63555()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator256, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63556()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator144, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63557()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator271, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63558()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator196, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63559()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator287, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63560()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator224, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63561()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator165, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63562()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator234, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63563()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator171, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63564()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator299, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63565()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator306, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63566()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator145, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63567()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator142, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63568()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator193, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63569()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator239, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63570()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator169, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63571()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator182, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63572()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator136, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63573()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator199, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63574()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator293, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63575()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator200, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63576()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator170, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63577()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator296, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63578()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator204, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63579()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator202, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63580()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator227, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63581()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator241, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException544()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1 = new AphidToken(AphidTokenType.LeftParenthesis, "", default(int))
              ;
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63582()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator149, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63583()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator205, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63584()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator184, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63585()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator277, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63586()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator302, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63587()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator245, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63588()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator253, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63589()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator294, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63590()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator146, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63591()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator154, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63592()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator175, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63593()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator138, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63594()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator209, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63595()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator273, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63596()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator313, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63597()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator282, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63598()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator250, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException63599()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator312, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635100()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator308, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635101()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator167, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635102()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator158, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635103()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator190, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635104()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator225, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635105()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator156, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635106()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator161, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635107()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator201, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635108()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator219, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635109()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator174, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635110()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator203, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635111()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator314, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635112()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator194, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635113()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator295, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635114()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator173, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635115()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator217, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635116()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator283, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635117()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator244, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635118()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator163, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635119()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator176, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635120()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator220, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635121()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator257, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635122()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator261, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635123()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator159, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635124()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator160, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635125()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator268, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635126()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator195, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635127()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator285, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635128()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator317, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635129()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator213, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635130()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator301, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635131()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator237, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635132()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator263, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635133()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator236, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635134()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator252, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635135()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator281, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635136()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator129, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635137()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator153, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635138()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator269, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635139()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator254, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635140()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator264, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635141()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator187, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635142()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator177, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635143()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator243, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635144()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator258, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635145()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator157, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635146()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator303, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635147()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator151, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635148()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator265, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635149()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator290, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635150()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator309, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635151()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator210, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635152()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator247, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635153()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator221, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635154()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator229, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635155()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator181, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635156()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator228, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635157()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator311, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635158()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator166, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635159()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator249, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635160()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator267, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635161()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator189, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635162()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator208, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635163()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator137, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635164()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator206, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635165()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator260, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635166()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator186, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635167()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator248, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635168()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator179, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635169()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator211, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635170()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator216, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635171()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator246, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635172()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator259, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635173()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator230, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635174()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator232, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635175()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator148, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635176()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator235, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635177()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator141, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635178()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator215, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635179()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator289, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635180()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator288, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635181()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator139, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635182()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator131, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635183()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator147, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635184()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator207, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635185()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator242, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635186()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator284, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635187()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator238, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635188()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator180, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635189()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator278, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635190()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator117, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635191()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator027, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635192()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator054, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635193()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator107, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635194()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator059, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635195()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator076, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635196()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator065, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635197()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator012, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635198()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator101, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635199()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator119, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635200()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator056, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635201()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator077, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635202()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator099, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635203()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator007, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635204()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator088, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635205()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator108, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635206()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator024, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635207()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator083, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635208()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator072, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635209()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator079, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635210()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator067, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635211()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator074, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635212()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator078, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635213()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator022, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635214()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator018, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635215()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator009, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635216()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator019, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635217()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator015, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635218()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator057, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635219()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator035, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635220()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator070, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635221()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator122, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635222()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator069, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635223()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator071, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635224()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator010, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635225()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator025, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635226()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator013, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635227()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator128, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635228()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator080, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635229()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator123, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635230()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator041, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635231()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator068, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635232()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator073, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635233()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator075, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635234()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator037, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635235()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator038, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635236()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator063, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635237()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator066, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635238()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator081, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635239()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator082, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635240()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator084, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635241()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator103, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635242()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator064, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635243()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator098, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635244()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator121, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635245()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator005, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635246()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator085, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635247()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator126, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635248()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator086, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635249()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator036, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635250()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator091, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635251()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator011, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635252()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator120, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635253()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator042, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635254()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator105, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635255()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator014, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635256()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator090, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635257()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator058, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635258()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator039, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635259()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator016, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635260()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator050, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635261()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator043, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635262()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator096, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635263()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator029, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635264()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator100, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635265()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator052, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635266()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator053, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635267()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator020, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635268()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator092, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635269()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator023, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635270()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator124, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635271()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator008, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635272()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator104, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635273()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator125, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635274()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator055, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635275()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator049, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635276()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator033, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635277()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator017, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635278()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator004, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635279()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator087, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635280()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator048, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635281()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator115, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635282()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator061, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635283()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator102, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635284()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator060, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635285()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator095, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635286()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator106, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635287()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator040, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635288()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator112, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635289()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator044, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635290()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator093, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635291()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator028, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635292()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator045, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635293()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator051, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635294()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator062, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635295()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator094, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635296()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator109, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635297()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator097, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635298()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator006, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635299()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator030, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635300()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator047, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635301()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator034, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635302()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator026, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635303()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator114, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635304()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator127, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635305()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator031, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635306()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator032, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635307()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator113, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635308()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator116, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635309()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator111, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635310()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator021, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635311()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator089, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635312()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator118, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635313()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator046, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException635314()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.CustomOperator110, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpression676()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1 = new AphidToken(AphidTokenType.thisKeyword, "", default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
            Assert.IsNotNull((object)aphidExpression);
            Assert.IsNull(aphidExpression.Context);
            Assert.AreEqual<int>(-1, aphidExpression.Index);
            Assert.AreEqual<int>(-1, aphidExpression.Length);
            Assert.IsNotNull((object)aphidParser);
            Assert.AreEqual<AphidTokenType>
                (AphidTokenType.None, aphidParser.CurrentToken.TokenType);
            Assert.AreEqual<string>((string)null, aphidParser.CurrentToken.Lexeme);
            Assert.AreEqual<int>(0, aphidParser.CurrentToken.Index);
            Assert.AreEqual<bool>(true, aphidParser.UseImplicitReturns);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException417()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1 = new AphidToken(AphidTokenType.HexNumber, null, default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpression316()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.ImplicitArgumentOperator, "", int.MinValue);
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
            Assert.IsNotNull((object)aphidExpression);
            Assert.IsNull(aphidExpression.Context);
            Assert.AreEqual<int>(-1, aphidExpression.Index);
            Assert.AreEqual<int>(-1, aphidExpression.Length);
            Assert.IsNotNull((object)aphidParser);
            Assert.AreEqual<AphidTokenType>
                (AphidTokenType.None, aphidParser.CurrentToken.TokenType);
            Assert.AreEqual<string>((string)null, aphidParser.CurrentToken.Lexeme);
            Assert.AreEqual<int>(int.MinValue, aphidParser.CurrentToken.Index);
            Assert.AreEqual<bool>(true, aphidParser.UseImplicitReturns);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException439()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[3];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1 = new AphidToken(AphidTokenType.Identifier, "", default(int));
            aphidTokens[1] = s1;
            AphidToken s2 = new AphidToken(AphidTokenType.LeftBrace, null, default(int));
            aphidTokens[2] = s2;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException593()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[3];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1 = new AphidToken(AphidTokenType.Identifier, "", default(int));
            aphidTokens[1] = s1;
            AphidToken s2
               = new AphidToken(AphidTokenType.definedKeyword, null, default(int));
            aphidTokens[2] = s2;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException448()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[3];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1 = new AphidToken(AphidTokenType.Identifier, "", default(int));
            aphidTokens[1] = s1;
            AphidToken s2
               = new AphidToken(AphidTokenType.MultiplicationOperator, null, default(int));
            aphidTokens[2] = s2;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException192()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[3];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1 = new AphidToken(AphidTokenType.Identifier, "", default(int));
            aphidTokens[1] = s1;
            AphidToken s2
               = new AphidToken(AphidTokenType.LeftParenthesis, null, default(int));
            aphidTokens[2] = s2;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException717()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[3];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1 = new AphidToken(AphidTokenType.Identifier, "", default(int));
            aphidTokens[1] = s1;
            AphidToken s2
               = new AphidToken(AphidTokenType.MemberOperator, null, default(int));
            aphidTokens[2] = s2;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException342()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[3];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1 = new AphidToken(AphidTokenType.Identifier, "", default(int));
            aphidTokens[1] = s1;
            AphidToken s2 = new AphidToken(AphidTokenType.Identifier, null, default(int));
            aphidTokens[2] = s2;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException895()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[3];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1 = new AphidToken(AphidTokenType.Identifier, "", default(int));
            aphidTokens[1] = s1;
            AphidToken s2 = new AphidToken(AphidTokenType.LeftBracket, null, default(int));
            aphidTokens[2] = s2;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException44801()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[3];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1 = new AphidToken(AphidTokenType.Identifier, "", default(int));
            aphidTokens[1] = s1;
            AphidToken s2
               = new AphidToken(AphidTokenType.DivisionOperator, null, default(int));
            aphidTokens[2] = s2;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException767()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[3];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1 = new AphidToken(AphidTokenType.Identifier, "", default(int));
            aphidTokens[1] = s1;
            AphidToken s2
               = new AphidToken(AphidTokenType.AdditionOperator, null, default(int));
            aphidTokens[2] = s2;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException771()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[3];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1 = new AphidToken(AphidTokenType.Identifier, "", default(int));
            aphidTokens[1] = s1;
            AphidToken s2 = new AphidToken(AphidTokenType.ShiftLeft, null, default(int));
            aphidTokens[2] = s2;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException136()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[3];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1 = new AphidToken(AphidTokenType.Identifier, "", default(int));
            aphidTokens[1] = s1;
            AphidToken s2
               = new AphidToken(AphidTokenType.BinaryAndOperator, null, default(int));
            aphidTokens[2] = s2;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException473()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[3];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1 = new AphidToken(AphidTokenType.breakKeyword, "", default(int));
            aphidTokens[1] = s1;
            AphidToken s2
               = new AphidToken(AphidTokenType.definedKeyword, null, default(int));
            aphidTokens[2] = s2;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException354()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[3];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1 = new AphidToken(AphidTokenType.thisKeyword, "", default(int));
            aphidTokens[1] = s1;
            AphidToken s2 = new AphidToken(AphidTokenType.XorOperator, null, default(int));
            aphidTokens[2] = s2;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException6()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[3];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.ImplicitArgumentOperator, "", default(int));
            aphidTokens[1] = s1;
            AphidToken s2
               = new AphidToken(AphidTokenType.BinaryOrOperator, null, default(int));
            aphidTokens[2] = s2;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpression241()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[3];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1 = new AphidToken(AphidTokenType.Identifier, "", default(int));
            aphidTokens[1] = s1;
            AphidToken s2 = new AphidToken(AphidTokenType.definedKeyword, "", default(int));
            aphidTokens[2] = s2;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
            Assert.IsNotNull((object)aphidExpression);
            Assert.IsNull(aphidExpression.Context);
            Assert.AreEqual<int>(-1, aphidExpression.Index);
            Assert.AreEqual<int>(-1, aphidExpression.Length);
            Assert.IsNotNull((object)aphidParser);
            Assert.AreEqual<AphidTokenType>
                (AphidTokenType.None, aphidParser.CurrentToken.TokenType);
            Assert.AreEqual<string>((string)null, aphidParser.CurrentToken.Lexeme);
            Assert.AreEqual<int>(0, aphidParser.CurrentToken.Index);
            Assert.AreEqual<bool>(true, aphidParser.UseImplicitReturns);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException68()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[2];
            AphidToken s0
               = new AphidToken(AphidTokenType.LeftParenthesis, null, default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.RightParenthesis, null, default(int));
            aphidTokens[1] = s1;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [Ignore]
        [PexDescription("the test state was: path bounds exceeded")]
        public void ParseFunctionExpression53601()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[4];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1
               = new AphidToken(AphidTokenType.ImplicitArgumentOperator, null, default(int));
            aphidTokens[1] = s1;
            AphidToken s2 = new AphidToken(AphidTokenType.LeftBracket, "", default(int));
            aphidTokens[2] = s2;
            AphidToken s3 = new AphidToken(default(AphidTokenType), "", default(int));
            aphidTokens[3] = s3;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException948()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[3];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1 = new AphidToken(AphidTokenType.LeftBrace, "", default(int));
            aphidTokens[1] = s1;
            AphidToken s2 = new AphidToken(AphidTokenType.String, null, default(int));
            aphidTokens[2] = s2;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException868()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[3];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1 = new AphidToken(AphidTokenType.LeftBrace, "", default(int));
            aphidTokens[1] = s1;
            AphidToken s2 = new AphidToken(AphidTokenType.RightBrace, null, default(int));
            aphidTokens[2] = s2;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException54401()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[3];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1 = new AphidToken(AphidTokenType.LeftBrace, "", default(int));
            aphidTokens[1] = s1;
            AphidToken s2 = new AphidToken(AphidTokenType.Identifier, null, default(int));
            aphidTokens[2] = s2;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidParserTest))]
        [PexRaisedException(typeof(AphidParserException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(AphidParserException))]
        public void ParseFunctionExpressionThrowsAphidParserException151()
        {
            List<AphidToken> list;
            AphidParser aphidParser;
            AphidExpression aphidExpression;
            AphidToken[] aphidTokens = new AphidToken[3];
            AphidToken s0 = new AphidToken(AphidTokenType.MinusOperator, "", default(int));
            aphidTokens[0] = s0;
            AphidToken s1 = new AphidToken(AphidTokenType.String, "", int.MinValue);
            aphidTokens[1] = s1;
            AphidToken s2
               = new AphidToken(AphidTokenType.IncrementOperator, null, default(int));
            aphidTokens[2] = s2;
            list = new List<AphidToken>((IEnumerable<AphidToken>)aphidTokens);
            aphidParser = new AphidParser(list);
            aphidExpression = this.ParseFunctionExpression(aphidParser);
        }

[TestMethod]
[PexGeneratedBy(typeof(AphidParserTest))]
[ExpectedException(typeof(NullReferenceException))]
public void ParseFunctionExpressionThrowsNullReferenceException232()
{
    AphidExpression aphidExpression;
    aphidExpression = this.ParseFunctionExpression((AphidParser)null);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidParserTest))]
[ExpectedException(typeof(AphidParserException))]
public void ParseFunctionExpressionThrowsAphidParserException587()
{
    AphidParser aphidParser;
    AphidExpression aphidExpression;
    aphidParser = new AphidParser((List<AphidToken>)null);
    aphidExpression = this.ParseFunctionExpression(aphidParser);
}
    }
}
