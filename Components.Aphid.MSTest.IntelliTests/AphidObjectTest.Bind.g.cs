using Components.Aphid.Library;
using System.Collections.Generic;
using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Components.Aphid.TypeSystem;
// <copyright file="AphidObjectTest.Bind.g.cs">Copyright Â© AutoSec Tools LLC 2019</copyright>
// <auto-generated>
// This file contains automatically generated tests.
// Do not modify this file manually.
// 
// If the contents of this file becomes outdated, you can delete it.
// For example, if it no longer compiles.
// </auto-generated>
using System;
using Microsoft.Pex.Engine.Exceptions;

namespace Components.Aphid.TypeSystem.Tests
{
    public partial class AphidObjectTest
    {

        [TestMethod]
        [PexGeneratedBy(typeof(AphidObjectTest))]
        [PexRaisedException(typeof(NullReferenceException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(NullReferenceException))]
        public void BindThrowsNullReferenceException12701()
        {
            object o;
            o = AphidObjectFactory.Create(1);
            this.Bind((AphidObject)o, (object)null, false);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidObjectTest))]
        [PexRaisedException(typeof(NullReferenceException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(NullReferenceException))]
        public void BindThrowsNullReferenceException127()
        {
            object o;
            o = AphidObjectFactory.Create(0);
            this.Bind((AphidObject)o, (object)null, false);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidObjectTest))]
        public void Bind535()
        {
            object o;
            o = AphidObjectFactory.Create(660);
            object s0 = new object();
            this.Bind((AphidObject)o, s0, false);
            Assert.IsNotNull(o);
            Assert.AreEqual<bool>(true, ((AphidObject)o).IsScalar);
            Assert.AreEqual<bool>(false, ((AphidObject)o).IsComplex);
            Assert.AreEqual<bool>(true, ((AphidObject)o).IsComplexitySet);
            Assert.IsNotNull(((AphidObject)o).Value);
            Assert.IsNull(((AphidObject)o).Parent);
            Assert.IsNotNull(((Dictionary<string, AphidObject>)o).Comparer);
            Assert.AreEqual<int>(0, ((Dictionary<string, AphidObject>)o).Count);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidObjectTest))]
        [PexRaisedException(typeof(NullReferenceException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(NullReferenceException))]
        public void BindThrowsNullReferenceException515()
        {
            object o;
            o = AphidObjectFactory.Create(2);
            this.Bind((AphidObject)o, (object)null, false);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidObjectTest))]
        [ExpectedException(typeof(NullReferenceException))]
        [PexRaisedException(typeof(NullReferenceException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected)]
        public void BindThrowsNullReferenceException108()
        {
            object o;
            o = AphidObjectFactory.Create(0);
            this.Bind((AphidObject)o, (object)null, true);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidObjectTest))]
        [PexRaisedException(typeof(NullReferenceException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(NullReferenceException))]
        public void BindThrowsNullReferenceException12702()
        {
            object o;
            o = AphidObjectFactory.Create(3);
            this.Bind((AphidObject)o, (object)null, false);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidObjectTest))]
        [PexRaisedException(typeof(NullReferenceException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(NullReferenceException))]
        public void BindThrowsNullReferenceException12703()
        {
            object o;
            o = AphidObjectFactory.Create(514);
            this.Bind((AphidObject)o, (object)null, false);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidObjectTest))]
        public void Bind53501()
        {
            object o;
            o = AphidObjectFactory.Create(156);
            object s0 = new object();
            this.Bind((AphidObject)o, s0, false);
            Assert.IsNotNull(o);
            Assert.AreEqual<bool>(false, ((AphidObject)o).IsScalar);
            Assert.AreEqual<bool>(true, ((AphidObject)o).IsComplex);
            Assert.AreEqual<bool>(true, ((AphidObject)o).IsComplexitySet);
            Assert.IsNull(((AphidObject)o).Value);
            Assert.IsNull(((AphidObject)o).Parent);
            Assert.IsNotNull(((Dictionary<string, AphidObject>)o).Comparer);
            Assert.AreEqual<int>(0, ((Dictionary<string, AphidObject>)o).Count);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidObjectTest))]
        public void Bind433()
        {
            object o;
            o = AphidObjectFactory.Create(-947878915);
            object boxi = (object)(default(int));
            this.Bind((AphidObject)o, boxi, PexSafeHelpers.ByteToBoolean((byte)128));
            Assert.IsNotNull(o);
            Assert.AreEqual<bool>(true, ((AphidObject)o).IsScalar);
            Assert.AreEqual<bool>(false, ((AphidObject)o).IsComplex);
            Assert.AreEqual<bool>(true, ((AphidObject)o).IsComplexitySet);
            Assert.IsNotNull(((AphidObject)o).Value);
            Assert.IsNull(((AphidObject)o).Parent);
            Assert.IsNotNull(((Dictionary<string, AphidObject>)o).Comparer);
            Assert.AreEqual<int>(0, ((Dictionary<string, AphidObject>)o).Count);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidObjectTest))]
        [PexRaisedException(typeof(NullReferenceException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(NullReferenceException))]
        public void BindThrowsNullReferenceException51501()
        {
            object o;
            o = AphidObjectFactory.Create();
            this.Bind((AphidObject)o, (object)null, false);
        }

        //[TestMethod]
        //[Microsoft.VisualStudio.TestTools.UnitTesting.Ignore]
        //[Microsoft.Pex.Framework.Suppression.PexIgnore("Investigate later")]
        //[PexGeneratedBy(typeof(AphidObjectTest))]
        //[PexRaisedException(typeof(IndexOutOfRangeException), Microsoft.Pex.Engine.Exceptions.PexExceptionState.Expected), ExpectedException(typeof(IndexOutOfRangeException))]
        //public void BindThrowsIndexOutOfRangeException464()
        //{
        //    object o;
        //    ExecOptions execOptions;
        //    o = AphidObjectFactory.Create();
        //    execOptions = new ExecOptions();
        //    execOptions.Working = (string)null;
        //    this.Bind((AphidObject)o, (object)execOptions, true);
        //}
    }
}
