using System.ComponentModel;
using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework;
using Components.Aphid.Lexer;
// <auto-generated>
// This file contains automatically generated tests.
// Do not modify this file manually.
// 
// If the contents of this file becomes outdated, you can delete it.
// For example, if it no longer compiles.
// </auto-generated>
using System;
using DescriptionAttribute = Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute;

namespace Components.Aphid.Parser.Tests
{
    public partial class AphidLexerTests
    {

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll222()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll816()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll610()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("9");
    AphidLexerTests.TokenizeAll(aphidLexer, "9");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("9", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll909()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("Y");
    AphidLexerTests.TokenizeAll(aphidLexer, "Y");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("Y", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll543()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll986()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll322()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`");
    AphidLexerTests.TokenizeAll(aphidLexer, "`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll325()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("@");
    AphidLexerTests.TokenizeAll(aphidLexer, "@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("@\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "@\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("@\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll199()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll686()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K0");
    AphidLexerTests.TokenizeAll(aphidLexer, "K0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll624()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("Ka");
    AphidLexerTests.TokenizeAll(aphidLexer, "Ka");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("Ka", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll390()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("KA");
    AphidLexerTests.TokenizeAll(aphidLexer, "KA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("KA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll853()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K{");
    AphidLexerTests.TokenizeAll(aphidLexer, "K{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll875()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("@>");
    AphidLexerTests.TokenizeAll(aphidLexer, "@>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("@>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll913()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K[");
    AphidLexerTests.TokenizeAll(aphidLexer, "K[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll948()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K");
    AphidLexerTests.TokenizeAll(aphidLexer, "K");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll244()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll160()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`:");
    AphidLexerTests.TokenizeAll(aphidLexer, "`:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll614()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`!");
    AphidLexerTests.TokenizeAll(aphidLexer, "`!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll154()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll436()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`@");
    AphidLexerTests.TokenizeAll(aphidLexer, "`@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll576()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<@");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll809()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<~");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll868()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`~");
    AphidLexerTests.TokenizeAll(aphidLexer, "`~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll84()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<|");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll990()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`|");
    AphidLexerTests.TokenizeAll(aphidLexer, "`|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll490()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<!");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll118()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<:");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll146()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K</");
    AphidLexerTests.TokenizeAll(aphidLexer, "K</");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K</", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll784()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`/");
    AphidLexerTests.TokenizeAll(aphidLexer, "`/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll260()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(" ");
    AphidLexerTests.TokenizeAll(aphidLexer, " ");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(" ", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll954()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("h");
    AphidLexerTests.TokenizeAll(aphidLexer, "h");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("h", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll254()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=");
    AphidLexerTests.TokenizeAll(aphidLexer, "=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll745()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=@");
    AphidLexerTests.TokenizeAll(aphidLexer, "=@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll429()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=!");
    AphidLexerTests.TokenizeAll(aphidLexer, "=!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll79()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=`");
    AphidLexerTests.TokenizeAll(aphidLexer, "=`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=:");
    AphidLexerTests.TokenizeAll(aphidLexer, "=:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll778()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=/");
    AphidLexerTests.TokenizeAll(aphidLexer, "=/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll382()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=.");
    AphidLexerTests.TokenizeAll(aphidLexer, "=.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll982()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<.");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll452()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`.");
    AphidLexerTests.TokenizeAll(aphidLexer, "`.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll408()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("j");
    AphidLexerTests.TokenizeAll(aphidLexer, "j");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("j", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll613()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$");
    AphidLexerTests.TokenizeAll(aphidLexer, "$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll659()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "$\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("$\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll734()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$_");
    AphidLexerTests.TokenizeAll(aphidLexer, "$_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("$_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll625()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$a");
    AphidLexerTests.TokenizeAll(aphidLexer, "$a");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("$a", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll57601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$!");
    AphidLexerTests.TokenizeAll(aphidLexer, "$!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("$!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$a\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "$a\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("$a\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll808()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$args");
    AphidLexerTests.TokenizeAll(aphidLexer, "$args");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("$args", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll666()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=?");
    AphidLexerTests.TokenizeAll(aphidLexer, "=?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll628()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`?");
    AphidLexerTests.TokenizeAll(aphidLexer, "`?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll979()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<?");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll98()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=]");
    AphidLexerTests.TokenizeAll(aphidLexer, "=]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll867()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`]");
    AphidLexerTests.TokenizeAll(aphidLexer, "`]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll955()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i");
    AphidLexerTests.TokenizeAll(aphidLexer, "i");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("i", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll460()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "i\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("i\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll997()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("iA");
    AphidLexerTests.TokenizeAll(aphidLexer, "iA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("iA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll131()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("in");
    AphidLexerTests.TokenizeAll(aphidLexer, "in");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("in", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll188()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("if");
    AphidLexerTests.TokenizeAll(aphidLexer, "if");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("if", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll820()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ia");
    AphidLexerTests.TokenizeAll(aphidLexer, "ia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i{");
    AphidLexerTests.TokenizeAll(aphidLexer, "i{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("i{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll731()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i0");
    AphidLexerTests.TokenizeAll(aphidLexer, "i0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("i0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll935()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i");
    AphidLexerTests.TokenizeAll(aphidLexer, "i");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("i", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll969()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<-");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll914()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll171()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll664()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0.");
    AphidLexerTests.TokenizeAll(aphidLexer, "0.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll738()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0b");
    AphidLexerTests.TokenizeAll(aphidLexer, "0b");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0b", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll14601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll330()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll49001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0x");
    AphidLexerTests.TokenizeAll(aphidLexer, "0x");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0x", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll757()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0::");
    AphidLexerTests.TokenizeAll(aphidLexer, "0::");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0::", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll515()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:`");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll141()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:|");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll640()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:~");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll96()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:!");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll296()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:/");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll656()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:.");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll438()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:?");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:]");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll826()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:-");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll25401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`-");
    AphidLexerTests.TokenizeAll(aphidLexer, "`-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll75()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=-");
    AphidLexerTests.TokenizeAll(aphidLexer, "=-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll710()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`,");
    AphidLexerTests.TokenizeAll(aphidLexer, "`,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll735()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=,");
    AphidLexerTests.TokenizeAll(aphidLexer, "=,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll486()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(";");
    AphidLexerTests.TokenizeAll(aphidLexer, ";");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(";", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll295()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|");
    AphidLexerTests.TokenizeAll(aphidLexer, "|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll567()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "|\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll409()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|:");
    AphidLexerTests.TokenizeAll(aphidLexer, "|:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll213()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|@");
    AphidLexerTests.TokenizeAll(aphidLexer, "|@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll633()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("||");
    AphidLexerTests.TokenizeAll(aphidLexer, "||");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("||", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll279()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|~");
    AphidLexerTests.TokenizeAll(aphidLexer, "|~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll690()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|`");
    AphidLexerTests.TokenizeAll(aphidLexer, "|`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll214()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|!");
    AphidLexerTests.TokenizeAll(aphidLexer, "|!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll958()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|/");
    AphidLexerTests.TokenizeAll(aphidLexer, "|/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll893()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|.");
    AphidLexerTests.TokenizeAll(aphidLexer, "|.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll759()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|?");
    AphidLexerTests.TokenizeAll(aphidLexer, "|?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll381()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|]");
    AphidLexerTests.TokenizeAll(aphidLexer, "|]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll32201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!");
    AphidLexerTests.TokenizeAll(aphidLexer, "!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll822()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "!\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll6101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!:");
    AphidLexerTests.TokenizeAll(aphidLexer, "!:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll7501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!@");
    AphidLexerTests.TokenizeAll(aphidLexer, "!@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!!");
    AphidLexerTests.TokenizeAll(aphidLexer, "!!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll150()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!`");
    AphidLexerTests.TokenizeAll(aphidLexer, "!`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll9801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!|");
    AphidLexerTests.TokenizeAll(aphidLexer, "!|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll413()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!/");
    AphidLexerTests.TokenizeAll(aphidLexer, "!/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll19901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!.");
    AphidLexerTests.TokenizeAll(aphidLexer, "!.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll399()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!?");
    AphidLexerTests.TokenizeAll(aphidLexer, "!?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll568()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!]");
    AphidLexerTests.TokenizeAll(aphidLexer, "!]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!-");
    AphidLexerTests.TokenizeAll(aphidLexer, "!-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll531()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:,");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll639()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|,");
    AphidLexerTests.TokenizeAll(aphidLexer, "|,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll883()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("Y<,");
    AphidLexerTests.TokenizeAll(aphidLexer, "Y<,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("Y<,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll107()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!,");
    AphidLexerTests.TokenizeAll(aphidLexer, "!,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll598()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`>");
    AphidLexerTests.TokenizeAll(aphidLexer, "`>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll894()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!>");
    AphidLexerTests.TokenizeAll(aphidLexer, "!>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<>");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll430()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|>");
    AphidLexerTests.TokenizeAll(aphidLexer, "|>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll331()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`)");
    AphidLexerTests.TokenizeAll(aphidLexer, "`)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll240()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=)");
    AphidLexerTests.TokenizeAll(aphidLexer, "=)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll29601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:(");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll653()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!)");
    AphidLexerTests.TokenizeAll(aphidLexer, "!)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll714()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|)");
    AphidLexerTests.TokenizeAll(aphidLexer, "|)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll16001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("Y<*");
    AphidLexerTests.TokenizeAll(aphidLexer, "Y<*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("Y<*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll489()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "|\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<^");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll212()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "!\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll995()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "=\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll569()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "`\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll559()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b");
    AphidLexerTests.TokenizeAll(aphidLexer, "b");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("b", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll915()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "b\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("b\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll335()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("br");
    AphidLexerTests.TokenizeAll(aphidLexer, "br");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("br", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll373()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ba");
    AphidLexerTests.TokenizeAll(aphidLexer, "ba");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ba", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll49002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b0");
    AphidLexerTests.TokenizeAll(aphidLexer, "b0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("b0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll73501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b<");
    AphidLexerTests.TokenizeAll(aphidLexer, "b<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("b<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll892()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bra");
    AphidLexerTests.TokenizeAll(aphidLexer, "bra");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("bra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll185()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("br{");
    AphidLexerTests.TokenizeAll(aphidLexer, "br{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("br{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll70401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("brý");
    AphidLexerTests.TokenizeAll(aphidLexer, "brý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("brý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll448()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre");
    AphidLexerTests.TokenizeAll(aphidLexer, "bre");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("bre", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll916()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b[");
    AphidLexerTests.TokenizeAll(aphidLexer, "b[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("b[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll469()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("brA");
    AphidLexerTests.TokenizeAll(aphidLexer, "brA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("brA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll89301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("br0");
    AphidLexerTests.TokenizeAll(aphidLexer, "br0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("br0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll90101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre0");
    AphidLexerTests.TokenizeAll(aphidLexer, "bre0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("bre0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll111()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("brea");
    AphidLexerTests.TokenizeAll(aphidLexer, "brea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("brea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll518()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre[");
    AphidLexerTests.TokenizeAll(aphidLexer, "bre[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("bre[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll887()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breb");
    AphidLexerTests.TokenizeAll(aphidLexer, "breb");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("breb", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll341()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b{");
    AphidLexerTests.TokenizeAll(aphidLexer, "b{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("b{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll584()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b");
    AphidLexerTests.TokenizeAll(aphidLexer, "b");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("b", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll428()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre{");
    AphidLexerTests.TokenizeAll(aphidLexer, "bre{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("bre{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll281()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "breaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("breaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll923()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("break");
    AphidLexerTests.TokenizeAll(aphidLexer, "break");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("break", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll595()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre");
    AphidLexerTests.TokenizeAll(aphidLexer, "bre");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("bre", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll859()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:)");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll482()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("Q<)");
    AphidLexerTests.TokenizeAll(aphidLexer, "Q<)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("Q<)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll417()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!*");
    AphidLexerTests.TokenizeAll(aphidLexer, "!*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll99001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`*");
    AphidLexerTests.TokenizeAll(aphidLexer, "`*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll897()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#");
    AphidLexerTests.TokenizeAll(aphidLexer, "#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll951()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "#\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll492()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#!");
    AphidLexerTests.TokenizeAll(aphidLexer, "#!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#:");
    AphidLexerTests.TokenizeAll(aphidLexer, "#:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll499()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#@");
    AphidLexerTests.TokenizeAll(aphidLexer, "#@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll114()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#|");
    AphidLexerTests.TokenizeAll(aphidLexer, "#|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll143()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#~");
    AphidLexerTests.TokenizeAll(aphidLexer, "#~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll367()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#`");
    AphidLexerTests.TokenizeAll(aphidLexer, "#`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#/");
    AphidLexerTests.TokenizeAll(aphidLexer, "#/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll190()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#.");
    AphidLexerTests.TokenizeAll(aphidLexer, "#.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll511()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#?");
    AphidLexerTests.TokenizeAll(aphidLexer, "#?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll844()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#]");
    AphidLexerTests.TokenizeAll(aphidLexer, "#]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll585()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#,");
    AphidLexerTests.TokenizeAll(aphidLexer, "#,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll167()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#>");
    AphidLexerTests.TokenizeAll(aphidLexer, "#>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll61001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#)");
    AphidLexerTests.TokenizeAll(aphidLexer, "#)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll956()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "#\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll323()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#*");
    AphidLexerTests.TokenizeAll(aphidLexer, "#*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll574()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=*");
    AphidLexerTests.TokenizeAll(aphidLexer, "=*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll216()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|*");
    AphidLexerTests.TokenizeAll(aphidLexer, "|*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll394()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`<");
    AphidLexerTests.TokenizeAll(aphidLexer, "`<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll60601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<<");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll59501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<<\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<<\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<<\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll253()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<<=");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<<=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<<=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll40801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|<");
    AphidLexerTests.TokenizeAll(aphidLexer, "|<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll742()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!<");
    AphidLexerTests.TokenizeAll(aphidLexer, "!<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll928()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=<");
    AphidLexerTests.TokenizeAll(aphidLexer, "=<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll689()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:<");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll675()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#<");
    AphidLexerTests.TokenizeAll(aphidLexer, "#<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll824()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:*");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll530()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`+");
    AphidLexerTests.TokenizeAll(aphidLexer, "`+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll11101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&");
    AphidLexerTests.TokenizeAll(aphidLexer, "&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll591()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "&\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll82201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&@");
    AphidLexerTests.TokenizeAll(aphidLexer, "&@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll912()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&!");
    AphidLexerTests.TokenizeAll(aphidLexer, "&!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll447()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&~");
    AphidLexerTests.TokenizeAll(aphidLexer, "&~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll397()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&:");
    AphidLexerTests.TokenizeAll(aphidLexer, "&:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll285()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&|");
    AphidLexerTests.TokenizeAll(aphidLexer, "&|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll699()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&`");
    AphidLexerTests.TokenizeAll(aphidLexer, "&`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll77801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&/");
    AphidLexerTests.TokenizeAll(aphidLexer, "&/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll911()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&.");
    AphidLexerTests.TokenizeAll(aphidLexer, "&.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll700()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&?");
    AphidLexerTests.TokenizeAll(aphidLexer, "&?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll80801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&]");
    AphidLexerTests.TokenizeAll(aphidLexer, "&]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll25402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&-");
    AphidLexerTests.TokenizeAll(aphidLexer, "&-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll766()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&,");
    AphidLexerTests.TokenizeAll(aphidLexer, "&,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll336()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&>");
    AphidLexerTests.TokenizeAll(aphidLexer, "&>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll324()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&)");
    AphidLexerTests.TokenizeAll(aphidLexer, "&)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll471()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "&\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll158()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&*");
    AphidLexerTests.TokenizeAll(aphidLexer, "&*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll91201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&<");
    AphidLexerTests.TokenizeAll(aphidLexer, "&<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll80201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("p");
    AphidLexerTests.TokenizeAll(aphidLexer, "p");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("p", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll575()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&+");
    AphidLexerTests.TokenizeAll(aphidLexer, "&+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll658()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|+");
    AphidLexerTests.TokenizeAll(aphidLexer, "|+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=+");
    AphidLexerTests.TokenizeAll(aphidLexer, "=+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll356()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("Q<+");
    AphidLexerTests.TokenizeAll(aphidLexer, "Q<+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("Q<+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll68901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#+");
    AphidLexerTests.TokenizeAll(aphidLexer, "#+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll918()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!+");
    AphidLexerTests.TokenizeAll(aphidLexer, "!+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll155()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|(");
    AphidLexerTests.TokenizeAll(aphidLexer, "|(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll932()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=(");
    AphidLexerTests.TokenizeAll(aphidLexer, "=(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll994()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("A<(");
    AphidLexerTests.TokenizeAll(aphidLexer, "A<(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("A<(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll82601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#^");
    AphidLexerTests.TokenizeAll(aphidLexer, "#^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll561()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<_");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll88()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#(");
    AphidLexerTests.TokenizeAll(aphidLexer, "#(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll407()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=^");
    AphidLexerTests.TokenizeAll(aphidLexer, "=^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll113()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:+");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll642()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`(");
    AphidLexerTests.TokenizeAll(aphidLexer, "`(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll514()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%");
    AphidLexerTests.TokenizeAll(aphidLexer, "%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll18501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "%\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll92301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%!");
    AphidLexerTests.TokenizeAll(aphidLexer, "%!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll472()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%:");
    AphidLexerTests.TokenizeAll(aphidLexer, "%:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll873()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%@");
    AphidLexerTests.TokenizeAll(aphidLexer, "%@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll934()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%`");
    AphidLexerTests.TokenizeAll(aphidLexer, "%`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll4301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%|");
    AphidLexerTests.TokenizeAll(aphidLexer, "%|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll917()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%~");
    AphidLexerTests.TokenizeAll(aphidLexer, "%~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll478()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%.");
    AphidLexerTests.TokenizeAll(aphidLexer, "%.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll630()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%?");
    AphidLexerTests.TokenizeAll(aphidLexer, "%?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll431()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%]");
    AphidLexerTests.TokenizeAll(aphidLexer, "%]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll51101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%-");
    AphidLexerTests.TokenizeAll(aphidLexer, "%-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll45201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%,");
    AphidLexerTests.TokenizeAll(aphidLexer, "%,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll35601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%>");
    AphidLexerTests.TokenizeAll(aphidLexer, "%>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll741()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%)");
    AphidLexerTests.TokenizeAll(aphidLexer, "%)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll247()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "%\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll357()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%*");
    AphidLexerTests.TokenizeAll(aphidLexer, "%*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll579()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%<");
    AphidLexerTests.TokenizeAll(aphidLexer, "%<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll455()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%+");
    AphidLexerTests.TokenizeAll(aphidLexer, "%+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll535()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!(");
    AphidLexerTests.TokenizeAll(aphidLexer, "!(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll996()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$ar");
    AphidLexerTests.TokenizeAll(aphidLexer, "$ar");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("$ar", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll74101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%^");
    AphidLexerTests.TokenizeAll(aphidLexer, "%^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll9601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":@");
    AphidLexerTests.TokenizeAll(aphidLexer, ":@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(":@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll70501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%(");
    AphidLexerTests.TokenizeAll(aphidLexer, "%(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll931()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|^");
    AphidLexerTests.TokenizeAll(aphidLexer, "|^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll753()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!^");
    AphidLexerTests.TokenizeAll(aphidLexer, "!^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll64001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`^");
    AphidLexerTests.TokenizeAll(aphidLexer, "`^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll7502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("x");
    AphidLexerTests.TokenizeAll(aphidLexer, "x");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("x", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll241()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\"\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "\"\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\"\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll4302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\"\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "\"\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\"\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll91701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&^");
    AphidLexerTests.TokenizeAll(aphidLexer, "&^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll262()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("==");
    AphidLexerTests.TokenizeAll(aphidLexer, "==");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("==", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll59502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%=");
    AphidLexerTests.TokenizeAll(aphidLexer, "%=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll777()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#=");
    AphidLexerTests.TokenizeAll(aphidLexer, "#=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll28501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`=");
    AphidLexerTests.TokenizeAll(aphidLexer, "`=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll925()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|=");
    AphidLexerTests.TokenizeAll(aphidLexer, "|=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll532()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!=");
    AphidLexerTests.TokenizeAll(aphidLexer, "!=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll711()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "`\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll508()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "#\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll464()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "!\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll463()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("z");
    AphidLexerTests.TokenizeAll(aphidLexer, "z");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("z", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll400()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "=\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll375()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "%\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll70001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "&\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll187()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "|\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll716()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("##");
    AphidLexerTests.TokenizeAll(aphidLexer, "##");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("##", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll112()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("y");
    AphidLexerTests.TokenizeAll(aphidLexer, "y");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("y", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll1401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=#");
    AphidLexerTests.TokenizeAll(aphidLexer, "=#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll580()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!#");
    AphidLexerTests.TokenizeAll(aphidLexer, "!#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll11401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%#");
    AphidLexerTests.TokenizeAll(aphidLexer, "%#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll715()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&#");
    AphidLexerTests.TokenizeAll(aphidLexer, "&#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll698()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|#");
    AphidLexerTests.TokenizeAll(aphidLexer, "|#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll219()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">");
    AphidLexerTests.TokenizeAll(aphidLexer, ">");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">\0");
    AphidLexerTests.TokenizeAll(aphidLexer, ">\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll236()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">@");
    AphidLexerTests.TokenizeAll(aphidLexer, ">@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll733()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">:");
    AphidLexerTests.TokenizeAll(aphidLexer, ">:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll930()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">~");
    AphidLexerTests.TokenizeAll(aphidLexer, ">~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll422()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">`");
    AphidLexerTests.TokenizeAll(aphidLexer, ">`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll832()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">!");
    AphidLexerTests.TokenizeAll(aphidLexer, ">!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll60401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">|");
    AphidLexerTests.TokenizeAll(aphidLexer, ">|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll180()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">/");
    AphidLexerTests.TokenizeAll(aphidLexer, ">/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll68902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">.");
    AphidLexerTests.TokenizeAll(aphidLexer, ">.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll65601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">?");
    AphidLexerTests.TokenizeAll(aphidLexer, ">?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll3801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">]");
    AphidLexerTests.TokenizeAll(aphidLexer, ">]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll442()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">-");
    AphidLexerTests.TokenizeAll(aphidLexer, ">-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll993()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">,");
    AphidLexerTests.TokenizeAll(aphidLexer, ">,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll75701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">>");
    AphidLexerTests.TokenizeAll(aphidLexer, ">>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll88301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">>\0");
    AphidLexerTests.TokenizeAll(aphidLexer, ">>\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">>\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll99501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">>=");
    AphidLexerTests.TokenizeAll(aphidLexer, ">>=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">>=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll44801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">)");
    AphidLexerTests.TokenizeAll(aphidLexer, ">)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll58001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">\\");
    AphidLexerTests.TokenizeAll(aphidLexer, ">\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll24701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">*");
    AphidLexerTests.TokenizeAll(aphidLexer, ">*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll465()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("><");
    AphidLexerTests.TokenizeAll(aphidLexer, "><");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("><", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll391()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">+");
    AphidLexerTests.TokenizeAll(aphidLexer, ">+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll554()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">(");
    AphidLexerTests.TokenizeAll(aphidLexer, ">(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll333()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">^");
    AphidLexerTests.TokenizeAll(aphidLexer, ">^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll78()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">=");
    AphidLexerTests.TokenizeAll(aphidLexer, ">=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll622()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">\"");
    AphidLexerTests.TokenizeAll(aphidLexer, ">\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll440()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">#");
    AphidLexerTests.TokenizeAll(aphidLexer, ">#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll44001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|_");
    AphidLexerTests.TokenizeAll(aphidLexer, "|_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll372()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=_");
    AphidLexerTests.TokenizeAll(aphidLexer, "=_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll747()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("I<\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "I<\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("I<\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll962()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%_");
    AphidLexerTests.TokenizeAll(aphidLexer, "%_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll59801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`_");
    AphidLexerTests.TokenizeAll(aphidLexer, "`_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll91401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">_");
    AphidLexerTests.TokenizeAll(aphidLexer, ">_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll4001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#_");
    AphidLexerTests.TokenizeAll(aphidLexer, "#_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll21201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!_");
    AphidLexerTests.TokenizeAll(aphidLexer, "!_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll421()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&;");
    AphidLexerTests.TokenizeAll(aphidLexer, "&;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll313()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%;");
    AphidLexerTests.TokenizeAll(aphidLexer, "%;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll724()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#;");
    AphidLexerTests.TokenizeAll(aphidLexer, "#;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll99601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|;");
    AphidLexerTests.TokenizeAll(aphidLexer, "|;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll65301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!;");
    AphidLexerTests.TokenizeAll(aphidLexer, "!;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll1402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=;");
    AphidLexerTests.TokenizeAll(aphidLexer, "=;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll24101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`;");
    AphidLexerTests.TokenizeAll(aphidLexer, "`;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll57901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">;");
    AphidLexerTests.TokenizeAll(aphidLexer, ">;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll87()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=$");
    AphidLexerTests.TokenizeAll(aphidLexer, "=$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll70502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%$");
    AphidLexerTests.TokenizeAll(aphidLexer, "%$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll650()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!$");
    AphidLexerTests.TokenizeAll(aphidLexer, "!$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll872()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&$");
    AphidLexerTests.TokenizeAll(aphidLexer, "&$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll228()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll28502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r");
    AphidLexerTests.TokenizeAll(aphidLexer, "r");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("r", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll768()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re");
    AphidLexerTests.TokenizeAll(aphidLexer, "re");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("re", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll60602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "re\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("re\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("reA");
    AphidLexerTests.TokenizeAll(aphidLexer, "reA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("reA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll62501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r0");
    AphidLexerTests.TokenizeAll(aphidLexer, "r0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("r0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll287()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re[");
    AphidLexerTests.TokenizeAll(aphidLexer, "re[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("re[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll946()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ret");
    AphidLexerTests.TokenizeAll(aphidLexer, "ret");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ret", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll750()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re{");
    AphidLexerTests.TokenizeAll(aphidLexer, "re{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("re{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll274()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ra");
    AphidLexerTests.TokenizeAll(aphidLexer, "ra");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll856()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re0");
    AphidLexerTests.TokenizeAll(aphidLexer, "re0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("re0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll910()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r<");
    AphidLexerTests.TokenizeAll(aphidLexer, "r<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("r<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("reý");
    AphidLexerTests.TokenizeAll(aphidLexer, "reý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("reý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll695()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("rA");
    AphidLexerTests.TokenizeAll(aphidLexer, "rA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("rA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll444()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r{");
    AphidLexerTests.TokenizeAll(aphidLexer, "r{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("r{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll25301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r");
    AphidLexerTests.TokenizeAll(aphidLexer, "r");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("r", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll938()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">$");
    AphidLexerTests.TokenizeAll(aphidLexer, ">$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll884()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`$");
    AphidLexerTests.TokenizeAll(aphidLexer, "`$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll889()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|$");
    AphidLexerTests.TokenizeAll(aphidLexer, "|$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll972()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#$");
    AphidLexerTests.TokenizeAll(aphidLexer, "#$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll423()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=&");
    AphidLexerTests.TokenizeAll(aphidLexer, "=&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll91001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#&");
    AphidLexerTests.TokenizeAll(aphidLexer, "#&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll186()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">&");
    AphidLexerTests.TokenizeAll(aphidLexer, ">&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll681()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?");
    AphidLexerTests.TokenizeAll(aphidLexer, "?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll286()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "?\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll529()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?:");
    AphidLexerTests.TokenizeAll(aphidLexer, "?:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll572()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?@");
    AphidLexerTests.TokenizeAll(aphidLexer, "?@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll550()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?`");
    AphidLexerTests.TokenizeAll(aphidLexer, "?`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll965()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?~");
    AphidLexerTests.TokenizeAll(aphidLexer, "?~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll528()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?!");
    AphidLexerTests.TokenizeAll(aphidLexer, "?!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll947()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?|");
    AphidLexerTests.TokenizeAll(aphidLexer, "?|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll269()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?/");
    AphidLexerTests.TokenizeAll(aphidLexer, "?/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll288()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?.");
    AphidLexerTests.TokenizeAll(aphidLexer, "?.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll562()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("??");
    AphidLexerTests.TokenizeAll(aphidLexer, "??");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("??", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll129()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?]");
    AphidLexerTests.TokenizeAll(aphidLexer, "?]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll976()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?-");
    AphidLexerTests.TokenizeAll(aphidLexer, "?-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll83201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?,");
    AphidLexerTests.TokenizeAll(aphidLexer, "?,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll91101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?>");
    AphidLexerTests.TokenizeAll(aphidLexer, "?>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll231()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?)");
    AphidLexerTests.TokenizeAll(aphidLexer, "?)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll1()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "?\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll552()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?*");
    AphidLexerTests.TokenizeAll(aphidLexer, "?*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll445()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?<");
    AphidLexerTests.TokenizeAll(aphidLexer, "?<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll251()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?+");
    AphidLexerTests.TokenizeAll(aphidLexer, "?+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll599()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?^");
    AphidLexerTests.TokenizeAll(aphidLexer, "?^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll45501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?(");
    AphidLexerTests.TokenizeAll(aphidLexer, "?(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll416()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?=");
    AphidLexerTests.TokenizeAll(aphidLexer, "?=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll275()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "?\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll27901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?#");
    AphidLexerTests.TokenizeAll(aphidLexer, "?#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll566()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?_");
    AphidLexerTests.TokenizeAll(aphidLexer, "?_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll936()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?;");
    AphidLexerTests.TokenizeAll(aphidLexer, "?;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll5401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?$");
    AphidLexerTests.TokenizeAll(aphidLexer, "?$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll88302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll97901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!&");
    AphidLexerTests.TokenizeAll(aphidLexer, "!&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll837()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`&");
    AphidLexerTests.TokenizeAll(aphidLexer, "`&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll315()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&&");
    AphidLexerTests.TokenizeAll(aphidLexer, "&&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll970()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("q");
    AphidLexerTests.TokenizeAll(aphidLexer, "q");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("q", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll411()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?&");
    AphidLexerTests.TokenizeAll(aphidLexer, "?&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll142()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%&");
    AphidLexerTests.TokenizeAll(aphidLexer, "%&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d");
    AphidLexerTests.TokenizeAll(aphidLexer, "d");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("d", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll98601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "d\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("d\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll900()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d0");
    AphidLexerTests.TokenizeAll(aphidLexer, "d0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("d0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll99602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dA");
    AphidLexerTests.TokenizeAll(aphidLexer, "dA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("dA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll298()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d<");
    AphidLexerTests.TokenizeAll(aphidLexer, "d<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("d<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll794()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("do");
    AphidLexerTests.TokenizeAll(aphidLexer, "do");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("do", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll564()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d[");
    AphidLexerTests.TokenizeAll(aphidLexer, "d[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("d[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll556()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de");
    AphidLexerTests.TokenizeAll(aphidLexer, "de");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("de", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll850()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "de\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("de\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll919()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de0");
    AphidLexerTests.TokenizeAll(aphidLexer, "de0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("de0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll69501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deA");
    AphidLexerTests.TokenizeAll(aphidLexer, "deA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("deA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll350()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("da");
    AphidLexerTests.TokenizeAll(aphidLexer, "da");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("da", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll961()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("def");
    AphidLexerTests.TokenizeAll(aphidLexer, "def");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("def", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll15801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d{");
    AphidLexerTests.TokenizeAll(aphidLexer, "d{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("d{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll98602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de[");
    AphidLexerTests.TokenizeAll(aphidLexer, "de[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("de[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll854()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defb");
    AphidLexerTests.TokenizeAll(aphidLexer, "defb");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defb", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll33601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("def{");
    AphidLexerTests.TokenizeAll(aphidLexer, "def{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("def{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll362()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defA");
    AphidLexerTests.TokenizeAll(aphidLexer, "defA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll393()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d");
    AphidLexerTests.TokenizeAll(aphidLexer, "d");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("d", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll95501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("def");
    AphidLexerTests.TokenizeAll(aphidLexer, "def");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("def", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll975()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("del");
    AphidLexerTests.TokenizeAll(aphidLexer, "del");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("del", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll812()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defa");
    AphidLexerTests.TokenizeAll(aphidLexer, "defa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll51801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dela");
    AphidLexerTests.TokenizeAll(aphidLexer, "dela");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("dela", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll819()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("del{");
    AphidLexerTests.TokenizeAll(aphidLexer, "del{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("del{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll62801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("del");
    AphidLexerTests.TokenizeAll(aphidLexer, "del");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("del", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll347()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("def0");
    AphidLexerTests.TokenizeAll(aphidLexer, "def0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("def0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll481()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defau");
    AphidLexerTests.TokenizeAll(aphidLexer, "defau");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defau", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll3802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delA");
    AphidLexerTests.TokenizeAll(aphidLexer, "delA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll754()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dea");
    AphidLexerTests.TokenizeAll(aphidLexer, "dea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("dea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll29501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dele");
    AphidLexerTests.TokenizeAll(aphidLexer, "dele");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("dele", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll73301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de{");
    AphidLexerTests.TokenizeAll(aphidLexer, "de{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("de{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delea");
    AphidLexerTests.TokenizeAll(aphidLexer, "delea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll921()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "defaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll66601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("del0");
    AphidLexerTests.TokenizeAll(aphidLexer, "del0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("del0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll26201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de");
    AphidLexerTests.TokenizeAll(aphidLexer, "de");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("de", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll95801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defi");
    AphidLexerTests.TokenizeAll(aphidLexer, "defi");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll86701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delet");
    AphidLexerTests.TokenizeAll(aphidLexer, "delet");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delet", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll945()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defin");
    AphidLexerTests.TokenizeAll(aphidLexer, "defin");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll370()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delete");
    AphidLexerTests.TokenizeAll(aphidLexer, "delete");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delete", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll300()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defia");
    AphidLexerTests.TokenizeAll(aphidLexer, "defia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll18001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`%");
    AphidLexerTests.TokenizeAll(aphidLexer, "`%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#%");
    AphidLexerTests.TokenizeAll(aphidLexer, "#%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll292()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?%");
    AphidLexerTests.TokenizeAll(aphidLexer, "?%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll688()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|%");
    AphidLexerTests.TokenizeAll(aphidLexer, "|%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll885()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">%");
    AphidLexerTests.TokenizeAll(aphidLexer, ">%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll82001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!%");
    AphidLexerTests.TokenizeAll(aphidLexer, "!%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll337()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll89201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&%");
    AphidLexerTests.TokenizeAll(aphidLexer, "&%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll61401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%%");
    AphidLexerTests.TokenizeAll(aphidLexer, "%%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll815()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":\\");
    AphidLexerTests.TokenizeAll(aphidLexer, ":\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(":\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll56601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "|\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll309()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">\'");
    AphidLexerTests.TokenizeAll(aphidLexer, ">\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll6102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "!\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll852()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll88401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "?\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll66401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "%\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll197()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "#\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll70002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "`\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll838()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c");
    AphidLexerTests.TokenizeAll(aphidLexer, "c");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("c", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll959()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "c\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("c\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll39301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cA");
    AphidLexerTests.TokenizeAll(aphidLexer, "cA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll225()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cb");
    AphidLexerTests.TokenizeAll(aphidLexer, "cb");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cb", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll148()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ca");
    AphidLexerTests.TokenizeAll(aphidLexer, "ca");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll48901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ca\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ca\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ca\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll378()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c[");
    AphidLexerTests.TokenizeAll(aphidLexer, "c[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("c[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll110()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("co");
    AphidLexerTests.TokenizeAll(aphidLexer, "co");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("co", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll233()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll39401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c0");
    AphidLexerTests.TokenizeAll(aphidLexer, "c0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("c0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll830()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c{");
    AphidLexerTests.TokenizeAll(aphidLexer, "c{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("c{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll749()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("caA");
    AphidLexerTests.TokenizeAll(aphidLexer, "caA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("caA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll66602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("caa");
    AphidLexerTests.TokenizeAll(aphidLexer, "caa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("caa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll851()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("coa");
    AphidLexerTests.TokenizeAll(aphidLexer, "coa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("coa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll268()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c");
    AphidLexerTests.TokenizeAll(aphidLexer, "c");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("c", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll40802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("co{");
    AphidLexerTests.TokenizeAll(aphidLexer, "co{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("co{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll627()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("coý");
    AphidLexerTests.TokenizeAll(aphidLexer, "coý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("coý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll44501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ca{");
    AphidLexerTests.TokenizeAll(aphidLexer, "ca{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ca{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll933()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("caý");
    AphidLexerTests.TokenizeAll(aphidLexer, "caý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("caý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll97201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con");
    AphidLexerTests.TokenizeAll(aphidLexer, "con");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("con", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll21301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("co0");
    AphidLexerTests.TokenizeAll(aphidLexer, "co0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("co0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll483()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con0");
    AphidLexerTests.TokenizeAll(aphidLexer, "con0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("con0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll144()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("coA");
    AphidLexerTests.TokenizeAll(aphidLexer, "coA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("coA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll729()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conA");
    AphidLexerTests.TokenizeAll(aphidLexer, "conA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("conA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll276()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con[");
    AphidLexerTests.TokenizeAll(aphidLexer, "con[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("con[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll796()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cona");
    AphidLexerTests.TokenizeAll(aphidLexer, "cona");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cona", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll96101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cont");
    AphidLexerTests.TokenizeAll(aphidLexer, "cont");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cont", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll62701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con{");
    AphidLexerTests.TokenizeAll(aphidLexer, "con{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("con{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll69901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conta");
    AphidLexerTests.TokenizeAll(aphidLexer, "conta");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("conta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll651()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conti");
    AphidLexerTests.TokenizeAll(aphidLexer, "conti");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("conti", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll130()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cata");
    AphidLexerTests.TokenizeAll(aphidLexer, "cata");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cata", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll97()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catc");
    AphidLexerTests.TokenizeAll(aphidLexer, "catc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll75702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat0");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll842()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll419()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll491()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catA");
    AphidLexerTests.TokenizeAll(aphidLexer, "catA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll862()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con");
    AphidLexerTests.TokenizeAll(aphidLexer, "con");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("con", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll466()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catch");
    AphidLexerTests.TokenizeAll(aphidLexer, "catch");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catch", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll327()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catca");
    AphidLexerTests.TokenizeAll(aphidLexer, "catca");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll632()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "=\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll24001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "&\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll124()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll641()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s");
    AphidLexerTests.TokenizeAll(aphidLexer, "s");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("s", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll88402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "s\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("s\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll159()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sA");
    AphidLexerTests.TokenizeAll(aphidLexer, "sA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("sA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll380()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sa");
    AphidLexerTests.TokenizeAll(aphidLexer, "sa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("sa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll427()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s{");
    AphidLexerTests.TokenizeAll(aphidLexer, "s{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("s{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll157()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s0");
    AphidLexerTests.TokenizeAll(aphidLexer, "s0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("s0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll594()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sw");
    AphidLexerTests.TokenizeAll(aphidLexer, "sw");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("sw", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll32701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s");
    AphidLexerTests.TokenizeAll(aphidLexer, "s");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("s", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll73502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sw\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "sw\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("sw\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll24401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sw0");
    AphidLexerTests.TokenizeAll(aphidLexer, "sw0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("sw0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll8801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swa");
    AphidLexerTests.TokenizeAll(aphidLexer, "swa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll43601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swA");
    AphidLexerTests.TokenizeAll(aphidLexer, "swA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll90001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sw{");
    AphidLexerTests.TokenizeAll(aphidLexer, "sw{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("sw{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll11301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swý");
    AphidLexerTests.TokenizeAll(aphidLexer, "swý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll46601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swi");
    AphidLexerTests.TokenizeAll(aphidLexer, "swi");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll3601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swia");
    AphidLexerTests.TokenizeAll(aphidLexer, "swia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll283()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swi{");
    AphidLexerTests.TokenizeAll(aphidLexer, "swi{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swi{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swi0");
    AphidLexerTests.TokenizeAll(aphidLexer, "swi0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swi0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll27601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swit");
    AphidLexerTests.TokenizeAll(aphidLexer, "swit");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swit", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll64201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switc");
    AphidLexerTests.TokenizeAll(aphidLexer, "switc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll449()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swi");
    AphidLexerTests.TokenizeAll(aphidLexer, "swi");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll41101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swiA");
    AphidLexerTests.TokenizeAll(aphidLexer, "swiA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll91402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swita");
    AphidLexerTests.TokenizeAll(aphidLexer, "swita");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swita", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll328()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switch");
    AphidLexerTests.TokenizeAll(aphidLexer, "switch");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switch", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll922()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll697()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e");
    AphidLexerTests.TokenizeAll(aphidLexer, "e");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("e", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll75301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "e\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("e\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll788()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e0");
    AphidLexerTests.TokenizeAll(aphidLexer, "e0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("e0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll619()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("el");
    AphidLexerTests.TokenizeAll(aphidLexer, "el");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("el", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll56801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("el\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "el\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("el\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll978()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("eA");
    AphidLexerTests.TokenizeAll(aphidLexer, "eA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("eA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll25302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e[");
    AphidLexerTests.TokenizeAll(aphidLexer, "e[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("e[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll165()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ea");
    AphidLexerTests.TokenizeAll(aphidLexer, "ea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll35701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elA");
    AphidLexerTests.TokenizeAll(aphidLexer, "elA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("elA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll811()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("els");
    AphidLexerTests.TokenizeAll(aphidLexer, "els");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("els", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll95101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("el[");
    AphidLexerTests.TokenizeAll(aphidLexer, "el[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("el[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll75302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ela");
    AphidLexerTests.TokenizeAll(aphidLexer, "ela");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ela", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll87501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("el0");
    AphidLexerTests.TokenizeAll(aphidLexer, "el0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("el0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll647()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex");
    AphidLexerTests.TokenizeAll(aphidLexer, "ex");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ex", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll252()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e{");
    AphidLexerTests.TokenizeAll(aphidLexer, "e{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("e{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll70503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ex\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ex\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll358()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exa");
    AphidLexerTests.TokenizeAll(aphidLexer, "exa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll74501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ex0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ex0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll3602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("el{");
    AphidLexerTests.TokenizeAll(aphidLexer, "el{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("el{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll56701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e");
    AphidLexerTests.TokenizeAll(aphidLexer, "e");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("e", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll4303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("else");
    AphidLexerTests.TokenizeAll(aphidLexer, "else");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("else", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll877()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elý");
    AphidLexerTests.TokenizeAll(aphidLexer, "elý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("elý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll477()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("els0");
    AphidLexerTests.TokenizeAll(aphidLexer, "els0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("els0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll657()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elsa");
    AphidLexerTests.TokenizeAll(aphidLexer, "elsa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("elsa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll217()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex<");
    AphidLexerTests.TokenizeAll(aphidLexer, "ex<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ex<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll797()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("els{");
    AphidLexerTests.TokenizeAll(aphidLexer, "els{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("els{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll95102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ext");
    AphidLexerTests.TokenizeAll(aphidLexer, "ext");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ext", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll69701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elsA");
    AphidLexerTests.TokenizeAll(aphidLexer, "elsA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("elsA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll387()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exA");
    AphidLexerTests.TokenizeAll(aphidLexer, "exA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll58401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exta");
    AphidLexerTests.TokenizeAll(aphidLexer, "exta");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll263()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ext0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ext0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ext0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll878()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ext{");
    AphidLexerTests.TokenizeAll(aphidLexer, "ext{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ext{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll790()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exte");
    AphidLexerTests.TokenizeAll(aphidLexer, "exte");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exte", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("els");
    AphidLexerTests.TokenizeAll(aphidLexer, "els");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("els", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll487()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exten");
    AphidLexerTests.TokenizeAll(aphidLexer, "exten");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exten", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll849()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extA");
    AphidLexerTests.TokenizeAll(aphidLexer, "extA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll476()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extea");
    AphidLexerTests.TokenizeAll(aphidLexer, "extea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll220()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex{");
    AphidLexerTests.TokenizeAll(aphidLexer, "ex{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ex{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll266()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exý");
    AphidLexerTests.TokenizeAll(aphidLexer, "exý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll90102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extend");
    AphidLexerTests.TokenizeAll(aphidLexer, "extend");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extend", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll230()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f");
    AphidLexerTests.TokenizeAll(aphidLexer, "f");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("f", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll90()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi");
    AphidLexerTests.TokenizeAll(aphidLexer, "fi");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll76801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fo");
    AphidLexerTests.TokenizeAll(aphidLexer, "fo");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fo", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll581()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fo\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fo\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fo\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll14101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fi\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fi\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll989()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f0");
    AphidLexerTests.TokenizeAll(aphidLexer, "f0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("f0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll441()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fiA");
    AphidLexerTests.TokenizeAll(aphidLexer, "fiA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll412()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("foA");
    AphidLexerTests.TokenizeAll(aphidLexer, "foA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("foA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll174()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin");
    AphidLexerTests.TokenizeAll(aphidLexer, "fin");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll80501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("for");
    AphidLexerTests.TokenizeAll(aphidLexer, "for");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("for", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll127()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("foa");
    AphidLexerTests.TokenizeAll(aphidLexer, "foa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("foa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll86()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fo0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fo0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fo0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll31301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fia");
    AphidLexerTests.TokenizeAll(aphidLexer, "fia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll40001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fA");
    AphidLexerTests.TokenizeAll(aphidLexer, "fA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll93801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finA");
    AphidLexerTests.TokenizeAll(aphidLexer, "finA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("finA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll908()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fo{");
    AphidLexerTests.TokenizeAll(aphidLexer, "fo{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fo{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll461()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fin0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fin0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll73101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fi0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fi0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll398()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi{");
    AphidLexerTests.TokenizeAll(aphidLexer, "fi{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fi{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll510()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin[");
    AphidLexerTests.TokenizeAll(aphidLexer, "fin[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fin[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll6701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll69702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fina");
    AphidLexerTests.TokenizeAll(aphidLexer, "fina");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll14301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll679()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f[");
    AphidLexerTests.TokenizeAll(aphidLexer, "f[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("f[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll981()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fb");
    AphidLexerTests.TokenizeAll(aphidLexer, "fb");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fb", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll43801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("faa");
    AphidLexerTests.TokenizeAll(aphidLexer, "faa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("faa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin{");
    AphidLexerTests.TokenizeAll(aphidLexer, "fin{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fin{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll46901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("faA");
    AphidLexerTests.TokenizeAll(aphidLexer, "faA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("faA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll334()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin");
    AphidLexerTests.TokenizeAll(aphidLexer, "fin");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll200()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fa0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll82602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa[");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fa[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll96102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fal");
    AphidLexerTests.TokenizeAll(aphidLexer, "fal");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fal", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll509()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("foý");
    AphidLexerTests.TokenizeAll(aphidLexer, "foý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("foý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll359()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa{");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fa{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll68601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "finaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("finaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll360()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("final");
    AphidLexerTests.TokenizeAll(aphidLexer, "final");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("final", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll855()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("faý");
    AphidLexerTests.TokenizeAll(aphidLexer, "faý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("faý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll147()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f{");
    AphidLexerTests.TokenizeAll(aphidLexer, "f{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("f{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll10701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falA");
    AphidLexerTests.TokenizeAll(aphidLexer, "falA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("falA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll353()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f");
    AphidLexerTests.TokenizeAll(aphidLexer, "f");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("f", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll209()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fal[");
    AphidLexerTests.TokenizeAll(aphidLexer, "fal[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fal[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fiý");
    AphidLexerTests.TokenizeAll(aphidLexer, "fiý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fiý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll42101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fal0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fal0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fal0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll670()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fala");
    AphidLexerTests.TokenizeAll(aphidLexer, "fala");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fala", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll737()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fals");
    AphidLexerTests.TokenizeAll(aphidLexer, "fals");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fals", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll553()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fal{");
    AphidLexerTests.TokenizeAll(aphidLexer, "fal{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fal{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll385()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("false");
    AphidLexerTests.TokenizeAll(aphidLexer, "false");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("false", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fal");
    AphidLexerTests.TokenizeAll(aphidLexer, "fal");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fal", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll950()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falsa");
    AphidLexerTests.TokenizeAll(aphidLexer, "falsa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("falsa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll548()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":=");
    AphidLexerTests.TokenizeAll(aphidLexer, ":=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(":=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll898()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<=");
    AphidLexerTests.TokenizeAll(aphidLexer, "<=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll265()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "<\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll513()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll248()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll75901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\:");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll184()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\@");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll389()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\|");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll368()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\~");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll85301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\!");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll73()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\`");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll11402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\/");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll468()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\.");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll11102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\?");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll61301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\]");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll82202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\-");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll42801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\,");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\>");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll92801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\)");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll70601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll617()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\*");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll15802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\<");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll713()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\(");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll551()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\^");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll786()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\=");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll47101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll418()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\#");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll498()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\_");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll47102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\;");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll278()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\$");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll73302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\&");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll929()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\%");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll21901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\\\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll140()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\t");
    AphidLexerTests.TokenizeAll(aphidLexer, "\t");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\t", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll6801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":\"");
    AphidLexerTests.TokenizeAll(aphidLexer, ":\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(":\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll137()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":_");
    AphidLexerTests.TokenizeAll(aphidLexer, ":_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(":_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll7801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll48101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("t");
    AphidLexerTests.TokenizeAll(aphidLexer, "t");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("t", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll26202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("t\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "t\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("t\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll39302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tr");
    AphidLexerTests.TokenizeAll(aphidLexer, "tr");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tr", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll840()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("t0");
    AphidLexerTests.TokenizeAll(aphidLexer, "t0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("t0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll433()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tr\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "tr\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tr\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll557()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("try");
    AphidLexerTests.TokenizeAll(aphidLexer, "try");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("try", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll517()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ta");
    AphidLexerTests.TokenizeAll(aphidLexer, "ta");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll32301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("t{");
    AphidLexerTests.TokenizeAll(aphidLexer, "t{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("t{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tr0");
    AphidLexerTests.TokenizeAll(aphidLexer, "tr0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tr0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll645()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("trA");
    AphidLexerTests.TokenizeAll(aphidLexer, "trA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("trA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll874()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tA");
    AphidLexerTests.TokenizeAll(aphidLexer, "tA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll153()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tra");
    AphidLexerTests.TokenizeAll(aphidLexer, "tra");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll62802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tru");
    AphidLexerTests.TokenizeAll(aphidLexer, "tru");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tru", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll68101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tr[");
    AphidLexerTests.TokenizeAll(aphidLexer, "tr[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tr[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll480()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("th");
    AphidLexerTests.TokenizeAll(aphidLexer, "th");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("th", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll312()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("t");
    AphidLexerTests.TokenizeAll(aphidLexer, "t");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("t", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll24801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("true");
    AphidLexerTests.TokenizeAll(aphidLexer, "true");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("true", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll924()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tru0");
    AphidLexerTests.TokenizeAll(aphidLexer, "tru0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tru0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll67501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("trua");
    AphidLexerTests.TokenizeAll(aphidLexer, "trua");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("trua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll96201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tru{");
    AphidLexerTests.TokenizeAll(aphidLexer, "tru{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tru{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tr{");
    AphidLexerTests.TokenizeAll(aphidLexer, "tr{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tr{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll896()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("truA");
    AphidLexerTests.TokenizeAll(aphidLexer, "truA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("truA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll643()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tru");
    AphidLexerTests.TokenizeAll(aphidLexer, "tru");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tru", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll75303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("th\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "th\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("th\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll635()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thA");
    AphidLexerTests.TokenizeAll(aphidLexer, "thA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll239()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thr");
    AphidLexerTests.TokenizeAll(aphidLexer, "thr");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thr", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll578()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("th0");
    AphidLexerTests.TokenizeAll(aphidLexer, "th0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("th0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll396()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tha");
    AphidLexerTests.TokenizeAll(aphidLexer, "tha");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tha", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tr");
    AphidLexerTests.TokenizeAll(aphidLexer, "tr");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tr", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll83202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thra");
    AphidLexerTests.TokenizeAll(aphidLexer, "thra");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll755()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thrA");
    AphidLexerTests.TokenizeAll(aphidLexer, "thrA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thrA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll211()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thi");
    AphidLexerTests.TokenizeAll(aphidLexer, "thi");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll6103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thro");
    AphidLexerTests.TokenizeAll(aphidLexer, "thro");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thro", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll1901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("th");
    AphidLexerTests.TokenizeAll(aphidLexer, "th");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("th", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll685()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thr[");
    AphidLexerTests.TokenizeAll(aphidLexer, "thr[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thr[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll92802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thia");
    AphidLexerTests.TokenizeAll(aphidLexer, "thia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll470()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("this");
    AphidLexerTests.TokenizeAll(aphidLexer, "this");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("this", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll683()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thi{");
    AphidLexerTests.TokenizeAll(aphidLexer, "thi{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thi{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll65602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thiA");
    AphidLexerTests.TokenizeAll(aphidLexer, "thiA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll169()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thr{");
    AphidLexerTests.TokenizeAll(aphidLexer, "thr{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thr{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll91()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thr");
    AphidLexerTests.TokenizeAll(aphidLexer, "thr");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thr", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thi");
    AphidLexerTests.TokenizeAll(aphidLexer, "thi");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll21601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throa");
    AphidLexerTests.TokenizeAll(aphidLexer, "throa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("throa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll26901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throw");
    AphidLexerTests.TokenizeAll(aphidLexer, "throw");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("throw", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll654()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":#");
    AphidLexerTests.TokenizeAll(aphidLexer, ":#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(":#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll18601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<#");
    AphidLexerTests.TokenizeAll(aphidLexer, "<#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll376()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":;");
    AphidLexerTests.TokenizeAll(aphidLexer, ":;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(":;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll65603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("g");
    AphidLexerTests.TokenizeAll(aphidLexer, "g");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("g", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll151()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":$");
    AphidLexerTests.TokenizeAll(aphidLexer, ":$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(":$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll58501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<$");
    AphidLexerTests.TokenizeAll(aphidLexer, "<$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll83001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\n");
    AphidLexerTests.TokenizeAll(aphidLexer, "\n");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\n", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll170()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll42102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<&");
    AphidLexerTests.TokenizeAll(aphidLexer, "<&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll95401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("v");
    AphidLexerTests.TokenizeAll(aphidLexer, "v");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("v", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll61402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":&");
    AphidLexerTests.TokenizeAll(aphidLexer, ":&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(":&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll69902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("u");
    AphidLexerTests.TokenizeAll(aphidLexer, "u");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("u", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll28701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("u\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "u\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("u\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll41901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ua");
    AphidLexerTests.TokenizeAll(aphidLexer, "ua");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll845()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("us");
    AphidLexerTests.TokenizeAll(aphidLexer, "us");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("us", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll831()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("u{");
    AphidLexerTests.TokenizeAll(aphidLexer, "u{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("u{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll21602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("u0");
    AphidLexerTests.TokenizeAll(aphidLexer, "u0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("u0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll31501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("uA");
    AphidLexerTests.TokenizeAll(aphidLexer, "uA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("uA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll79601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("us\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "us\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("us\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll4801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usi");
    AphidLexerTests.TokenizeAll(aphidLexer, "usi");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll596()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("us0");
    AphidLexerTests.TokenizeAll(aphidLexer, "us0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("us0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll410()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usA");
    AphidLexerTests.TokenizeAll(aphidLexer, "usA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll94701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("us<");
    AphidLexerTests.TokenizeAll(aphidLexer, "us<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("us<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll20301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usiA");
    AphidLexerTests.TokenizeAll(aphidLexer, "usiA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll926()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("u");
    AphidLexerTests.TokenizeAll(aphidLexer, "u");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("u", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll59401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usa");
    AphidLexerTests.TokenizeAll(aphidLexer, "usa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll608()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usia");
    AphidLexerTests.TokenizeAll(aphidLexer, "usia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll88701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("us{");
    AphidLexerTests.TokenizeAll(aphidLexer, "us{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("us{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll12701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usý");
    AphidLexerTests.TokenizeAll(aphidLexer, "usý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll237()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usi0");
    AphidLexerTests.TokenizeAll(aphidLexer, "usi0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usi0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll60801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usi[");
    AphidLexerTests.TokenizeAll(aphidLexer, "usi[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usi[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll58002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usi{");
    AphidLexerTests.TokenizeAll(aphidLexer, "usi{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usi{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll26001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usin");
    AphidLexerTests.TokenizeAll(aphidLexer, "usin");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll21202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usi");
    AphidLexerTests.TokenizeAll(aphidLexer, "usi");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll343()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("using");
    AphidLexerTests.TokenizeAll(aphidLexer, "using");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("using", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll638()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usina");
    AphidLexerTests.TokenizeAll(aphidLexer, "usina");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll345()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeAll(aphidLexer, "<%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll35702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":%");
    AphidLexerTests.TokenizeAll(aphidLexer, ":%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(":%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll29201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\f");
    AphidLexerTests.TokenizeAll(aphidLexer, "\f");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\f", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll48001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":\'");
    AphidLexerTests.TokenizeAll(aphidLexer, ":\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(":\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll693()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l");
    AphidLexerTests.TokenizeAll(aphidLexer, "l");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("l", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll891()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "l\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("l\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll725()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l0");
    AphidLexerTests.TokenizeAll(aphidLexer, "l0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("l0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll773()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l<");
    AphidLexerTests.TokenizeAll(aphidLexer, "l<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("l<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll270()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lo\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "lo\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("lo\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll89701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll46001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lob");
    AphidLexerTests.TokenizeAll(aphidLexer, "lob");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("lob", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll43101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loA");
    AphidLexerTests.TokenizeAll(aphidLexer, "loA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll27501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lo{");
    AphidLexerTests.TokenizeAll(aphidLexer, "lo{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("lo{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll71301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loc");
    AphidLexerTests.TokenizeAll(aphidLexer, "loc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll10702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lA");
    AphidLexerTests.TokenizeAll(aphidLexer, "lA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("lA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll29602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lo");
    AphidLexerTests.TokenizeAll(aphidLexer, "lo");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("lo", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll73102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loca");
    AphidLexerTests.TokenizeAll(aphidLexer, "loca");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll615()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("locA");
    AphidLexerTests.TokenizeAll(aphidLexer, "locA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("locA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll963()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loc[");
    AphidLexerTests.TokenizeAll(aphidLexer, "loc[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loc[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll77701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loc0");
    AphidLexerTests.TokenizeAll(aphidLexer, "loc0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loc0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll626()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lo0");
    AphidLexerTests.TokenizeAll(aphidLexer, "lo0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("lo0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll743()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loc{");
    AphidLexerTests.TokenizeAll(aphidLexer, "loc{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loc{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll555()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loaA");
    AphidLexerTests.TokenizeAll(aphidLexer, "loaA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll62601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("la");
    AphidLexerTests.TokenizeAll(aphidLexer, "la");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("la", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll9802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa[");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loa[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll65701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "loaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll727()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa{");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loa{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll48701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l[");
    AphidLexerTests.TokenizeAll(aphidLexer, "l[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("l[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll19701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l{");
    AphidLexerTests.TokenizeAll(aphidLexer, "l{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("l{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll74301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll73801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l");
    AphidLexerTests.TokenizeAll(aphidLexer, "l");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("l", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll987()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("load");
    AphidLexerTests.TokenizeAll(aphidLexer, "load");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("load", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll88501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loc");
    AphidLexerTests.TokenizeAll(aphidLexer, "loc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll520()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa0");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loa0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll37201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lock");
    AphidLexerTests.TokenizeAll(aphidLexer, "lock");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("lock", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll2801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "<\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("<\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll55701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\'\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "\'\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\'\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll90301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\'\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "\'\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\'\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll98603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("k");
    AphidLexerTests.TokenizeAll(aphidLexer, "k");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("k", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll20901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\r");
    AphidLexerTests.TokenizeAll(aphidLexer, "\r");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\r", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll453()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w");
    AphidLexerTests.TokenizeAll(aphidLexer, "w");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("w", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll52801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wa");
    AphidLexerTests.TokenizeAll(aphidLexer, "wa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("wa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll720()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w{");
    AphidLexerTests.TokenizeAll(aphidLexer, "w{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("w{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll920()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wh");
    AphidLexerTests.TokenizeAll(aphidLexer, "wh");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("wh", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll18502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wh\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "wh\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("wh\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll73701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w");
    AphidLexerTests.TokenizeAll(aphidLexer, "w");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("w", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll77301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whi");
    AphidLexerTests.TokenizeAll(aphidLexer, "whi");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll94702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w0");
    AphidLexerTests.TokenizeAll(aphidLexer, "w0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("w0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whi0");
    AphidLexerTests.TokenizeAll(aphidLexer, "whi0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whi0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll109()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whA");
    AphidLexerTests.TokenizeAll(aphidLexer, "whA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll267()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whil");
    AphidLexerTests.TokenizeAll(aphidLexer, "whil");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whil", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll256()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wha");
    AphidLexerTests.TokenizeAll(aphidLexer, "wha");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("wha", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll75304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wh[");
    AphidLexerTests.TokenizeAll(aphidLexer, "wh[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("wh[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll450()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whia");
    AphidLexerTests.TokenizeAll(aphidLexer, "whia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll95402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wA");
    AphidLexerTests.TokenizeAll(aphidLexer, "wA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("wA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll80()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whiA");
    AphidLexerTests.TokenizeAll(aphidLexer, "whiA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll99701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whi[");
    AphidLexerTests.TokenizeAll(aphidLexer, "whi[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whi[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll791()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wh0");
    AphidLexerTests.TokenizeAll(aphidLexer, "wh0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("wh0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll24402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wh{");
    AphidLexerTests.TokenizeAll(aphidLexer, "wh{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("wh{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll67502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whý");
    AphidLexerTests.TokenizeAll(aphidLexer, "whý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll847()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whi{");
    AphidLexerTests.TokenizeAll(aphidLexer, "whi{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whi{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll583()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whila");
    AphidLexerTests.TokenizeAll(aphidLexer, "whila");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whila", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll21101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whi");
    AphidLexerTests.TokenizeAll(aphidLexer, "whi");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll58301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("n");
    AphidLexerTests.TokenizeAll(aphidLexer, "n");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("n", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll45001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("n\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "n\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("n\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll34101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("na");
    AphidLexerTests.TokenizeAll(aphidLexer, "na");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("na", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll87701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ne");
    AphidLexerTests.TokenizeAll(aphidLexer, "ne");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ne", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll94801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nA");
    AphidLexerTests.TokenizeAll(aphidLexer, "nA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll1501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("n[");
    AphidLexerTests.TokenizeAll(aphidLexer, "n[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("n[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll540()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("n{");
    AphidLexerTests.TokenizeAll(aphidLexer, "n{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("n{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll4002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("n");
    AphidLexerTests.TokenizeAll(aphidLexer, "n");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("n", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll83101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ne\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ne\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ne\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("neA");
    AphidLexerTests.TokenizeAll(aphidLexer, "neA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("neA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("new");
    AphidLexerTests.TokenizeAll(aphidLexer, "new");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("new", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll9001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ne[");
    AphidLexerTests.TokenizeAll(aphidLexer, "ne[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ne[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll181()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ne0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ne0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ne0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll434()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nu");
    AphidLexerTests.TokenizeAll(aphidLexer, "nu");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nu", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll712()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nu\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "nu\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nu\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll9803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nuA");
    AphidLexerTests.TokenizeAll(aphidLexer, "nuA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nuA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll7503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nu[");
    AphidLexerTests.TokenizeAll(aphidLexer, "nu[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nu[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll95403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("n0");
    AphidLexerTests.TokenizeAll(aphidLexer, "n0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("n0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll798()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nu0");
    AphidLexerTests.TokenizeAll(aphidLexer, "nu0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nu0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll6501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nul");
    AphidLexerTests.TokenizeAll(aphidLexer, "nul");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nul", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll828()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nea");
    AphidLexerTests.TokenizeAll(aphidLexer, "nea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll50801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ne{");
    AphidLexerTests.TokenizeAll(aphidLexer, "ne{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ne{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll29801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("neý");
    AphidLexerTests.TokenizeAll(aphidLexer, "neý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("neý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll6104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nula");
    AphidLexerTests.TokenizeAll(aphidLexer, "nula");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nula", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll64701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nulA");
    AphidLexerTests.TokenizeAll(aphidLexer, "nulA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nulA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll63001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nul0");
    AphidLexerTests.TokenizeAll(aphidLexer, "nul0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nul0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll14401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nul[");
    AphidLexerTests.TokenizeAll(aphidLexer, "nul[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nul[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll108()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("null");
    AphidLexerTests.TokenizeAll(aphidLexer, "null");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("null", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll48002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nul{");
    AphidLexerTests.TokenizeAll(aphidLexer, "nul{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nul{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll31201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nua");
    AphidLexerTests.TokenizeAll(aphidLexer, "nua");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll865()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nul");
    AphidLexerTests.TokenizeAll(aphidLexer, "nul");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nul", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll40701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nu{");
    AphidLexerTests.TokenizeAll(aphidLexer, "nu{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nu{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll59901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nuý");
    AphidLexerTests.TokenizeAll(aphidLexer, "nuý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nuý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll488()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\v");
    AphidLexerTests.TokenizeAll(aphidLexer, "\v");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\v", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("m");
    AphidLexerTests.TokenizeAll(aphidLexer, "m");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("m", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll24403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll739()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("o");
    AphidLexerTests.TokenizeAll(aphidLexer, "o");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("o", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll235()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll91002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll97801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll8601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^");
    AphidLexerTests.TokenizeAll(aphidLexer, "^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll255()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "^\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll26501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^!");
    AphidLexerTests.TokenizeAll(aphidLexer, "^!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll5402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^@");
    AphidLexerTests.TokenizeAll(aphidLexer, "^@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll232()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^`");
    AphidLexerTests.TokenizeAll(aphidLexer, "^`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll6001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^~");
    AphidLexerTests.TokenizeAll(aphidLexer, "^~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll62502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^:");
    AphidLexerTests.TokenizeAll(aphidLexer, "^:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll493()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^|");
    AphidLexerTests.TokenizeAll(aphidLexer, "^|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll485()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^/");
    AphidLexerTests.TokenizeAll(aphidLexer, "^/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll96103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^.");
    AphidLexerTests.TokenizeAll(aphidLexer, "^.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll95()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^?");
    AphidLexerTests.TokenizeAll(aphidLexer, "^?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll162()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^]");
    AphidLexerTests.TokenizeAll(aphidLexer, "^]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll198()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^-");
    AphidLexerTests.TokenizeAll(aphidLexer, "^-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll99002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^,");
    AphidLexerTests.TokenizeAll(aphidLexer, "^,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll722()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^>");
    AphidLexerTests.TokenizeAll(aphidLexer, "^>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll75703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^)");
    AphidLexerTests.TokenizeAll(aphidLexer, "^)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll290()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "^\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll47801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^*");
    AphidLexerTests.TokenizeAll(aphidLexer, "^*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll261()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^<");
    AphidLexerTests.TokenizeAll(aphidLexer, "^<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll836()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^+");
    AphidLexerTests.TokenizeAll(aphidLexer, "^+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll15501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^^");
    AphidLexerTests.TokenizeAll(aphidLexer, "^^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^(");
    AphidLexerTests.TokenizeAll(aphidLexer, "^(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^=");
    AphidLexerTests.TokenizeAll(aphidLexer, "^=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll479()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "^\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll973()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^#");
    AphidLexerTests.TokenizeAll(aphidLexer, "^#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll15301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^_");
    AphidLexerTests.TokenizeAll(aphidLexer, "^_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll827()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^;");
    AphidLexerTests.TokenizeAll(aphidLexer, "^;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll611()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^$");
    AphidLexerTests.TokenizeAll(aphidLexer, "^$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll64301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^&");
    AphidLexerTests.TokenizeAll(aphidLexer, "^&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^%");
    AphidLexerTests.TokenizeAll(aphidLexer, "^%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll54301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "^\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("^\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll176()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll163()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll62702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll43602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~");
    AphidLexerTests.TokenizeAll(aphidLexer, "~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll65001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "~\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~:");
    AphidLexerTests.TokenizeAll(aphidLexer, "~:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll60301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~@");
    AphidLexerTests.TokenizeAll(aphidLexer, "~@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll47701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~|");
    AphidLexerTests.TokenizeAll(aphidLexer, "~|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll1502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~~");
    AphidLexerTests.TokenizeAll(aphidLexer, "~~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll72001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~!");
    AphidLexerTests.TokenizeAll(aphidLexer, "~!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll89401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~/");
    AphidLexerTests.TokenizeAll(aphidLexer, "~/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll415()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~.");
    AphidLexerTests.TokenizeAll(aphidLexer, "~.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll19001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~?");
    AphidLexerTests.TokenizeAll(aphidLexer, "~?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll77()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~]");
    AphidLexerTests.TokenizeAll(aphidLexer, "~]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll16501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~-");
    AphidLexerTests.TokenizeAll(aphidLexer, "~-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll70602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~,");
    AphidLexerTests.TokenizeAll(aphidLexer, "~,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~>");
    AphidLexerTests.TokenizeAll(aphidLexer, "~>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll90501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~)");
    AphidLexerTests.TokenizeAll(aphidLexer, "~)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll15502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "~\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll93501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~*");
    AphidLexerTests.TokenizeAll(aphidLexer, "~*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll814()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~<");
    AphidLexerTests.TokenizeAll(aphidLexer, "~<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll41501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~+");
    AphidLexerTests.TokenizeAll(aphidLexer, "~+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll62803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~(");
    AphidLexerTests.TokenizeAll(aphidLexer, "~(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll609()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~^");
    AphidLexerTests.TokenizeAll(aphidLexer, "~^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll29802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~=");
    AphidLexerTests.TokenizeAll(aphidLexer, "~=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll780()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "~\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll66402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~#");
    AphidLexerTests.TokenizeAll(aphidLexer, "~#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll57801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~_");
    AphidLexerTests.TokenizeAll(aphidLexer, "~_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll68602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~;");
    AphidLexerTests.TokenizeAll(aphidLexer, "~;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll55601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~$");
    AphidLexerTests.TokenizeAll(aphidLexer, "~$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll88901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~&");
    AphidLexerTests.TokenizeAll(aphidLexer, "~&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll89101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~%");
    AphidLexerTests.TokenizeAll(aphidLexer, "~%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("~%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll53101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*");
    AphidLexerTests.TokenizeAll(aphidLexer, "*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll789()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "*\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll32501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*!");
    AphidLexerTests.TokenizeAll(aphidLexer, "*!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll13101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*@");
    AphidLexerTests.TokenizeAll(aphidLexer, "*@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll97501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*:");
    AphidLexerTests.TokenizeAll(aphidLexer, "*:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll96301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*|");
    AphidLexerTests.TokenizeAll(aphidLexer, "*|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll813()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*~");
    AphidLexerTests.TokenizeAll(aphidLexer, "*~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll494()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*`");
    AphidLexerTests.TokenizeAll(aphidLexer, "*`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll29202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*/");
    AphidLexerTests.TokenizeAll(aphidLexer, "*/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll189()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*.");
    AphidLexerTests.TokenizeAll(aphidLexer, "*.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll593()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*?");
    AphidLexerTests.TokenizeAll(aphidLexer, "*?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll2001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*]");
    AphidLexerTests.TokenizeAll(aphidLexer, "*]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll194()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*-");
    AphidLexerTests.TokenizeAll(aphidLexer, "*-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll25303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*,");
    AphidLexerTests.TokenizeAll(aphidLexer, "*,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll71501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*>");
    AphidLexerTests.TokenizeAll(aphidLexer, "*>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll81901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*)");
    AphidLexerTests.TokenizeAll(aphidLexer, "*)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll895()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "*\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll55702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("**");
    AphidLexerTests.TokenizeAll(aphidLexer, "**");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("**", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll58101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*<");
    AphidLexerTests.TokenizeAll(aphidLexer, "*<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll84401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*+");
    AphidLexerTests.TokenizeAll(aphidLexer, "*+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll4802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*(");
    AphidLexerTests.TokenizeAll(aphidLexer, "*(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll870()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*^");
    AphidLexerTests.TokenizeAll(aphidLexer, "*^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll92901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*=");
    AphidLexerTests.TokenizeAll(aphidLexer, "*=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll977()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*#");
    AphidLexerTests.TokenizeAll(aphidLexer, "*#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll957()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*_");
    AphidLexerTests.TokenizeAll(aphidLexer, "*_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll549()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*;");
    AphidLexerTests.TokenizeAll(aphidLexer, "*;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll589()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*$");
    AphidLexerTests.TokenizeAll(aphidLexer, "*$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll446()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*&");
    AphidLexerTests.TokenizeAll(aphidLexer, "*&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll26203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*%");
    AphidLexerTests.TokenizeAll(aphidLexer, "*%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll761()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "*\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("*\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll24802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".");
    AphidLexerTests.TokenizeAll(aphidLexer, ".");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll723()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".\0");
    AphidLexerTests.TokenizeAll(aphidLexer, ".\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll134()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".@");
    AphidLexerTests.TokenizeAll(aphidLexer, ".@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll964()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".|");
    AphidLexerTests.TokenizeAll(aphidLexer, ".|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll32502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".~");
    AphidLexerTests.TokenizeAll(aphidLexer, ".~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll673()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".:");
    AphidLexerTests.TokenizeAll(aphidLexer, ".:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll48201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".`");
    AphidLexerTests.TokenizeAll(aphidLexer, ".`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll71201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".!");
    AphidLexerTests.TokenizeAll(aphidLexer, ".!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll41301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("./");
    AphidLexerTests.TokenizeAll(aphidLexer, "./");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("./", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll126()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("..");
    AphidLexerTests.TokenizeAll(aphidLexer, "..");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("..", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll161()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".?");
    AphidLexerTests.TokenizeAll(aphidLexer, ".?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll99702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".]");
    AphidLexerTests.TokenizeAll(aphidLexer, ".]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll93()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".-");
    AphidLexerTests.TokenizeAll(aphidLexer, ".-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll736()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".,");
    AphidLexerTests.TokenizeAll(aphidLexer, ".,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll11201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".>");
    AphidLexerTests.TokenizeAll(aphidLexer, ".>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll46902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".)");
    AphidLexerTests.TokenizeAll(aphidLexer, ".)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll246()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".\\");
    AphidLexerTests.TokenizeAll(aphidLexer, ".\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll435()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".*");
    AphidLexerTests.TokenizeAll(aphidLexer, ".*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll60603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".<");
    AphidLexerTests.TokenizeAll(aphidLexer, ".<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll68603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".+");
    AphidLexerTests.TokenizeAll(aphidLexer, ".+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll61101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".^");
    AphidLexerTests.TokenizeAll(aphidLexer, ".^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll71001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".(");
    AphidLexerTests.TokenizeAll(aphidLexer, ".(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll432()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".=");
    AphidLexerTests.TokenizeAll(aphidLexer, ".=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll99502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".\"");
    AphidLexerTests.TokenizeAll(aphidLexer, ".\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll952()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".#");
    AphidLexerTests.TokenizeAll(aphidLexer, ".#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll60604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("._");
    AphidLexerTests.TokenizeAll(aphidLexer, "._");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("._", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll437()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".;");
    AphidLexerTests.TokenizeAll(aphidLexer, ".;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll37801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".&");
    AphidLexerTests.TokenizeAll(aphidLexer, ".&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll70402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".%");
    AphidLexerTests.TokenizeAll(aphidLexer, ".%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll41601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".\'");
    AphidLexerTests.TokenizeAll(aphidLexer, ".\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(".\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll744()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("}");
    AphidLexerTests.TokenizeAll(aphidLexer, "}");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("}", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll15001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+");
    AphidLexerTests.TokenizeAll(aphidLexer, "+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll24803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "+\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll74201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+!");
    AphidLexerTests.TokenizeAll(aphidLexer, "+!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll374()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+:");
    AphidLexerTests.TokenizeAll(aphidLexer, "+:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll42701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+@");
    AphidLexerTests.TokenizeAll(aphidLexer, "+@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll709()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+`");
    AphidLexerTests.TokenizeAll(aphidLexer, "+`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll767()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+|");
    AphidLexerTests.TokenizeAll(aphidLexer, "+|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll968()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+~");
    AphidLexerTests.TokenizeAll(aphidLexer, "+~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll451()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+/");
    AphidLexerTests.TokenizeAll(aphidLexer, "+/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll50301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+.");
    AphidLexerTests.TokenizeAll(aphidLexer, "+.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll74401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+?");
    AphidLexerTests.TokenizeAll(aphidLexer, "+?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll79001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+]");
    AphidLexerTests.TokenizeAll(aphidLexer, "+]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll96302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+-");
    AphidLexerTests.TokenizeAll(aphidLexer, "+-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll718()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+,");
    AphidLexerTests.TokenizeAll(aphidLexer, "+,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll73103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+>");
    AphidLexerTests.TokenizeAll(aphidLexer, "+>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll30901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+)");
    AphidLexerTests.TokenizeAll(aphidLexer, "+)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll67001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "+\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll65101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+*");
    AphidLexerTests.TokenizeAll(aphidLexer, "+*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll4101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+<");
    AphidLexerTests.TokenizeAll(aphidLexer, "+<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll86801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("++");
    AphidLexerTests.TokenizeAll(aphidLexer, "++");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("++", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll60201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+(");
    AphidLexerTests.TokenizeAll(aphidLexer, "+(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll519()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+^");
    AphidLexerTests.TokenizeAll(aphidLexer, "+^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll46401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+=");
    AphidLexerTests.TokenizeAll(aphidLexer, "+=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll7701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "+\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll9501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+#");
    AphidLexerTests.TokenizeAll(aphidLexer, "+#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll15002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+_");
    AphidLexerTests.TokenizeAll(aphidLexer, "+_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll671()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+;");
    AphidLexerTests.TokenizeAll(aphidLexer, "+;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+$");
    AphidLexerTests.TokenizeAll(aphidLexer, "+$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll284()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+%");
    AphidLexerTests.TokenizeAll(aphidLexer, "+%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll4102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "+\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("+\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll60101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-");
    AphidLexerTests.TokenizeAll(aphidLexer, "-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll60802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "-\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll61701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-:");
    AphidLexerTests.TokenizeAll(aphidLexer, "-:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll55501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-@");
    AphidLexerTests.TokenizeAll(aphidLexer, "-@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll454()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-~");
    AphidLexerTests.TokenizeAll(aphidLexer, "-~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll50501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-!");
    AphidLexerTests.TokenizeAll(aphidLexer, "-!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll59402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-|");
    AphidLexerTests.TokenizeAll(aphidLexer, "-|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll87702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-`");
    AphidLexerTests.TokenizeAll(aphidLexer, "-`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll20501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-/");
    AphidLexerTests.TokenizeAll(aphidLexer, "-/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll69903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-.");
    AphidLexerTests.TokenizeAll(aphidLexer, "-.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll80802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-?");
    AphidLexerTests.TokenizeAll(aphidLexer, "-?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll462()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-]");
    AphidLexerTests.TokenizeAll(aphidLexer, "-]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll14402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("--");
    AphidLexerTests.TokenizeAll(aphidLexer, "--");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("--", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll35801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-,");
    AphidLexerTests.TokenizeAll(aphidLexer, "-,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll354()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("->");
    AphidLexerTests.TokenizeAll(aphidLexer, "->");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("->", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll841()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-)");
    AphidLexerTests.TokenizeAll(aphidLexer, "-)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll5901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "-\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll662()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-*");
    AphidLexerTests.TokenizeAll(aphidLexer, "-*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll40501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-<");
    AphidLexerTests.TokenizeAll(aphidLexer, "-<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll792()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-+");
    AphidLexerTests.TokenizeAll(aphidLexer, "-+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll41302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-^");
    AphidLexerTests.TokenizeAll(aphidLexer, "-^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll128()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-(");
    AphidLexerTests.TokenizeAll(aphidLexer, "-(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll660()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-=");
    AphidLexerTests.TokenizeAll(aphidLexer, "-=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll308()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "-\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll414()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-#");
    AphidLexerTests.TokenizeAll(aphidLexer, "-#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll4901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-_");
    AphidLexerTests.TokenizeAll(aphidLexer, "-_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll68301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-;");
    AphidLexerTests.TokenizeAll(aphidLexer, "-;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll971()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-$");
    AphidLexerTests.TokenizeAll(aphidLexer, "-$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll443()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-&");
    AphidLexerTests.TokenizeAll(aphidLexer, "-&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll23101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-%");
    AphidLexerTests.TokenizeAll(aphidLexer, "-%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll890()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "-\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("-\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll44101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/");
    AphidLexerTests.TokenizeAll(aphidLexer, "/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll20502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "/\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll75704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/:");
    AphidLexerTests.TokenizeAll(aphidLexer, "/:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll70003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/@");
    AphidLexerTests.TokenizeAll(aphidLexer, "/@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll84001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/|");
    AphidLexerTests.TokenizeAll(aphidLexer, "/|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll82801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/~");
    AphidLexerTests.TokenizeAll(aphidLexer, "/~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll740()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/!");
    AphidLexerTests.TokenizeAll(aphidLexer, "/!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll21701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/`");
    AphidLexerTests.TokenizeAll(aphidLexer, "/`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll82()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("//");
    AphidLexerTests.TokenizeAll(aphidLexer, "//");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("//", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll85()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/.");
    AphidLexerTests.TokenizeAll(aphidLexer, "/.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll717()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/?");
    AphidLexerTests.TokenizeAll(aphidLexer, "/?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll223()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/]");
    AphidLexerTests.TokenizeAll(aphidLexer, "/]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll15803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/-");
    AphidLexerTests.TokenizeAll(aphidLexer, "/-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll218()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/,");
    AphidLexerTests.TokenizeAll(aphidLexer, "/,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll629()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/>");
    AphidLexerTests.TokenizeAll(aphidLexer, "/>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll4902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/)");
    AphidLexerTests.TokenizeAll(aphidLexer, "/)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll69301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "/\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll560()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/*");
    AphidLexerTests.TokenizeAll(aphidLexer, "/*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll62503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/<");
    AphidLexerTests.TokenizeAll(aphidLexer, "/<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll62703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/+");
    AphidLexerTests.TokenizeAll(aphidLexer, "/+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll53102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/(");
    AphidLexerTests.TokenizeAll(aphidLexer, "/(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll84201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/^");
    AphidLexerTests.TokenizeAll(aphidLexer, "/^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll90401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/=");
    AphidLexerTests.TokenizeAll(aphidLexer, "/=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll86501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "/\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll89202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/#");
    AphidLexerTests.TokenizeAll(aphidLexer, "/#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll46501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/_");
    AphidLexerTests.TokenizeAll(aphidLexer, "/_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll817()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/;");
    AphidLexerTests.TokenizeAll(aphidLexer, "/;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll39901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/$");
    AphidLexerTests.TokenizeAll(aphidLexer, "/$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll317()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/&");
    AphidLexerTests.TokenizeAll(aphidLexer, "/&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll426()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/%");
    AphidLexerTests.TokenizeAll(aphidLexer, "/%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll54901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "/\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll70301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ta\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ta\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ta\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll4304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thro[");
    AphidLexerTests.TokenizeAll(aphidLexer, "thro[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thro[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll96401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thi_");
    AphidLexerTests.TokenizeAll(aphidLexer, "thi_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thi_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll44301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defi_");
    AphidLexerTests.TokenizeAll(aphidLexer, "defi_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defi_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll776()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dele[");
    AphidLexerTests.TokenizeAll(aphidLexer, "dele[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("dele[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll84202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usin[");
    AphidLexerTests.TokenizeAll(aphidLexer, "usin[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usin[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll16701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whil_");
    AphidLexerTests.TokenizeAll(aphidLexer, "whil_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whil_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll388()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exten[");
    AphidLexerTests.TokenizeAll(aphidLexer, "exten[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exten[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll12401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("def_");
    AphidLexerTests.TokenizeAll(aphidLexer, "def_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("def_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll54001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exte_");
    AphidLexerTests.TokenizeAll(aphidLexer, "exte_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exte_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll243()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("us_");
    AphidLexerTests.TokenizeAll(aphidLexer, "us_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("us_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll834()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("els_");
    AphidLexerTests.TokenizeAll(aphidLexer, "els_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("els_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll90103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ext_");
    AphidLexerTests.TokenizeAll(aphidLexer, "ext_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ext_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex_");
    AphidLexerTests.TokenizeAll(aphidLexer, "ex_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ex_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll8501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swi_");
    AphidLexerTests.TokenizeAll(aphidLexer, "swi_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swi_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll92501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("del_");
    AphidLexerTests.TokenizeAll(aphidLexer, "del_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("del_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll16101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tru_");
    AphidLexerTests.TokenizeAll(aphidLexer, "tru_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tru_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll43301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defa_");
    AphidLexerTests.TokenizeAll(aphidLexer, "defa_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defa_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll8201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat_");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll15701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r_");
    AphidLexerTests.TokenizeAll(aphidLexer, "r_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("r_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll18602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defau[");
    AphidLexerTests.TokenizeAll(aphidLexer, "defau[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defau[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll763()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con_");
    AphidLexerTests.TokenizeAll(aphidLexer, "con_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("con_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll11103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("brea_");
    AphidLexerTests.TokenizeAll(aphidLexer, "brea_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("brea_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w_");
    AphidLexerTests.TokenizeAll(aphidLexer, "w_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("w_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll49201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa_");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loa_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll332()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fo_");
    AphidLexerTests.TokenizeAll(aphidLexer, "fo_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fo_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll544()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nul_");
    AphidLexerTests.TokenizeAll(aphidLexer, "nul_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nul_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll40702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i_");
    AphidLexerTests.TokenizeAll(aphidLexer, "i_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("i_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll927()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fal_");
    AphidLexerTests.TokenizeAll(aphidLexer, "fal_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fal_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll92302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("u_");
    AphidLexerTests.TokenizeAll(aphidLexer, "u_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("u_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll50401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K÷\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "K÷\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K÷\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll64501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fina_");
    AphidLexerTests.TokenizeAll(aphidLexer, "fina_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fina_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll20503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ca_");
    AphidLexerTests.TokenizeAll(aphidLexer, "ca_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ca_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll55901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cont_");
    AphidLexerTests.TokenizeAll(aphidLexer, "cont_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cont_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll32302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catc[");
    AphidLexerTests.TokenizeAll(aphidLexer, "catc[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catc[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll191()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thro_");
    AphidLexerTests.TokenizeAll(aphidLexer, "thro_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thro_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll96901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thr_");
    AphidLexerTests.TokenizeAll(aphidLexer, "thr_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thr_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll27801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("th_");
    AphidLexerTests.TokenizeAll(aphidLexer, "th_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("th_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll563()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("br_");
    AphidLexerTests.TokenizeAll(aphidLexer, "br_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("br_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll65801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b_");
    AphidLexerTests.TokenizeAll(aphidLexer, "b_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("b_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll41902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whi_");
    AphidLexerTests.TokenizeAll(aphidLexer, "whi_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whi_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll120()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("co_");
    AphidLexerTests.TokenizeAll(aphidLexer, "co_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("co_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll47001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d_");
    AphidLexerTests.TokenizeAll(aphidLexer, "d_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("d_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll83102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi_");
    AphidLexerTests.TokenizeAll(aphidLexer, "fi_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fi_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll45101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loc_");
    AphidLexerTests.TokenizeAll(aphidLexer, "loc_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loc_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll16002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sw_");
    AphidLexerTests.TokenizeAll(aphidLexer, "sw_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("sw_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll55001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s_");
    AphidLexerTests.TokenizeAll(aphidLexer, "s_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("s_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll41303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l_");
    AphidLexerTests.TokenizeAll(aphidLexer, "l_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("l_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll4501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("t_");
    AphidLexerTests.TokenizeAll(aphidLexer, "t_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("t_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll319()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usi_");
    AphidLexerTests.TokenizeAll(aphidLexer, "usi_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usi_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll33101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lo_");
    AphidLexerTests.TokenizeAll(aphidLexer, "lo_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("lo_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll48501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fals_");
    AphidLexerTests.TokenizeAll(aphidLexer, "fals_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fals_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll85201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conti[");
    AphidLexerTests.TokenizeAll(aphidLexer, "conti[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("conti[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll22801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre_");
    AphidLexerTests.TokenizeAll(aphidLexer, "bre_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("bre_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll51802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin_");
    AphidLexerTests.TokenizeAll(aphidLexer, "fin_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fin_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll11302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de_");
    AphidLexerTests.TokenizeAll(aphidLexer, "de_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("de_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll86502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("n_");
    AphidLexerTests.TokenizeAll(aphidLexer, "n_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("n_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll75705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usin_");
    AphidLexerTests.TokenizeAll(aphidLexer, "usin_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usin_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll55002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usin\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "usin\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usin\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll35001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("el_");
    AphidLexerTests.TokenizeAll(aphidLexer, "el_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("el_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll215()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defi\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defi\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defi\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll799()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0E", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll496()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nu_");
    AphidLexerTests.TokenizeAll(aphidLexer, "nu_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nu_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll655()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c_");
    AphidLexerTests.TokenizeAll(aphidLexer, "c_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("c_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll23201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f_");
    AphidLexerTests.TokenizeAll(aphidLexer, "f_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("f_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll42301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e_");
    AphidLexerTests.TokenizeAll(aphidLexer, "e_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("e_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll424()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dele_");
    AphidLexerTests.TokenizeAll(aphidLexer, "dele_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("dele_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll50402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tr_");
    AphidLexerTests.TokenizeAll(aphidLexer, "tr_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tr_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll665()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa_");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fa_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll764()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thro\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "thro\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thro\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll119()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defau");
    AphidLexerTests.TokenizeAll(aphidLexer, "defau");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defau", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll35002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swit_");
    AphidLexerTests.TokenizeAll(aphidLexer, "swit_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swit_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll54002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re_");
    AphidLexerTests.TokenizeAll(aphidLexer, "re_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("re_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll93101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wh_");
    AphidLexerTests.TokenizeAll(aphidLexer, "wh_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("wh_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll58302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("brea\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "brea\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("brea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll677()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exten");
    AphidLexerTests.TokenizeAll(aphidLexer, "exten");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exten", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll55003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catc");
    AphidLexerTests.TokenizeAll(aphidLexer, "catc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll35401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delet");
    AphidLexerTests.TokenizeAll(aphidLexer, "delet");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delet", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll69904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fina");
    AphidLexerTests.TokenizeAll(aphidLexer, "fina");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll19002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conti");
    AphidLexerTests.TokenizeAll(aphidLexer, "conti");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("conti", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll88502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continu");
    AphidLexerTests.TokenizeAll(aphidLexer, "continu");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continu", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll8701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continu\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continu\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continu\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll97202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continuA");
    AphidLexerTests.TokenizeAll(aphidLexer, "continuA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continuA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll66001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continu[");
    AphidLexerTests.TokenizeAll(aphidLexer, "continu[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continu[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll19902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continu0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continu0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continu0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll84002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continub");
    AphidLexerTests.TokenizeAll(aphidLexer, "continub");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continub", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll78901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continu{");
    AphidLexerTests.TokenizeAll(aphidLexer, "continu{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continu{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll37301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continue");
    AphidLexerTests.TokenizeAll(aphidLexer, "continue");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continue", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll24702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continu");
    AphidLexerTests.TokenizeAll(aphidLexer, "continu");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continu", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll40803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continu_");
    AphidLexerTests.TokenizeAll(aphidLexer, "continu_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continu_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defin");
    AphidLexerTests.TokenizeAll(aphidLexer, "defin");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll17101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$a_");
    AphidLexerTests.TokenizeAll(aphidLexer, "$a_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("$a_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll582()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catc_");
    AphidLexerTests.TokenizeAll(aphidLexer, "catc_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catc_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll500()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ne_");
    AphidLexerTests.TokenizeAll(aphidLexer, "ne_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ne_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll53501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exte");
    AphidLexerTests.TokenizeAll(aphidLexer, "exte");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exte", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll42901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defa");
    AphidLexerTests.TokenizeAll(aphidLexer, "defa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll90601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("final");
    AphidLexerTests.TokenizeAll(aphidLexer, "final");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("final", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll13701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dele\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "dele\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("dele\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll99003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("final\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "final\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("final\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll39801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("n\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "n\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("n\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll75001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "r\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("r\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll125()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("u\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "u\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("u\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll45202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delet\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "delet\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delet\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll72()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exte\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "exte\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exte\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll37601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "e\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("e\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll54401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "d\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("d\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll346()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defin\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defin\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defin\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll692()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cont");
    AphidLexerTests.TokenizeAll(aphidLexer, "cont");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cont", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll24703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\'\0\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "\'\0\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\'\0\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll70302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\'\\\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "\'\\\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\'\\\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll14201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("1\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "1\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("1\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll5902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("1.");
    AphidLexerTests.TokenizeAll(aphidLexer, "1.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("1.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll881()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deĀ\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "deĀ\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("deĀ\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll60202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("10");
    AphidLexerTests.TokenizeAll(aphidLexer, "10");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("10", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll61302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continu\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continu\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continu\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll62602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "s\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("s\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll667()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switc\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "switc\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switc\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll92001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("1E");
    AphidLexerTests.TokenizeAll(aphidLexer, "1E");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("1E", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll172()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throw0");
    AphidLexerTests.TokenizeAll(aphidLexer, "throw0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("throw0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll6702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throwA");
    AphidLexerTests.TokenizeAll(aphidLexer, "throwA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("throwA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll29803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throwa");
    AphidLexerTests.TokenizeAll(aphidLexer, "throwa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("throwa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll866()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throw");
    AphidLexerTests.TokenizeAll(aphidLexer, "throw");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("throw", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll96104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throw[");
    AphidLexerTests.TokenizeAll(aphidLexer, "throw[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("throw[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll43802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\"\0\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "\"\0\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\"\0\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll937()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\"\\\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "\"\\\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\"\\\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll53502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conti\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "conti\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("conti\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll9101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "f\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("f\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll54003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exten\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "exten\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exten\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll31202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "i\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("i\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll42902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swita");
    AphidLexerTests.TokenizeAll(aphidLexer, "swita");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swita", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll71302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de0");
    AphidLexerTests.TokenizeAll(aphidLexer, "de0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("de0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll907()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%>\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "%>\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%>\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll6105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%><");
    AphidLexerTests.TokenizeAll(aphidLexer, "%><");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%><", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll164()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%><%\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "%><%\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%><%\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll123()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%><%=");
    AphidLexerTests.TokenizeAll(aphidLexer, "%><%=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%><%=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll115()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "w\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("w\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll19903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exte");
    AphidLexerTests.TokenizeAll(aphidLexer, "exte");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exte", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll135()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usia");
    AphidLexerTests.TokenizeAll(aphidLexer, "usia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll3901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll980()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("Ka");
    AphidLexerTests.TokenizeAll(aphidLexer, "Ka");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("Ka", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll271()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "defaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll11303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "c\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("c\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll352()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fals");
    AphidLexerTests.TokenizeAll(aphidLexer, "fals");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fals", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll49101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fina\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fina\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fina\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll98701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nea");
    AphidLexerTests.TokenizeAll(aphidLexer, "nea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll257()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("neA");
    AphidLexerTests.TokenizeAll(aphidLexer, "neA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("neA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll377()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fA");
    AphidLexerTests.TokenizeAll(aphidLexer, "fA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll96105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("newa");
    AphidLexerTests.TokenizeAll(aphidLexer, "newa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("newa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll245()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("new0");
    AphidLexerTests.TokenizeAll(aphidLexer, "new0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("new0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll92()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("new:");
    AphidLexerTests.TokenizeAll(aphidLexer, "new:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("new:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll168()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("newA");
    AphidLexerTests.TokenizeAll(aphidLexer, "newA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("newA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll15804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("new{");
    AphidLexerTests.TokenizeAll(aphidLexer, "new{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("new{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll21702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("new");
    AphidLexerTests.TokenizeAll(aphidLexer, "new");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("new", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll83701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("new\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "new\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("new\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll24404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("new_");
    AphidLexerTests.TokenizeAll(aphidLexer, "new_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("new_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll33401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("newa");
    AphidLexerTests.TokenizeAll(aphidLexer, "newa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("newa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll95103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "b\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("b\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll35301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defau\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defau\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defau\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll24002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dea");
    AphidLexerTests.TokenizeAll(aphidLexer, "dea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("dea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll82002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("rA");
    AphidLexerTests.TokenizeAll(aphidLexer, "rA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("rA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll882()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whi\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "whi\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whi\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll31901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defauA");
    AphidLexerTests.TokenizeAll(aphidLexer, "defauA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defauA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll35302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breaka");
    AphidLexerTests.TokenizeAll(aphidLexer, "breaka");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("breaka", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll869()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("break");
    AphidLexerTests.TokenizeAll(aphidLexer, "break");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("break", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll156()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breakA");
    AphidLexerTests.TokenizeAll(aphidLexer, "breakA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("breakA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll24003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("break0");
    AphidLexerTests.TokenizeAll(aphidLexer, "break0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("break0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll26002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("break_");
    AphidLexerTests.TokenizeAll(aphidLexer, "break_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("break_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll4305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deleta");
    AphidLexerTests.TokenizeAll(aphidLexer, "deleta");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("deleta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll939()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whil");
    AphidLexerTests.TokenizeAll(aphidLexer, "whil");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whil", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll132()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thr\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "thr\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thr\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll83702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catc");
    AphidLexerTests.TokenizeAll(aphidLexer, "catc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll85501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "l\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("l\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll234()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i0");
    AphidLexerTests.TokenizeAll(aphidLexer, "i0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("i0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll28702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defaua");
    AphidLexerTests.TokenizeAll(aphidLexer, "defaua");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defaua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll57802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0E\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll15302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E+");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0E+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll8602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E-");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0E-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll663()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0E0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll74402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E-0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E-0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0E-0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll24601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E-:");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E-:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0E-:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll13702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switca");
    AphidLexerTests.TokenizeAll(aphidLexer, "switca");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll87703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("th\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "th\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("th\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll74901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extena");
    AphidLexerTests.TokenizeAll(aphidLexer, "extena");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extena", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll10301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%>\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "%>\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%>\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll846()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll14102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throw\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "throw\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("throw\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll80901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usi\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "usi\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usi\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll27902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ca");
    AphidLexerTests.TokenizeAll(aphidLexer, "ca");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll12001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("la");
    AphidLexerTests.TokenizeAll(aphidLexer, "la");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("la", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll23001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w \0\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "w \0\0\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("w \0\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll90602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wa");
    AphidLexerTests.TokenizeAll(aphidLexer, "wa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("wa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll42201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wA");
    AphidLexerTests.TokenizeAll(aphidLexer, "wA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("wA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll860()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w0");
    AphidLexerTests.TokenizeAll(aphidLexer, "w0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("w0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll41502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i<");
    AphidLexerTests.TokenizeAll(aphidLexer, "i<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("i<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll42401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exten{");
    AphidLexerTests.TokenizeAll(aphidLexer, "exten{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exten{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll676()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("do\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "do\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("do\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll1503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("doa");
    AphidLexerTests.TokenizeAll(aphidLexer, "doa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("doa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll23901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("do0");
    AphidLexerTests.TokenizeAll(aphidLexer, "do0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("do0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll90603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("do{");
    AphidLexerTests.TokenizeAll(aphidLexer, "do{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("do{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll63301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("do");
    AphidLexerTests.TokenizeAll(aphidLexer, "do");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("do", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll44302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("doA");
    AphidLexerTests.TokenizeAll(aphidLexer, "doA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("doA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll65901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("do\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "do\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("do\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll80902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("do_");
    AphidLexerTests.TokenizeAll(aphidLexer, "do_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("do_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll420()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("doa");
    AphidLexerTests.TokenizeAll(aphidLexer, "doa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("doa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll311()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swia");
    AphidLexerTests.TokenizeAll(aphidLexer, "swia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll61901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ua");
    AphidLexerTests.TokenizeAll(aphidLexer, "ua");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll775()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll60203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defau{");
    AphidLexerTests.TokenizeAll(aphidLexer, "defau{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defau{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll93502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continue\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continue\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continue\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continuea\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continuea\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continuea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll87801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continueA\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continueA\0\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continueA\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll43803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continue[");
    AphidLexerTests.TokenizeAll(aphidLexer, "continue[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continue[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll342()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continue0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continue0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continue0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll28503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continue{");
    AphidLexerTests.TokenizeAll(aphidLexer, "continue{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continue{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll90901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continue");
    AphidLexerTests.TokenizeAll(aphidLexer, "continue");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continue", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll821()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continue_");
    AphidLexerTests.TokenizeAll(aphidLexer, "continue_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continue_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll2501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0E0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll81101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E00");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E00");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0E00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll45203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continue\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continue\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continue\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll459()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("uA");
    AphidLexerTests.TokenizeAll(aphidLexer, "uA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("uA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll97802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("def\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "def\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("def\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll70004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("in\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "in\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("in\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll75401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("inA");
    AphidLexerTests.TokenizeAll(aphidLexer, "inA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("inA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll20504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ina");
    AphidLexerTests.TokenizeAll(aphidLexer, "ina");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll573()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("in[");
    AphidLexerTests.TokenizeAll(aphidLexer, "in[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("in[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll97203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("in{");
    AphidLexerTests.TokenizeAll(aphidLexer, "in{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("in{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll9701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("in");
    AphidLexerTests.TokenizeAll(aphidLexer, "in");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("in", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll76802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("in\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "in\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("in\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll280()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("in_");
    AphidLexerTests.TokenizeAll(aphidLexer, "in_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("in_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll73401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ina");
    AphidLexerTests.TokenizeAll(aphidLexer, "ina");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll91601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fin\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fin\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll60501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sa");
    AphidLexerTests.TokenizeAll(aphidLexer, "sa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("sa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll5001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("u0");
    AphidLexerTests.TokenizeAll(aphidLexer, "u0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("u0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll1701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thia");
    AphidLexerTests.TokenizeAll(aphidLexer, "thia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll349()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deûA");
    AphidLexerTests.TokenizeAll(aphidLexer, "deûA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("deûA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll58201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("faa");
    AphidLexerTests.TokenizeAll(aphidLexer, "faa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("faa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll14403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("true\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "true\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("true\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll833()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("truea");
    AphidLexerTests.TokenizeAll(aphidLexer, "truea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("truea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll13703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("true{");
    AphidLexerTests.TokenizeAll(aphidLexer, "true{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("true{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll43701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("true_");
    AphidLexerTests.TokenizeAll(aphidLexer, "true_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("true_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll43804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("true\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "true\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("true\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll67701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conta");
    AphidLexerTests.TokenizeAll(aphidLexer, "conta");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("conta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll84501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catca");
    AphidLexerTests.TokenizeAll(aphidLexer, "catca");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll78601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swi\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "swi\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swi\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll43001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("del\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "del\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("del\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll69905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "bre\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("bre\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll72201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ba");
    AphidLexerTests.TokenizeAll(aphidLexer, "ba");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ba", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll66701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nA");
    AphidLexerTests.TokenizeAll(aphidLexer, "nA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll35303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loc");
    AphidLexerTests.TokenizeAll(aphidLexer, "loc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll674()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nu\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "nu\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nu\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll94501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll11801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cA");
    AphidLexerTests.TokenizeAll(aphidLexer, "cA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll43401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("caa");
    AphidLexerTests.TokenizeAll(aphidLexer, "caa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("caa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll92401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("else\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "else\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("else\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll34701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elsea");
    AphidLexerTests.TokenizeAll(aphidLexer, "elsea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("elsea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll18603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("else[");
    AphidLexerTests.TokenizeAll(aphidLexer, "else[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("else[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll4803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("else{");
    AphidLexerTests.TokenizeAll(aphidLexer, "else{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("else{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll71()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("else_");
    AphidLexerTests.TokenizeAll(aphidLexer, "else_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("else_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll81701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("else");
    AphidLexerTests.TokenizeAll(aphidLexer, "else");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("else", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll49401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("us\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "us\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("us\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll71101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exten");
    AphidLexerTests.TokenizeAll(aphidLexer, "exten");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exten", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll40201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bra");
    AphidLexerTests.TokenizeAll(aphidLexer, "bra");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("bra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll29502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ne\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ne\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ne\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll15303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("coa");
    AphidLexerTests.TokenizeAll(aphidLexer, "coa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("coa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll2002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sA");
    AphidLexerTests.TokenizeAll(aphidLexer, "sA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("sA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll365()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swit\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "swit\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swit\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll41903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ne{");
    AphidLexerTests.TokenizeAll(aphidLexer, "ne{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ne{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll524()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("contia");
    AphidLexerTests.TokenizeAll(aphidLexer, "contia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("contia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll47201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lA");
    AphidLexerTests.TokenizeAll(aphidLexer, "lA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("lA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll9702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%><\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "%><\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%><\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll384()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("co{");
    AphidLexerTests.TokenizeAll(aphidLexer, "co{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("co{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll83801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fi0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fi0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll85302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falsea");
    AphidLexerTests.TokenizeAll(aphidLexer, "falsea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("falsea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll17601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("false");
    AphidLexerTests.TokenizeAll(aphidLexer, "false");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("false", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll28101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falseA");
    AphidLexerTests.TokenizeAll(aphidLexer, "falseA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("falseA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll558()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("false0");
    AphidLexerTests.TokenizeAll(aphidLexer, "false0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("false0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll879()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("false_");
    AphidLexerTests.TokenizeAll(aphidLexer, "false_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("false_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll16901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("false\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "false\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("false\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll15401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("def0");
    AphidLexerTests.TokenizeAll(aphidLexer, "def0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("def0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll86702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("rea");
    AphidLexerTests.TokenizeAll(aphidLexer, "rea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("rea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll56101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exa");
    AphidLexerTests.TokenizeAll(aphidLexer, "exa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll83002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "con\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("con\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll86601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fo\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fo\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fo\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll25304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nul\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "nul\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nul\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll14001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("trûA");
    AphidLexerTests.TokenizeAll(aphidLexer, "trûA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("trûA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll32401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ela");
    AphidLexerTests.TokenizeAll(aphidLexer, "ela");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ela", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll35304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("da");
    AphidLexerTests.TokenizeAll(aphidLexer, "da");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("da", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll18503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defau");
    AphidLexerTests.TokenizeAll(aphidLexer, "defau");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defau", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll40502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("new");
    AphidLexerTests.TokenizeAll(aphidLexer, "new");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("new", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll58102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wh\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "wh\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("wh\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll23002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whA");
    AphidLexerTests.TokenizeAll(aphidLexer, "whA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll55602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ta0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ta0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ta0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll68604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defina");
    AphidLexerTests.TokenizeAll(aphidLexer, "defina");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll35703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tryA");
    AphidLexerTests.TokenizeAll(aphidLexer, "tryA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tryA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll310()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("try0");
    AphidLexerTests.TokenizeAll(aphidLexer, "try0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("try0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll29503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("try:");
    AphidLexerTests.TokenizeAll(aphidLexer, "try:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("try:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll89501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("trya");
    AphidLexerTests.TokenizeAll(aphidLexer, "trya");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("trya", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll43603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("try[");
    AphidLexerTests.TokenizeAll(aphidLexer, "try[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("try[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll9201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("try{");
    AphidLexerTests.TokenizeAll(aphidLexer, "try{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("try{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll7201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("try");
    AphidLexerTests.TokenizeAll(aphidLexer, "try");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("try", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll23501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("try\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "try\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("try\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll379()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("try_");
    AphidLexerTests.TokenizeAll(aphidLexer, "try_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("try_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll612()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("trya");
    AphidLexerTests.TokenizeAll(aphidLexer, "trya");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("trya", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll386()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ca\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ca\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ca\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll133()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sw\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "sw\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("sw\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll25701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("else\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "else\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("else\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll20302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conti{");
    AphidLexerTests.TokenizeAll(aphidLexer, "conti{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("conti{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fi\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fi\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll177()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lo\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "lo\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("lo\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll91702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ta");
    AphidLexerTests.TokenizeAll(aphidLexer, "ta");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll173()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conti");
    AphidLexerTests.TokenizeAll(aphidLexer, "conti");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("conti", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll59902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dela");
    AphidLexerTests.TokenizeAll(aphidLexer, "dela");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("dela", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll73601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e0");
    AphidLexerTests.TokenizeAll(aphidLexer, "e0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("e0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll774()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("this\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "this\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("this\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll631()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thisa");
    AphidLexerTests.TokenizeAll(aphidLexer, "thisa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thisa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll516()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("this[");
    AphidLexerTests.TokenizeAll(aphidLexer, "this[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("this[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll940()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("this{");
    AphidLexerTests.TokenizeAll(aphidLexer, "this{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("this{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll65702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("this_");
    AphidLexerTests.TokenizeAll(aphidLexer, "this_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("this_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll880()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("this");
    AphidLexerTests.TokenizeAll(aphidLexer, "this");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("this", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll74202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("this\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "this\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("this\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll42001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thisa");
    AphidLexerTests.TokenizeAll(aphidLexer, "thisa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thisa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll97101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("brA");
    AphidLexerTests.TokenizeAll(aphidLexer, "brA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("brA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll24804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("brea");
    AphidLexerTests.TokenizeAll(aphidLexer, "brea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("brea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll34501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ne");
    AphidLexerTests.TokenizeAll(aphidLexer, "ne");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ne", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll71002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whila");
    AphidLexerTests.TokenizeAll(aphidLexer, "whila");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whila", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll66403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continua");
    AphidLexerTests.TokenizeAll(aphidLexer, "continua");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll238()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nula");
    AphidLexerTests.TokenizeAll(aphidLexer, "nula");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nula", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll21703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nu0");
    AphidLexerTests.TokenizeAll(aphidLexer, "nu0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nu0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll28801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throwýa");
    AphidLexerTests.TokenizeAll(aphidLexer, "throwýa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("throwýa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll348()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tra");
    AphidLexerTests.TokenizeAll(aphidLexer, "tra");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll226()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("A0");
    AphidLexerTests.TokenizeAll(aphidLexer, "A0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("A0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll41701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("doa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "doa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("doa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll93201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tryA");
    AphidLexerTests.TokenizeAll(aphidLexer, "tryA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tryA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll55801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("//\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "//\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("//\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll829()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("//\n");
    AphidLexerTests.TokenizeAll(aphidLexer, "//\n");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("//\n", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll11802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("//\r");
    AphidLexerTests.TokenizeAll(aphidLexer, "//\r");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("//\r", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll9602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("els");
    AphidLexerTests.TokenizeAll(aphidLexer, "els");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("els", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll5903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("reA");
    AphidLexerTests.TokenizeAll(aphidLexer, "reA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("reA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll192()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tr[");
    AphidLexerTests.TokenizeAll(aphidLexer, "tr[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tr[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll38101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("co");
    AphidLexerTests.TokenizeAll(aphidLexer, "co");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("co", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll3201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extend");
    AphidLexerTests.TokenizeAll(aphidLexer, "extend");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extend", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll77302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extend\0\0\0\0\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "extend\0\0\0\0\0\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extend\0\0\0\0\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll45002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extenda");
    AphidLexerTests.TokenizeAll(aphidLexer, "extenda");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extenda", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll21203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "con0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("con0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll85101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extend\0\0\0\0\0\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "extend\0\0\0\0\0\0\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extend\0\0\0\0\0\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll65102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tru\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "tru\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tru\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll11304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ext");
    AphidLexerTests.TokenizeAll(aphidLexer, "ext");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ext", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll48902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whia");
    AphidLexerTests.TokenizeAll(aphidLexer, "whia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll3902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finala");
    AphidLexerTests.TokenizeAll(aphidLexer, "finala");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("finala", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll43002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continuea0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continuea0\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continuea0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll344()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0b\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0b\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0b\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll74502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0b1");
    AphidLexerTests.TokenizeAll(aphidLexer, "0b1");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0b1", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll62901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0b0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0b0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0b0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll974()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("using0");
    AphidLexerTests.TokenizeAll(aphidLexer, "using0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("using0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll949()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usingA");
    AphidLexerTests.TokenizeAll(aphidLexer, "usingA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usingA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usinga");
    AphidLexerTests.TokenizeAll(aphidLexer, "usinga");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usinga", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll272()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("using");
    AphidLexerTests.TokenizeAll(aphidLexer, "using");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("using", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll46002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("using_");
    AphidLexerTests.TokenizeAll(aphidLexer, "using_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("using_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll93001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usingýA");
    AphidLexerTests.TokenizeAll(aphidLexer, "usingýA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usingýA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll62704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usingA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "usingA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usingA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll533()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extend{");
    AphidLexerTests.TokenizeAll(aphidLexer, "extend{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extend{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll74203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("br\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "br\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("br\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll810()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continuea\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continuea\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continuea\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll47702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throwa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "throwa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("throwa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll495()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("trAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "trAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("trAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll61102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("el{");
    AphidLexerTests.TokenizeAll(aphidLexer, "el{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("el{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll37802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extenA");
    AphidLexerTests.TokenizeAll(aphidLexer, "extenA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extenA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll58202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/*\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "/*\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/*\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll57501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/**");
    AphidLexerTests.TokenizeAll(aphidLexer, "/**");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("/**", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll9202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("final{");
    AphidLexerTests.TokenizeAll(aphidLexer, "final{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("final{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll769()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fo0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fo0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fo0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll14701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fia");
    AphidLexerTests.TokenizeAll(aphidLexer, "fia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll807()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catcha");
    AphidLexerTests.TokenizeAll(aphidLexer, "catcha");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catcha", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll73602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catch");
    AphidLexerTests.TokenizeAll(aphidLexer, "catch");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catch", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll80601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catch0");
    AphidLexerTests.TokenizeAll(aphidLexer, "catch0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catch0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll94601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catch[");
    AphidLexerTests.TokenizeAll(aphidLexer, "catch[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catch[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll708()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catch_");
    AphidLexerTests.TokenizeAll(aphidLexer, "catch_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catch_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll18801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catch\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "catch\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catch\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll818()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("brea0");
    AphidLexerTests.TokenizeAll(aphidLexer, "brea0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("brea0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll534()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("els{");
    AphidLexerTests.TokenizeAll(aphidLexer, "els{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("els{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll86602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("foa");
    AphidLexerTests.TokenizeAll(aphidLexer, "foa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("foa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll50802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d0");
    AphidLexerTests.TokenizeAll(aphidLexer, "d0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("d0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll55101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("do0");
    AphidLexerTests.TokenizeAll(aphidLexer, "do0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("do0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll90801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usa");
    AphidLexerTests.TokenizeAll(aphidLexer, "usa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll649()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extend");
    AphidLexerTests.TokenizeAll(aphidLexer, "extend");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extend", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll99004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swi_");
    AphidLexerTests.TokenizeAll(aphidLexer, "swi_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swi_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll71102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "re\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("re\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll20401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nua");
    AphidLexerTests.TokenizeAll(aphidLexer, "nua");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll40301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thr_");
    AphidLexerTests.TokenizeAll(aphidLexer, "thr_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thr_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll27101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E\00");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E\00");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0E\00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll68605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catc0");
    AphidLexerTests.TokenizeAll(aphidLexer, "catc0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catc0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll68501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loûA");
    AphidLexerTests.TokenizeAll(aphidLexer, "loûA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loûA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll11803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lock\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "lock\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("lock\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll12501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("locka");
    AphidLexerTests.TokenizeAll(aphidLexer, "locka");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("locka", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll80502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lock{");
    AphidLexerTests.TokenizeAll(aphidLexer, "lock{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("lock{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll19904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("locka");
    AphidLexerTests.TokenizeAll(aphidLexer, "locka");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("locka", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll16301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lock_");
    AphidLexerTests.TokenizeAll(aphidLexer, "lock_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("lock_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll63201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thro0");
    AphidLexerTests.TokenizeAll(aphidLexer, "thro0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thro0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll38901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defiA");
    AphidLexerTests.TokenizeAll(aphidLexer, "defiA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll249()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swa");
    AphidLexerTests.TokenizeAll(aphidLexer, "swa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delea");
    AphidLexerTests.TokenizeAll(aphidLexer, "delea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll30101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lock");
    AphidLexerTests.TokenizeAll(aphidLexer, "lock");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("lock", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll65501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("faA");
    AphidLexerTests.TokenizeAll(aphidLexer, "faA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("faA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll83301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defaA");
    AphidLexerTests.TokenizeAll(aphidLexer, "defaA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll65302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lo[");
    AphidLexerTests.TokenizeAll(aphidLexer, "lo[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("lo[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll55301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fiA");
    AphidLexerTests.TokenizeAll(aphidLexer, "fiA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll621()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usinA");
    AphidLexerTests.TokenizeAll(aphidLexer, "usinA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usinA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll45401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("newa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "newa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("newa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll31701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("caA");
    AphidLexerTests.TokenizeAll(aphidLexer, "caA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("caA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll10401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lock0");
    AphidLexerTests.TokenizeAll(aphidLexer, "lock0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("lock0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll75501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whilea");
    AphidLexerTests.TokenizeAll(aphidLexer, "whilea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whilea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll71601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whileA");
    AphidLexerTests.TokenizeAll(aphidLexer, "whileA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whileA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll44002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("while0");
    AphidLexerTests.TokenizeAll(aphidLexer, "while0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("while0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll66301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("while");
    AphidLexerTests.TokenizeAll(aphidLexer, "while");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("while", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll825()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("while_");
    AphidLexerTests.TokenizeAll(aphidLexer, "while_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("while_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll221()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l0");
    AphidLexerTests.TokenizeAll(aphidLexer, "l0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("l0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll92601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ex\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ex\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll13401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defin{");
    AphidLexerTests.TokenizeAll(aphidLexer, "defin{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defin{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll116()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whileýa");
    AphidLexerTests.TokenizeAll(aphidLexer, "whileýa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whileýa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll636()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r[");
    AphidLexerTests.TokenizeAll(aphidLexer, "r[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("r[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll2101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("try");
    AphidLexerTests.TokenizeAll(aphidLexer, "try");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("try", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll65303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("el");
    AphidLexerTests.TokenizeAll(aphidLexer, "el");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("el", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll46602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whilea\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "whilea\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whilea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll58003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falsa");
    AphidLexerTests.TokenizeAll(aphidLexer, "falsa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("falsa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll5701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E\000");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E\000");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0E\000", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll44102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cont0");
    AphidLexerTests.TokenizeAll(aphidLexer, "cont0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cont0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll19905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tA");
    AphidLexerTests.TokenizeAll(aphidLexer, "tA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll32801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wha");
    AphidLexerTests.TokenizeAll(aphidLexer, "wha");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("wha", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll207()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("iA");
    AphidLexerTests.TokenizeAll(aphidLexer, "iA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("iA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll89001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cona");
    AphidLexerTests.TokenizeAll(aphidLexer, "cona");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cona", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll592()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("null\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "null\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("null\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll22601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("null[");
    AphidLexerTests.TokenizeAll(aphidLexer, "null[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("null[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll73503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nulla");
    AphidLexerTests.TokenizeAll(aphidLexer, "nulla");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nulla", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll83802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("null{");
    AphidLexerTests.TokenizeAll(aphidLexer, "null{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("null{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll35305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("null\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "null\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("null\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll196()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("final");
    AphidLexerTests.TokenizeAll(aphidLexer, "final");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("final", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll35901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "finaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("finaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll587()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("def<");
    AphidLexerTests.TokenizeAll(aphidLexer, "def<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("def<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll69201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thisA");
    AphidLexerTests.TokenizeAll(aphidLexer, "thisA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thisA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll77702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fora");
    AphidLexerTests.TokenizeAll(aphidLexer, "fora");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fora", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll43402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("forA");
    AphidLexerTests.TokenizeAll(aphidLexer, "forA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("forA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll91003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("for[");
    AphidLexerTests.TokenizeAll(aphidLexer, "for[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("for[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll32303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("for0");
    AphidLexerTests.TokenizeAll(aphidLexer, "for0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("for0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll91301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("for{");
    AphidLexerTests.TokenizeAll(aphidLexer, "for{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("for{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll75706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("for");
    AphidLexerTests.TokenizeAll(aphidLexer, "for");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("for", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll751()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("for\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "for\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("for\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll121()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("for_");
    AphidLexerTests.TokenizeAll(aphidLexer, "for_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("for_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll691()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fora");
    AphidLexerTests.TokenizeAll(aphidLexer, "fora");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fora", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll570()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("br0");
    AphidLexerTests.TokenizeAll(aphidLexer, "br0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("br0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll81401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ba\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ba\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ba\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll5501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll75002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nuA");
    AphidLexerTests.TokenizeAll(aphidLexer, "nuA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nuA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll96202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falseýA");
    AphidLexerTests.TokenizeAll(aphidLexer, "falseýA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("falseýA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll2502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falseA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "falseA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("falseA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll11202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extea");
    AphidLexerTests.TokenizeAll(aphidLexer, "extea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll75003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("retA");
    AphidLexerTests.TokenizeAll(aphidLexer, "retA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("retA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll5101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ret0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ret0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ret0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll26902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ret:");
    AphidLexerTests.TokenizeAll(aphidLexer, "ret:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ret:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll339()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("reta");
    AphidLexerTests.TokenizeAll(aphidLexer, "reta");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("reta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll30701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ret{");
    AphidLexerTests.TokenizeAll(aphidLexer, "ret{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ret{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll99503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ret");
    AphidLexerTests.TokenizeAll(aphidLexer, "ret");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ret", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll24501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ret\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ret\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ret\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ret_");
    AphidLexerTests.TokenizeAll(aphidLexer, "ret_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ret_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll60901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("reta");
    AphidLexerTests.TokenizeAll(aphidLexer, "reta");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("reta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll12301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("retA");
    AphidLexerTests.TokenizeAll(aphidLexer, "retA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("retA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll95404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("reta\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "reta\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("reta\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll3101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swi");
    AphidLexerTests.TokenizeAll(aphidLexer, "swi");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll623()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defin");
    AphidLexerTests.TokenizeAll(aphidLexer, "defin");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll92602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catchýa");
    AphidLexerTests.TokenizeAll(aphidLexer, "catchýa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catchýa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll12302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exA");
    AphidLexerTests.TokenizeAll(aphidLexer, "exA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll730()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa0a");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa0a");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loa0a", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll85202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sw0");
    AphidLexerTests.TokenizeAll(aphidLexer, "sw0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("sw0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll81001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ca0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ca0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ca0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll90701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex[");
    AphidLexerTests.TokenizeAll(aphidLexer, "ex[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ex[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll762()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("if\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "if\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("if\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll91901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("if0");
    AphidLexerTests.TokenizeAll(aphidLexer, "if0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("if0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll58402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ifa");
    AphidLexerTests.TokenizeAll(aphidLexer, "ifa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ifa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll66201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("if{");
    AphidLexerTests.TokenizeAll(aphidLexer, "if{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("if{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll242()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ifA");
    AphidLexerTests.TokenizeAll(aphidLexer, "ifA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ifA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll19401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("if");
    AphidLexerTests.TokenizeAll(aphidLexer, "if");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("if", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll746()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("if\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "if\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("if\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll27502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("if_");
    AphidLexerTests.TokenizeAll(aphidLexer, "if_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("if_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll600()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ifa");
    AphidLexerTests.TokenizeAll(aphidLexer, "ifa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ifa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll98901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ifa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ifa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ifa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll35003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lockA");
    AphidLexerTests.TokenizeAll(aphidLexer, "lockA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("lockA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll89502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tru<");
    AphidLexerTests.TokenizeAll(aphidLexer, "tru<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tru<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll45003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("contiý0");
    AphidLexerTests.TokenizeAll(aphidLexer, "contiý0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("contiý0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll6901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("contiA");
    AphidLexerTests.TokenizeAll(aphidLexer, "contiA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("contiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll21603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("true0");
    AphidLexerTests.TokenizeAll(aphidLexer, "true0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("true0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll17401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ina\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ina\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ina\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll96203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f[");
    AphidLexerTests.TokenizeAll(aphidLexer, "f[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("f[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll21501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0x\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0x\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0x\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll24405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0x0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0x0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0x0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll44701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0x:");
    AphidLexerTests.TokenizeAll(aphidLexer, "0x:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0x:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0xz");
    AphidLexerTests.TokenizeAll(aphidLexer, "0xz");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0xz", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll41304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0xA");
    AphidLexerTests.TokenizeAll(aphidLexer, "0xA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0xA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll43102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin[");
    AphidLexerTests.TokenizeAll(aphidLexer, "fin[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fin[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll38201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E\000\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E\000\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0E\000\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll88702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usin0");
    AphidLexerTests.TokenizeAll(aphidLexer, "usin0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usin0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll5002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("if{");
    AphidLexerTests.TokenizeAll(aphidLexer, "if{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("if{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll79201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("in0");
    AphidLexerTests.TokenizeAll(aphidLexer, "in0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("in0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll291()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("us0");
    AphidLexerTests.TokenizeAll(aphidLexer, "us0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("us0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll779()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l{");
    AphidLexerTests.TokenizeAll(aphidLexer, "l{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("l{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll80503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("t{");
    AphidLexerTests.TokenizeAll(aphidLexer, "t{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("t{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll456()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delete");
    AphidLexerTests.TokenizeAll(aphidLexer, "delete");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delete", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll484()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delete\0\0\0\0\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "delete\0\0\0\0\0\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delete\0\0\0\0\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll49901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deletea");
    AphidLexerTests.TokenizeAll(aphidLexer, "deletea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("deletea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll96303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll58004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fa0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll58502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usA");
    AphidLexerTests.TokenizeAll(aphidLexer, "usA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll149()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("trya\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "trya\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("trya\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll726()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deletý0");
    AphidLexerTests.TokenizeAll(aphidLexer, "deletý0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("deletý0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll34702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deletA");
    AphidLexerTests.TokenizeAll(aphidLexer, "deletA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("deletA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll39701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("for0");
    AphidLexerTests.TokenizeAll(aphidLexer, "for0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("for0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll57602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E\01.\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E\01.\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0E\01.\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll50803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E\01.:");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E\01.:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0E\01.:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll60605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("doA");
    AphidLexerTests.TokenizeAll(aphidLexer, "doA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("doA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll45004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d{");
    AphidLexerTests.TokenizeAll(aphidLexer, "d{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("d{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll84402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re0");
    AphidLexerTests.TokenizeAll(aphidLexer, "re0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("re0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll62101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("foA");
    AphidLexerTests.TokenizeAll(aphidLexer, "foA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("foA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll18101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breakýa");
    AphidLexerTests.TokenizeAll(aphidLexer, "breakýa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("breakýa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll97601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("del");
    AphidLexerTests.TokenizeAll(aphidLexer, "del");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("del", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll47901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delet<");
    AphidLexerTests.TokenizeAll(aphidLexer, "delet<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delet<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll91004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("load\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "load\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("load\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll59201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loada");
    AphidLexerTests.TokenizeAll(aphidLexer, "loada");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loada", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll23902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("load{");
    AphidLexerTests.TokenizeAll(aphidLexer, "load{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("load{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll64302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("load_");
    AphidLexerTests.TokenizeAll(aphidLexer, "load_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("load_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll15503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("load0");
    AphidLexerTests.TokenizeAll(aphidLexer, "load0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("load0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll30001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loadA");
    AphidLexerTests.TokenizeAll(aphidLexer, "loadA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loadA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll25501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("load\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "load\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("load\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll70603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falsA");
    AphidLexerTests.TokenizeAll(aphidLexer, "falsA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("falsA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll19201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deleA");
    AphidLexerTests.TokenizeAll(aphidLexer, "deleA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("deleA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll30702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defi0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defi0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defi0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll47902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catc\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "catc\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catc\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll299()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switcA");
    AphidLexerTests.TokenizeAll(aphidLexer, "switcA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switcA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll577()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deletea\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "deletea\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("deletea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll93401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breaka\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "breaka\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("breaka\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll122()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "breaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("breaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll53201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swA");
    AphidLexerTests.TokenizeAll(aphidLexer, "swA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll38202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0b00");
    AphidLexerTests.TokenizeAll(aphidLexer, "0b00");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0b00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll76()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w<");
    AphidLexerTests.TokenizeAll(aphidLexer, "w<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("w<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll953()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switch[");
    AphidLexerTests.TokenizeAll(aphidLexer, "switch[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switch[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll73303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switch");
    AphidLexerTests.TokenizeAll(aphidLexer, "switch");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switch", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll40804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switch\0\0\0\0\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "switch\0\0\0\0\0\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switch\0\0\0\0\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll588()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switcha");
    AphidLexerTests.TokenizeAll(aphidLexer, "switcha");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switcha", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll541()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("t");
    AphidLexerTests.TokenizeAll(aphidLexer, "t");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("t", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll166()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l");
    AphidLexerTests.TokenizeAll(aphidLexer, "l");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("l", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll7301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0b0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0b0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0b0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll2701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delete{");
    AphidLexerTests.TokenizeAll(aphidLexer, "delete{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delete{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll66002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wh0");
    AphidLexerTests.TokenizeAll(aphidLexer, "wh0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("wh0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll369()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("if");
    AphidLexerTests.TokenizeAll(aphidLexer, "if");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("if", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll34201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E-00\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E-00\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0E-00\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll34502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finaA");
    AphidLexerTests.TokenizeAll(aphidLexer, "finaA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("finaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll27602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usi[");
    AphidLexerTests.TokenizeAll(aphidLexer, "usi[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usi[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll49202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre[");
    AphidLexerTests.TokenizeAll(aphidLexer, "bre[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("bre[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll84403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thr÷A\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "thr÷A\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thr÷A\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll2003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thi\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "thi\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thi\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll48202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whi÷A\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "whi÷A\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whi÷A\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll98902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("rA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "rA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("rA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll93202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loc÷A\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "loc÷A\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loc÷A\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll12502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loca");
    AphidLexerTests.TokenizeAll(aphidLexer, "loca");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll61501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tru0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "tru0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tru0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll282()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("truea");
    AphidLexerTests.TokenizeAll(aphidLexer, "truea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("truea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll7302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("br{");
    AphidLexerTests.TokenizeAll(aphidLexer, "br{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("br{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll69801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0x0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0x0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0x0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll61902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("definA");
    AphidLexerTests.TokenizeAll(aphidLexer, "definA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("definA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll11804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sw{");
    AphidLexerTests.TokenizeAll(aphidLexer, "sw{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("sw{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll42702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("forA");
    AphidLexerTests.TokenizeAll(aphidLexer, "forA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("forA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll81301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "delaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll425()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switc{");
    AphidLexerTests.TokenizeAll(aphidLexer, "switc{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switc{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll74503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de[");
    AphidLexerTests.TokenizeAll(aphidLexer, "de[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("de[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll3202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("trua");
    AphidLexerTests.TokenizeAll(aphidLexer, "trua");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("trua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll23003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fo{");
    AphidLexerTests.TokenizeAll(aphidLexer, "fo{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fo{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll57001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delet[");
    AphidLexerTests.TokenizeAll(aphidLexer, "delet[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delet[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll65502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finbA");
    AphidLexerTests.TokenizeAll(aphidLexer, "finbA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("finbA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll15101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switch{");
    AphidLexerTests.TokenizeAll(aphidLexer, "switch{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switch{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll383()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d");
    AphidLexerTests.TokenizeAll(aphidLexer, "d");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("d", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll85901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("saa");
    AphidLexerTests.TokenizeAll(aphidLexer, "saa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("saa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll998()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elsea");
    AphidLexerTests.TokenizeAll(aphidLexer, "elsea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("elsea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll94901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("do{");
    AphidLexerTests.TokenizeAll(aphidLexer, "do{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("do{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll16502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continu{");
    AphidLexerTests.TokenizeAll(aphidLexer, "continu{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continu{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll16801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finalý0");
    AphidLexerTests.TokenizeAll(aphidLexer, "finalý0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("finalý0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll42103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("in{");
    AphidLexerTests.TokenizeAll(aphidLexer, "in{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("in{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll6902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fba");
    AphidLexerTests.TokenizeAll(aphidLexer, "fba");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fba", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll81201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finalA");
    AphidLexerTests.TokenizeAll(aphidLexer, "finalA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("finalA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll67401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delete");
    AphidLexerTests.TokenizeAll(aphidLexer, "delete");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delete", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll27102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("trueA");
    AphidLexerTests.TokenizeAll(aphidLexer, "trueA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("trueA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll91902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continuaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "continuaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continuaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll59503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switcý0");
    AphidLexerTests.TokenizeAll(aphidLexer, "switcý0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switcý0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll547()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switc");
    AphidLexerTests.TokenizeAll(aphidLexer, "switc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll21604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tr{");
    AphidLexerTests.TokenizeAll(aphidLexer, "tr{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tr{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll64101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ea");
    AphidLexerTests.TokenizeAll(aphidLexer, "ea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll64702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deleteA");
    AphidLexerTests.TokenizeAll(aphidLexer, "deleteA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("deleteA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll1801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whilA");
    AphidLexerTests.TokenizeAll(aphidLexer, "whilA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whilA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll45502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tr");
    AphidLexerTests.TokenizeAll(aphidLexer, "tr");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tr", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll91302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wh[");
    AphidLexerTests.TokenizeAll(aphidLexer, "wh[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("wh[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll18102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extend0");
    AphidLexerTests.TokenizeAll(aphidLexer, "extend0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extend0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll90902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defauý0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defauý0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defauý0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll91602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b0");
    AphidLexerTests.TokenizeAll(aphidLexer, "b0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("b0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll11001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nu[");
    AphidLexerTests.TokenizeAll(aphidLexer, "nu[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nu[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll22802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("for");
    AphidLexerTests.TokenizeAll(aphidLexer, "for");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("for", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll72901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("us{");
    AphidLexerTests.TokenizeAll(aphidLexer, "us{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("us{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll98201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usiaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "usiaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usiaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll48801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sw");
    AphidLexerTests.TokenizeAll(aphidLexer, "sw");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("sw", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll25201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extae");
    AphidLexerTests.TokenizeAll(aphidLexer, "extae");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extae", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll586()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("this0");
    AphidLexerTests.TokenizeAll(aphidLexer, "this0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("this0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll77303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finba");
    AphidLexerTests.TokenizeAll(aphidLexer, "finba");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("finba", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll90104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defa");
    AphidLexerTests.TokenizeAll(aphidLexer, "defa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll34601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lo{");
    AphidLexerTests.TokenizeAll(aphidLexer, "lo{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("lo{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll71003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e<");
    AphidLexerTests.TokenizeAll(aphidLexer, "e<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("e<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll84701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("u{");
    AphidLexerTests.TokenizeAll(aphidLexer, "u{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("u{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll50101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ret0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ret0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ret0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll512()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loa0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll6903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("us");
    AphidLexerTests.TokenizeAll(aphidLexer, "us");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("us", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll15003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("eA");
    AphidLexerTests.TokenizeAll(aphidLexer, "eA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("eA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll62102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c[");
    AphidLexerTests.TokenizeAll(aphidLexer, "c[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("c[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll56602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delet0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "delet0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delet0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll96304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("n[");
    AphidLexerTests.TokenizeAll(aphidLexer, "n[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("n[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll69703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bA");
    AphidLexerTests.TokenizeAll(aphidLexer, "bA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("bA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll12702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swiaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "swiaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swiaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll36701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elseA");
    AphidLexerTests.TokenizeAll(aphidLexer, "elseA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("elseA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll864()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de{");
    AphidLexerTests.TokenizeAll(aphidLexer, "de{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("de{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll93203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thaA");
    AphidLexerTests.TokenizeAll(aphidLexer, "thaA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll32503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("faaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "faaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("faaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll24004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e[");
    AphidLexerTests.TokenizeAll(aphidLexer, "e[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("e[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll63101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("in");
    AphidLexerTests.TokenizeAll(aphidLexer, "in");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("in", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll33701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conti0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "conti0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("conti0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll73001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "falaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("falaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll23004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("do");
    AphidLexerTests.TokenizeAll(aphidLexer, "do");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("do", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll97204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("reaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "reaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("reaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll25202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "exaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll19402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nul");
    AphidLexerTests.TokenizeAll(aphidLexer, "nul");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nul", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll91303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "whaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll57002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0x00");
    AphidLexerTests.TokenizeAll(aphidLexer, "0x00");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0x00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll59601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defaua\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defaua\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defaua\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll82501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usingAa");
    AphidLexerTests.TokenizeAll(aphidLexer, "usingAa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usingAa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll521()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi[");
    AphidLexerTests.TokenizeAll(aphidLexer, "fi[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fi[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll70005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switcA\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "switcA\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switcA\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll85401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("this");
    AphidLexerTests.TokenizeAll(aphidLexer, "this");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("this", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll30703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defA");
    AphidLexerTests.TokenizeAll(aphidLexer, "defA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll644()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi{");
    AphidLexerTests.TokenizeAll(aphidLexer, "fi{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fi{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll97803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conti00");
    AphidLexerTests.TokenizeAll(aphidLexer, "conti00");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("conti00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll29804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ca[");
    AphidLexerTests.TokenizeAll(aphidLexer, "ca[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ca[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll13301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("caaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "caaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("caaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll15402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fo");
    AphidLexerTests.TokenizeAll(aphidLexer, "fo");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fo", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll46003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lo");
    AphidLexerTests.TokenizeAll(aphidLexer, "lo");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("lo", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll75101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fiaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "fiaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fiaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll3203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("daa");
    AphidLexerTests.TokenizeAll(aphidLexer, "daa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("daa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll208()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loA0");
    AphidLexerTests.TokenizeAll(aphidLexer, "loA0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loA0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll60001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nulaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "nulaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nulaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll21704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi");
    AphidLexerTests.TokenizeAll(aphidLexer, "fi");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll91801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defina\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defina\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defina\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll62401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("uaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "uaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("uaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll27103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cont\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "cont\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cont\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll25702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switch0");
    AphidLexerTests.TokenizeAll(aphidLexer, "switch0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switch0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll475()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "thaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cba");
    AphidLexerTests.TokenizeAll(aphidLexer, "cba");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cba", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll668()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nu{");
    AphidLexerTests.TokenizeAll(aphidLexer, "nu{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nu{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll293()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "deaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("deaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll27603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("braa");
    AphidLexerTests.TokenizeAll(aphidLexer, "braa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("braa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll781()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{c");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{c");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{c", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll250()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continu");
    AphidLexerTests.TokenizeAll(aphidLexer, "continu");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continu", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll258()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre");
    AphidLexerTests.TokenizeAll(aphidLexer, "bre");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("bre", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll21801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exteA");
    AphidLexerTests.TokenizeAll(aphidLexer, "exteA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exteA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll13102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loc");
    AphidLexerTests.TokenizeAll(aphidLexer, "loc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll138()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("u");
    AphidLexerTests.TokenizeAll(aphidLexer, "u");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("u", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll65503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nu");
    AphidLexerTests.TokenizeAll(aphidLexer, "nu");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nu", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll26801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defba");
    AphidLexerTests.TokenizeAll(aphidLexer, "defba");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defba", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll136()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{cc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{cc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{cc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll8502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("iaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "iaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("iaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll75004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thiaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "thiaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thiaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll967()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con[");
    AphidLexerTests.TokenizeAll(aphidLexer, "con[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("con[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll88703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "nA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll53401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa[");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fa[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll38501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("foaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "foaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("foaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll29603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catcha\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "catcha\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catcha\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll80903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elsae");
    AphidLexerTests.TokenizeAll(aphidLexer, "elsae");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("elsae", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll3903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nulla");
    AphidLexerTests.TokenizeAll(aphidLexer, "nulla");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nulla", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll58403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{ca");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{ca");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{ca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll756()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fal0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fal0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fal0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll12503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delet{");
    AphidLexerTests.TokenizeAll(aphidLexer, "delet{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delet{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll46502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "elaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("elaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll43302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w{");
    AphidLexerTests.TokenizeAll(aphidLexer, "w{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("w{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll90802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delet");
    AphidLexerTests.TokenizeAll(aphidLexer, "delet");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delet", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll10402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switchA");
    AphidLexerTests.TokenizeAll(aphidLexer, "switchA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switchA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll597()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ra");
    AphidLexerTests.TokenizeAll(aphidLexer, "ra");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll467()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("definý0");
    AphidLexerTests.TokenizeAll(aphidLexer, "definý0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("definý0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll57902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nuaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "nuaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nuaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll47002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{c{");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{c{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{c{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll55102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("waa");
    AphidLexerTests.TokenizeAll(aphidLexer, "waa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("waa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll2102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("coaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "coaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("coaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll17001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continue{");
    AphidLexerTests.TokenizeAll(aphidLexer, "continue{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continue{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll56401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breba");
    AphidLexerTests.TokenizeAll(aphidLexer, "breba");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("breba", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll6201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "swaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll90702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nAa");
    AphidLexerTests.TokenizeAll(aphidLexer, "nAa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nAa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll79602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tru");
    AphidLexerTests.TokenizeAll(aphidLexer, "tru");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tru", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll39402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catac");
    AphidLexerTests.TokenizeAll(aphidLexer, "catac");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catac", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll79801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extenda\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "extenda\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extenda\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll652()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lock");
    AphidLexerTests.TokenizeAll(aphidLexer, "lock");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("lock", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll90803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("eaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "eaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("eaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll85303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("true");
    AphidLexerTests.TokenizeAll(aphidLexer, "true");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("true", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll62705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switchA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "switchA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switchA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll59602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defin0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defin0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defin0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll88303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("else");
    AphidLexerTests.TokenizeAll(aphidLexer, "else");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("else", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll985()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extenA\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "extenA\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extenA\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll27401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("null");
    AphidLexerTests.TokenizeAll(aphidLexer, "null");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("null", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll30201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("laa");
    AphidLexerTests.TokenizeAll(aphidLexer, "laa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("laa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll5102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("br");
    AphidLexerTests.TokenizeAll(aphidLexer, "br");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("br", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll79401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "usaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll21902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ret");
    AphidLexerTests.TokenizeAll(aphidLexer, "ret");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ret", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll35902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finala\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "finala\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("finala\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll9502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con");
    AphidLexerTests.TokenizeAll(aphidLexer, "con");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("con", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll70006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("neaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "neaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("neaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll50001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("null0A");
    AphidLexerTests.TokenizeAll(aphidLexer, "null0A");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("null0A", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll40805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extendaA");
    AphidLexerTests.TokenizeAll(aphidLexer, "extendaA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extendaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll35306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0b00\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0b00\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0b00\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll86401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0xa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0xa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0xa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll25703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switch0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "switch0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switch0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll75502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extea\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "extea\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll5403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switch");
    AphidLexerTests.TokenizeAll(aphidLexer, "switch");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switch", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll32504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nA{");
    AphidLexerTests.TokenizeAll(aphidLexer, "nA{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nA{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll89203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("brea0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "brea0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("brea0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll37202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{cac");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{cac");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{cac", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll60102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("retaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "retaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("retaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll29101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usin[");
    AphidLexerTests.TokenizeAll(aphidLexer, "usin[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usin[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll42002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("else0");
    AphidLexerTests.TokenizeAll(aphidLexer, "else0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("else0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll49801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b{");
    AphidLexerTests.TokenizeAll(aphidLexer, "b{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("b{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll64002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continue\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continue\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continue\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll95502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0b01\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0b01\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0b01\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll97205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defau0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defau0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defau0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll10801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{cat");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{cat");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{cat", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll871()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extenA0");
    AphidLexerTests.TokenizeAll(aphidLexer, "extenA0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extenA0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll83401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{catc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{catc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{catc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll44901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throwýA");
    AphidLexerTests.TokenizeAll(aphidLexer, "throwýA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("throwýA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll62804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breaA");
    AphidLexerTests.TokenizeAll(aphidLexer, "breaA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("breaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll71602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nA");
    AphidLexerTests.TokenizeAll(aphidLexer, "nA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll31502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("baa");
    AphidLexerTests.TokenizeAll(aphidLexer, "baa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("baa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll69802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r");
    AphidLexerTests.TokenizeAll(aphidLexer, "r");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("r", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll18802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{conticc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{conticc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{conticc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll941()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{contin");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{contin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll42202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{cat\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{cat\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{cat\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll12303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thro0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "thro0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thro0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll91102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de");
    AphidLexerTests.TokenizeAll(aphidLexer, "de");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("de", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll83103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{continc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{continc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{continc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll16102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{contin{");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{contin{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll25305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{contin");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{contin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll89601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{contin\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{contin\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll46301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{contin0");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{contin0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll458()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{continA");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{continA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{continA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll60103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{continac");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{continac");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{continac", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll92701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{contin_");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{contin_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll79002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{contincc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{contincc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{contincc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll22101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{contin{");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{contin{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll89102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{contin");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{contin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll79802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thra");
    AphidLexerTests.TokenizeAll(aphidLexer, "thra");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll473()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thr");
    AphidLexerTests.TokenizeAll(aphidLexer, "thr");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thr", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll38701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w");
    AphidLexerTests.TokenizeAll(aphidLexer, "w");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("w", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll70303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fals0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fals0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fals0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll56901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whiaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "whiaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whiaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll338()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delete0");
    AphidLexerTests.TokenizeAll(aphidLexer, "delete0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delete0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll28802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b");
    AphidLexerTests.TokenizeAll(aphidLexer, "b");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("b", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll30102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{catchcc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{catchcc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{catchcc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll661()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("doaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "doaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("doaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll50403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dele");
    AphidLexerTests.TokenizeAll(aphidLexer, "dele");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("dele", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll71801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ifaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "ifaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ifaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll43003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defaa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defaa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defaa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll23502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ext");
    AphidLexerTests.TokenizeAll(aphidLexer, "ext");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ext", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll88304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delea\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "delea\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll839()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{cccccc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{cccccc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{cccccc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll542()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s{");
    AphidLexerTests.TokenizeAll(aphidLexer, "s{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("s{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll152()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nullaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "nullaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nullaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll35402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catca\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "catca\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catca\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll783()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("def[");
    AphidLexerTests.TokenizeAll(aphidLexer, "def[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("def[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll6301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nullAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "nullAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nullAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finaa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "finaa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("finaa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll21302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thisaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "thisaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thisaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll8001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elsAa");
    AphidLexerTests.TokenizeAll(aphidLexer, "elsAa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("elsAa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll23401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loaaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "loaaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loaaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll56902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "loAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll45102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{cont\0cc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{cont\0cc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{cont\0cc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll8202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switc_");
    AphidLexerTests.TokenizeAll(aphidLexer, "switc_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switc_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll7504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defi0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defi0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defi0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll60002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("load`");
    AphidLexerTests.TokenizeAll(aphidLexer, "load`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("load`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll57003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{contacc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{contacc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{contacc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll74902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thisAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "thisAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thisAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll52101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("newaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "newaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("newaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll86402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exteaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "exteaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exteaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll23903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{contA");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{contA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{contA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll84203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thro0A");
    AphidLexerTests.TokenizeAll(aphidLexer, "thro0A");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thro0A", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll86603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deleaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "deleaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("deleaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll32702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lock0a");
    AphidLexerTests.TokenizeAll(aphidLexer, "lock0a");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("lock0a", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll320()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usi");
    AphidLexerTests.TokenizeAll(aphidLexer, "usi");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll31302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loadaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "loadaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loadaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll82502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finaaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "finaaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("finaaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll34602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whileaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "whileaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whileaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll39001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whilea{");
    AphidLexerTests.TokenizeAll(aphidLexer, "whilea{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whilea{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll41602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catchaA");
    AphidLexerTests.TokenizeAll(aphidLexer, "catchaA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catchaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll86802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "nAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("nAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll56301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("inaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "inaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("inaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll13103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("null00");
    AphidLexerTests.TokenizeAll(aphidLexer, "null00");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("null00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll80504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usingAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "usingAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usingAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll16201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s");
    AphidLexerTests.TokenizeAll(aphidLexer, "s");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("s", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll86001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("//\0\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "//\0\0\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("//\0\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll11403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extenAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "extenAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extenAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll858()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catcha0");
    AphidLexerTests.TokenizeAll(aphidLexer, "catcha0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catcha0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loba");
    AphidLexerTests.TokenizeAll(aphidLexer, "loba");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loba", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll44103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e{");
    AphidLexerTests.TokenizeAll(aphidLexer, "e{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("e{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll51001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("foraa");
    AphidLexerTests.TokenizeAll(aphidLexer, "foraa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("foraa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll89702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fora\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fora\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fora\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll39101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falseAa");
    AphidLexerTests.TokenizeAll(aphidLexer, "falseAa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("falseAa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll26502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catcha[");
    AphidLexerTests.TokenizeAll(aphidLexer, "catcha[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catcha[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll46101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switchAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "switchAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switchAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll52901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defi0[");
    AphidLexerTests.TokenizeAll(aphidLexer, "defi0[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defi0[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll117()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continuaA\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continuaA\0\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("continuaA\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll61403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("definaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "definaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("definaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll50102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tryaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "tryaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("tryaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll62805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("trueaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "trueaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("trueaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll52001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defia");
    AphidLexerTests.TokenizeAll(aphidLexer, "defia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll19801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extenda_\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "extenda_\0\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extenda_\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll40806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lock00");
    AphidLexerTests.TokenizeAll(aphidLexer, "lock00");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("lock00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll47903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delete0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "delete0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delete0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll47202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wh{");
    AphidLexerTests.TokenizeAll(aphidLexer, "wh{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("wh{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll99504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa[");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("loa[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll93901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usingA0");
    AphidLexerTests.TokenizeAll(aphidLexer, "usingA0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usingA0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll90703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i[");
    AphidLexerTests.TokenizeAll(aphidLexer, "i[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("i[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll15201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("final_");
    AphidLexerTests.TokenizeAll(aphidLexer, "final_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("final_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll9804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "e0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("e0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll25101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wh");
    AphidLexerTests.TokenizeAll(aphidLexer, "wh");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("wh", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll14901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thûA");
    AphidLexerTests.TokenizeAll(aphidLexer, "thûA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("thûA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll19202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breaka0");
    AphidLexerTests.TokenizeAll(aphidLexer, "breaka0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("breaka0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("iaA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "iaA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("iaA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll37501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re[");
    AphidLexerTests.TokenizeAll(aphidLexer, "re[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("re[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll752()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breaka<");
    AphidLexerTests.TokenizeAll(aphidLexer, "breaka<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("breaka<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll273()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex{");
    AphidLexerTests.TokenizeAll(aphidLexer, "ex{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ex{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll54101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa{");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fa{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll87502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e");
    AphidLexerTests.TokenizeAll(aphidLexer, "e");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("e", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll34901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll69302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll20402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extea[");
    AphidLexerTests.TokenizeAll(aphidLexer, "extea[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extea[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll91304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("laA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "laA\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("laA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll25403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dȀ\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "dȀ\0\0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("dȀ\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll18803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("th0");
    AphidLexerTests.TokenizeAll(aphidLexer, "th0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("th0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll67301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usingA[");
    AphidLexerTests.TokenizeAll(aphidLexer, "usingA[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("usingA[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll64102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("taa");
    AphidLexerTests.TokenizeAll(aphidLexer, "taa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("taa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll83703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throwaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "throwaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("throwaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll17301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whil[");
    AphidLexerTests.TokenizeAll(aphidLexer, "whil[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("whil[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll13302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switcAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "switcAA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switcAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void TokenizeAll71401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exten0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "exten0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exten0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll22201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll81601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll61002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("9");
    AphidLexerTests.TokenizeAll(aphidLexer, "9");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("9", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("Y");
    AphidLexerTests.TokenizeAll(aphidLexer, "Y");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("Y", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll54302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll98604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll32202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`");
    AphidLexerTests.TokenizeAll(aphidLexer, "`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "K\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll32505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("@");
    AphidLexerTests.TokenizeAll(aphidLexer, "@");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll20303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("@\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "@\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("@\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll19906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll68606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K0");
    AphidLexerTests.TokenizeAll(aphidLexer, "K0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("Ka");
    AphidLexerTests.TokenizeAll(aphidLexer, "Ka");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("Ka", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll39002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("KA");
    AphidLexerTests.TokenizeAll(aphidLexer, "KA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("KA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll85304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K{");
    AphidLexerTests.TokenizeAll(aphidLexer, "K{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll87503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("@>");
    AphidLexerTests.TokenizeAll(aphidLexer, "@>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("@>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K[");
    AphidLexerTests.TokenizeAll(aphidLexer, "K[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll94802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K");
    AphidLexerTests.TokenizeAll(aphidLexer, "K");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll942()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "`\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`:");
    AphidLexerTests.TokenizeAll(aphidLexer, "`:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll61404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`!");
    AphidLexerTests.TokenizeAll(aphidLexer, "`!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K<\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`@");
    AphidLexerTests.TokenizeAll(aphidLexer, "`@");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll57603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<@");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<@");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K<@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll5404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("Q<`");
    AphidLexerTests.TokenizeAll(aphidLexer, "Q<`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("Q<`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll80904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<~");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K<~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll86803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`~");
    AphidLexerTests.TokenizeAll(aphidLexer, "`~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll8401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<|");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K<|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll99005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`|");
    AphidLexerTests.TokenizeAll(aphidLexer, "`|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll49003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<!");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K<!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<:");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K<:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("``");
    AphidLexerTests.TokenizeAll(aphidLexer, "``");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("``", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll14602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K</");
    AphidLexerTests.TokenizeAll(aphidLexer, "K</");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K</", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll78401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`/");
    AphidLexerTests.TokenizeAll(aphidLexer, "`/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll26003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(" ");
    AphidLexerTests.TokenizeAll(aphidLexer, " ");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(" ", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll95405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("h");
    AphidLexerTests.TokenizeAll(aphidLexer, "h");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("h", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=");
    AphidLexerTests.TokenizeAll(aphidLexer, "=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll2702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "=\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=@");
    AphidLexerTests.TokenizeAll(aphidLexer, "=@");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll3501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=~");
    AphidLexerTests.TokenizeAll(aphidLexer, "=~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll616()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=|");
    AphidLexerTests.TokenizeAll(aphidLexer, "=|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=!");
    AphidLexerTests.TokenizeAll(aphidLexer, "=!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll7901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=`");
    AphidLexerTests.TokenizeAll(aphidLexer, "=`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=:");
    AphidLexerTests.TokenizeAll(aphidLexer, "=:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll77802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=/");
    AphidLexerTests.TokenizeAll(aphidLexer, "=/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll38203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=.");
    AphidLexerTests.TokenizeAll(aphidLexer, "=.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll98202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<.");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K<.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll45204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`.");
    AphidLexerTests.TokenizeAll(aphidLexer, "`.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40807()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("j");
    AphidLexerTests.TokenizeAll(aphidLexer, "j");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("j", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll61303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$");
    AphidLexerTests.TokenizeAll(aphidLexer, "$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "$\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("$\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$_");
    AphidLexerTests.TokenizeAll(aphidLexer, "$_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("$_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$a");
    AphidLexerTests.TokenizeAll(aphidLexer, "$a");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("$a", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll57604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$!");
    AphidLexerTests.TokenizeAll(aphidLexer, "$!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("$!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$a\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "$a\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("$a\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll80803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$args");
    AphidLexerTests.TokenizeAll(aphidLexer, "$args");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("$args", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll66603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=?");
    AphidLexerTests.TokenizeAll(aphidLexer, "=?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`?");
    AphidLexerTests.TokenizeAll(aphidLexer, "`?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll97902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<?");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K<?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=]");
    AphidLexerTests.TokenizeAll(aphidLexer, "=]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll5702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<]");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K<]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll86703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`]");
    AphidLexerTests.TokenizeAll(aphidLexer, "`]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll95503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i");
    AphidLexerTests.TokenizeAll(aphidLexer, "i");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("i", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "i\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("i\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll99703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("iA");
    AphidLexerTests.TokenizeAll(aphidLexer, "iA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("iA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll13104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("in");
    AphidLexerTests.TokenizeAll(aphidLexer, "in");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("in", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll18804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("if");
    AphidLexerTests.TokenizeAll(aphidLexer, "if");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("if", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll82003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ia");
    AphidLexerTests.TokenizeAll(aphidLexer, "ia");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i{");
    AphidLexerTests.TokenizeAll(aphidLexer, "i{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("i{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i0");
    AphidLexerTests.TokenizeAll(aphidLexer, "i0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("i0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll93503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i");
    AphidLexerTests.TokenizeAll(aphidLexer, "i");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("i", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll96902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<-");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K<-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll17102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll66404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0.");
    AphidLexerTests.TokenizeAll(aphidLexer, "0.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0b");
    AphidLexerTests.TokenizeAll(aphidLexer, "0b");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0b", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll14603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll33001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0:\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll49004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0x");
    AphidLexerTests.TokenizeAll(aphidLexer, "0x");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0x", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75707()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0::");
    AphidLexerTests.TokenizeAll(aphidLexer, "0::");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0::", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll51501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:`");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0:`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll14103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:|");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0:|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll64003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:~");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0:~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:!");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0:!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:/");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0:/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:.");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0:.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:?");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0:?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll80202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:]");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0:]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll82603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:-");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0:-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`-");
    AphidLexerTests.TokenizeAll(aphidLexer, "`-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll7505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=-");
    AphidLexerTests.TokenizeAll(aphidLexer, "=-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll71004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`,");
    AphidLexerTests.TokenizeAll(aphidLexer, "`,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=,");
    AphidLexerTests.TokenizeAll(aphidLexer, "=,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll48601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(";");
    AphidLexerTests.TokenizeAll(aphidLexer, ";");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(";", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|");
    AphidLexerTests.TokenizeAll(aphidLexer, "|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll56702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "|\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|:");
    AphidLexerTests.TokenizeAll(aphidLexer, "|:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|@");
    AphidLexerTests.TokenizeAll(aphidLexer, "|@");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll63302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("||");
    AphidLexerTests.TokenizeAll(aphidLexer, "||");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("||", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll27903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|~");
    AphidLexerTests.TokenizeAll(aphidLexer, "|~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|`");
    AphidLexerTests.TokenizeAll(aphidLexer, "|`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|!");
    AphidLexerTests.TokenizeAll(aphidLexer, "|!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll95802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|/");
    AphidLexerTests.TokenizeAll(aphidLexer, "|/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll89302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|.");
    AphidLexerTests.TokenizeAll(aphidLexer, "|.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|?");
    AphidLexerTests.TokenizeAll(aphidLexer, "|?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll38102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|]");
    AphidLexerTests.TokenizeAll(aphidLexer, "|]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|-");
    AphidLexerTests.TokenizeAll(aphidLexer, "|-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll32203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!");
    AphidLexerTests.TokenizeAll(aphidLexer, "!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll82203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "!\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6107()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!:");
    AphidLexerTests.TokenizeAll(aphidLexer, "!:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll7506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!@");
    AphidLexerTests.TokenizeAll(aphidLexer, "!@");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!!");
    AphidLexerTests.TokenizeAll(aphidLexer, "!!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!`");
    AphidLexerTests.TokenizeAll(aphidLexer, "!`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!|");
    AphidLexerTests.TokenizeAll(aphidLexer, "!|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!~");
    AphidLexerTests.TokenizeAll(aphidLexer, "!~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!/");
    AphidLexerTests.TokenizeAll(aphidLexer, "!/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll19907()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!.");
    AphidLexerTests.TokenizeAll(aphidLexer, "!.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll39902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!?");
    AphidLexerTests.TokenizeAll(aphidLexer, "!?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll56802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!]");
    AphidLexerTests.TokenizeAll(aphidLexer, "!]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!-");
    AphidLexerTests.TokenizeAll(aphidLexer, "!-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll53103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:,");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0:,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll63901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|,");
    AphidLexerTests.TokenizeAll(aphidLexer, "|,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll88305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("Y<,");
    AphidLexerTests.TokenizeAll(aphidLexer, "Y<,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("Y<,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll10703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!,");
    AphidLexerTests.TokenizeAll(aphidLexer, "!,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll59802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`>");
    AphidLexerTests.TokenizeAll(aphidLexer, "`>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll89402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!>");
    AphidLexerTests.TokenizeAll(aphidLexer, "!>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=>");
    AphidLexerTests.TokenizeAll(aphidLexer, "=>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<>");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K<>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|>");
    AphidLexerTests.TokenizeAll(aphidLexer, "|>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:>");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0:>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll33102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`)");
    AphidLexerTests.TokenizeAll(aphidLexer, "`)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=)");
    AphidLexerTests.TokenizeAll(aphidLexer, "=)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:(");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0:(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!)");
    AphidLexerTests.TokenizeAll(aphidLexer, "!)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll71402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|)");
    AphidLexerTests.TokenizeAll(aphidLexer, "|)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll30704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("Y<*");
    AphidLexerTests.TokenizeAll(aphidLexer, "Y<*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("Y<*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll48903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "|\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll1504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:^");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0:^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<^");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K<^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "!\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll99505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "=\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll56903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "`\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b");
    AphidLexerTests.TokenizeAll(aphidLexer, "b");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("b", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "b\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("b\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll33501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("br");
    AphidLexerTests.TokenizeAll(aphidLexer, "br");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("br", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll37302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ba");
    AphidLexerTests.TokenizeAll(aphidLexer, "ba");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ba", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll49005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b0");
    AphidLexerTests.TokenizeAll(aphidLexer, "b0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("b0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("br\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "br\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("br\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b<");
    AphidLexerTests.TokenizeAll(aphidLexer, "b<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("b<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll89204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bra");
    AphidLexerTests.TokenizeAll(aphidLexer, "bra");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("bra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bA");
    AphidLexerTests.TokenizeAll(aphidLexer, "bA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("bA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll18504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("br{");
    AphidLexerTests.TokenizeAll(aphidLexer, "br{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("br{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("brý");
    AphidLexerTests.TokenizeAll(aphidLexer, "brý");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("brý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll44802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre");
    AphidLexerTests.TokenizeAll(aphidLexer, "bre");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("bre", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b[");
    AphidLexerTests.TokenizeAll(aphidLexer, "b[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("b[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("brA");
    AphidLexerTests.TokenizeAll(aphidLexer, "brA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("brA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll89303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("br0");
    AphidLexerTests.TokenizeAll(aphidLexer, "br0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("br0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre0");
    AphidLexerTests.TokenizeAll(aphidLexer, "bre0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("bre0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("brea");
    AphidLexerTests.TokenizeAll(aphidLexer, "brea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("brea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breA");
    AphidLexerTests.TokenizeAll(aphidLexer, "breA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("breA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll51803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre[");
    AphidLexerTests.TokenizeAll(aphidLexer, "bre[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("bre[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll88704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breb");
    AphidLexerTests.TokenizeAll(aphidLexer, "breb");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("breb", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll34102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b{");
    AphidLexerTests.TokenizeAll(aphidLexer, "b{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("b{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b");
    AphidLexerTests.TokenizeAll(aphidLexer, "b");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("b", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre{");
    AphidLexerTests.TokenizeAll(aphidLexer, "bre{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("bre{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll28102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "breaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("breaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("break");
    AphidLexerTests.TokenizeAll(aphidLexer, "break");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("break", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll59504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre");
    AphidLexerTests.TokenizeAll(aphidLexer, "bre");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("bre", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll85902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:)");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0:)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll48203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("Q<)");
    AphidLexerTests.TokenizeAll(aphidLexer, "Q<)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("Q<)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!*");
    AphidLexerTests.TokenizeAll(aphidLexer, "!*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll99006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`*");
    AphidLexerTests.TokenizeAll(aphidLexer, "`*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll89703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#");
    AphidLexerTests.TokenizeAll(aphidLexer, "#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll95104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "#\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll49203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#!");
    AphidLexerTests.TokenizeAll(aphidLexer, "#!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll30103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#:");
    AphidLexerTests.TokenizeAll(aphidLexer, "#:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll49902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#@");
    AphidLexerTests.TokenizeAll(aphidLexer, "#@");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#|");
    AphidLexerTests.TokenizeAll(aphidLexer, "#|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll14302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#~");
    AphidLexerTests.TokenizeAll(aphidLexer, "#~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll36702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#`");
    AphidLexerTests.TokenizeAll(aphidLexer, "#`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll50404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#/");
    AphidLexerTests.TokenizeAll(aphidLexer, "#/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll19003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#.");
    AphidLexerTests.TokenizeAll(aphidLexer, "#.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll51102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#?");
    AphidLexerTests.TokenizeAll(aphidLexer, "#?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll84404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#]");
    AphidLexerTests.TokenizeAll(aphidLexer, "#]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll3803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#-");
    AphidLexerTests.TokenizeAll(aphidLexer, "#-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#,");
    AphidLexerTests.TokenizeAll(aphidLexer, "#,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#>");
    AphidLexerTests.TokenizeAll(aphidLexer, "#>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll61003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#)");
    AphidLexerTests.TokenizeAll(aphidLexer, "#)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll95601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "#\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll32304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#*");
    AphidLexerTests.TokenizeAll(aphidLexer, "#*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll57401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=*");
    AphidLexerTests.TokenizeAll(aphidLexer, "=*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|*");
    AphidLexerTests.TokenizeAll(aphidLexer, "|*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll39403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`<");
    AphidLexerTests.TokenizeAll(aphidLexer, "`<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<<");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K<<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll59505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<<\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<<\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K<<\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<<=");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<<=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K<<=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40808()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|<");
    AphidLexerTests.TokenizeAll(aphidLexer, "|<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!<");
    AphidLexerTests.TokenizeAll(aphidLexer, "!<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=<");
    AphidLexerTests.TokenizeAll(aphidLexer, "=<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll68903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:<");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0:<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll67503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#<");
    AphidLexerTests.TokenizeAll(aphidLexer, "#<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll82401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:*");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0:*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll53001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`+");
    AphidLexerTests.TokenizeAll(aphidLexer, "`+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&");
    AphidLexerTests.TokenizeAll(aphidLexer, "&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll59101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "&\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll82204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&@");
    AphidLexerTests.TokenizeAll(aphidLexer, "&@");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&!");
    AphidLexerTests.TokenizeAll(aphidLexer, "&!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll44702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&~");
    AphidLexerTests.TokenizeAll(aphidLexer, "&~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll39702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&:");
    AphidLexerTests.TokenizeAll(aphidLexer, "&:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll28504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&|");
    AphidLexerTests.TokenizeAll(aphidLexer, "&|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&`");
    AphidLexerTests.TokenizeAll(aphidLexer, "&`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll77803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&/");
    AphidLexerTests.TokenizeAll(aphidLexer, "&/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&.");
    AphidLexerTests.TokenizeAll(aphidLexer, "&.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&?");
    AphidLexerTests.TokenizeAll(aphidLexer, "&?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll80804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&]");
    AphidLexerTests.TokenizeAll(aphidLexer, "&]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&-");
    AphidLexerTests.TokenizeAll(aphidLexer, "&-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll76601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&,");
    AphidLexerTests.TokenizeAll(aphidLexer, "&,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll33602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&>");
    AphidLexerTests.TokenizeAll(aphidLexer, "&>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll32402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&)");
    AphidLexerTests.TokenizeAll(aphidLexer, "&)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "&\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&*");
    AphidLexerTests.TokenizeAll(aphidLexer, "&*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&<");
    AphidLexerTests.TokenizeAll(aphidLexer, "&<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll80203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("p");
    AphidLexerTests.TokenizeAll(aphidLexer, "p");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("p", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll57502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&+");
    AphidLexerTests.TokenizeAll(aphidLexer, "&+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|+");
    AphidLexerTests.TokenizeAll(aphidLexer, "|+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=+");
    AphidLexerTests.TokenizeAll(aphidLexer, "=+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("Q<+");
    AphidLexerTests.TokenizeAll(aphidLexer, "Q<+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("Q<+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll68904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#+");
    AphidLexerTests.TokenizeAll(aphidLexer, "#+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!+");
    AphidLexerTests.TokenizeAll(aphidLexer, "!+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|(");
    AphidLexerTests.TokenizeAll(aphidLexer, "|(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll93204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=(");
    AphidLexerTests.TokenizeAll(aphidLexer, "=(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll99401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("A<(");
    AphidLexerTests.TokenizeAll(aphidLexer, "A<(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("A<(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll82604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#^");
    AphidLexerTests.TokenizeAll(aphidLexer, "#^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll56102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<_");
    AphidLexerTests.TokenizeAll(aphidLexer, "K<_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K<_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll8802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#(");
    AphidLexerTests.TokenizeAll(aphidLexer, "#(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=^");
    AphidLexerTests.TokenizeAll(aphidLexer, "=^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:+");
    AphidLexerTests.TokenizeAll(aphidLexer, "0:+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0:+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll64202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`(");
    AphidLexerTests.TokenizeAll(aphidLexer, "`(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll51401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%");
    AphidLexerTests.TokenizeAll(aphidLexer, "%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll18505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "%\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%!");
    AphidLexerTests.TokenizeAll(aphidLexer, "%!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%:");
    AphidLexerTests.TokenizeAll(aphidLexer, "%:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll87301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%@");
    AphidLexerTests.TokenizeAll(aphidLexer, "%@");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll93402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%`");
    AphidLexerTests.TokenizeAll(aphidLexer, "%`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%|");
    AphidLexerTests.TokenizeAll(aphidLexer, "%|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%~");
    AphidLexerTests.TokenizeAll(aphidLexer, "%~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll823()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%/");
    AphidLexerTests.TokenizeAll(aphidLexer, "%/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%.");
    AphidLexerTests.TokenizeAll(aphidLexer, "%.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll63002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%?");
    AphidLexerTests.TokenizeAll(aphidLexer, "%?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%]");
    AphidLexerTests.TokenizeAll(aphidLexer, "%]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll51103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%-");
    AphidLexerTests.TokenizeAll(aphidLexer, "%-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll45205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%,");
    AphidLexerTests.TokenizeAll(aphidLexer, "%,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%>");
    AphidLexerTests.TokenizeAll(aphidLexer, "%>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%)");
    AphidLexerTests.TokenizeAll(aphidLexer, "%)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "%\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%*");
    AphidLexerTests.TokenizeAll(aphidLexer, "%*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll57903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%<");
    AphidLexerTests.TokenizeAll(aphidLexer, "%<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll45503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%+");
    AphidLexerTests.TokenizeAll(aphidLexer, "%+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll53503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!(");
    AphidLexerTests.TokenizeAll(aphidLexer, "!(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll99603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$ar");
    AphidLexerTests.TokenizeAll(aphidLexer, "$ar");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("$ar", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&(");
    AphidLexerTests.TokenizeAll(aphidLexer, "&(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%^");
    AphidLexerTests.TokenizeAll(aphidLexer, "%^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":@");
    AphidLexerTests.TokenizeAll(aphidLexer, ":@");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(":@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%(");
    AphidLexerTests.TokenizeAll(aphidLexer, "%(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll93102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|^");
    AphidLexerTests.TokenizeAll(aphidLexer, "|^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!^");
    AphidLexerTests.TokenizeAll(aphidLexer, "!^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll64004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`^");
    AphidLexerTests.TokenizeAll(aphidLexer, "`^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll7507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("x");
    AphidLexerTests.TokenizeAll(aphidLexer, "x");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("x", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\"\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "\"\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\"\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4308()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\"\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "\"\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\"\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&^");
    AphidLexerTests.TokenizeAll(aphidLexer, "&^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll26204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("==");
    AphidLexerTests.TokenizeAll(aphidLexer, "==");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("==", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll3001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&=");
    AphidLexerTests.TokenizeAll(aphidLexer, "&=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll59506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%=");
    AphidLexerTests.TokenizeAll(aphidLexer, "%=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll77703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#=");
    AphidLexerTests.TokenizeAll(aphidLexer, "#=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll28505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`=");
    AphidLexerTests.TokenizeAll(aphidLexer, "`=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|=");
    AphidLexerTests.TokenizeAll(aphidLexer, "|=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll53202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!=");
    AphidLexerTests.TokenizeAll(aphidLexer, "!=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll71103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "`\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll50804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "#\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll5003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "!\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("z");
    AphidLexerTests.TokenizeAll(aphidLexer, "z");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("z", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "=\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll37502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "%\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70008()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "&\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll18701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "|\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll1403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`#");
    AphidLexerTests.TokenizeAll(aphidLexer, "`#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll71603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("##");
    AphidLexerTests.TokenizeAll(aphidLexer, "##");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("##", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("y");
    AphidLexerTests.TokenizeAll(aphidLexer, "y");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("y", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll1404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=#");
    AphidLexerTests.TokenizeAll(aphidLexer, "=#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!#");
    AphidLexerTests.TokenizeAll(aphidLexer, "!#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%#");
    AphidLexerTests.TokenizeAll(aphidLexer, "%#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll71502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&#");
    AphidLexerTests.TokenizeAll(aphidLexer, "&#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|#");
    AphidLexerTests.TokenizeAll(aphidLexer, "|#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">");
    AphidLexerTests.TokenizeAll(aphidLexer, ">");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll30301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">\0");
    AphidLexerTests.TokenizeAll(aphidLexer, ">\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">@");
    AphidLexerTests.TokenizeAll(aphidLexer, ">@");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">:");
    AphidLexerTests.TokenizeAll(aphidLexer, ">:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll93002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">~");
    AphidLexerTests.TokenizeAll(aphidLexer, ">~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">`");
    AphidLexerTests.TokenizeAll(aphidLexer, ">`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">!");
    AphidLexerTests.TokenizeAll(aphidLexer, ">!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">|");
    AphidLexerTests.TokenizeAll(aphidLexer, ">|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll18002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">/");
    AphidLexerTests.TokenizeAll(aphidLexer, ">/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll68905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">.");
    AphidLexerTests.TokenizeAll(aphidLexer, ">.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">?");
    AphidLexerTests.TokenizeAll(aphidLexer, ">?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll3804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">]");
    AphidLexerTests.TokenizeAll(aphidLexer, ">]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll44201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">-");
    AphidLexerTests.TokenizeAll(aphidLexer, ">-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll99301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">,");
    AphidLexerTests.TokenizeAll(aphidLexer, ">,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75708()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">>");
    AphidLexerTests.TokenizeAll(aphidLexer, ">>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll88306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">>\0");
    AphidLexerTests.TokenizeAll(aphidLexer, ">>\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">>\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll99506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">>=");
    AphidLexerTests.TokenizeAll(aphidLexer, ">>=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">>=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll44803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">)");
    AphidLexerTests.TokenizeAll(aphidLexer, ">)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">\\");
    AphidLexerTests.TokenizeAll(aphidLexer, ">\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">*");
    AphidLexerTests.TokenizeAll(aphidLexer, ">*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("><");
    AphidLexerTests.TokenizeAll(aphidLexer, "><");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("><", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll39102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">+");
    AphidLexerTests.TokenizeAll(aphidLexer, ">+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">(");
    AphidLexerTests.TokenizeAll(aphidLexer, ">(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll33301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">^");
    AphidLexerTests.TokenizeAll(aphidLexer, ">^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll7802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">=");
    AphidLexerTests.TokenizeAll(aphidLexer, ">=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">\"");
    AphidLexerTests.TokenizeAll(aphidLexer, ">\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll44003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">#");
    AphidLexerTests.TokenizeAll(aphidLexer, ">#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll44004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|_");
    AphidLexerTests.TokenizeAll(aphidLexer, "|_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll3603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&_");
    AphidLexerTests.TokenizeAll(aphidLexer, "&_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll37203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=_");
    AphidLexerTests.TokenizeAll(aphidLexer, "=_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("I<\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "I<\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("I<\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll96204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%_");
    AphidLexerTests.TokenizeAll(aphidLexer, "%_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll59803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`_");
    AphidLexerTests.TokenizeAll(aphidLexer, "`_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">_");
    AphidLexerTests.TokenizeAll(aphidLexer, ">_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#_");
    AphidLexerTests.TokenizeAll(aphidLexer, "#_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!_");
    AphidLexerTests.TokenizeAll(aphidLexer, "!_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&;");
    AphidLexerTests.TokenizeAll(aphidLexer, "&;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll31303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%;");
    AphidLexerTests.TokenizeAll(aphidLexer, "%;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll72401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#;");
    AphidLexerTests.TokenizeAll(aphidLexer, "#;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll99604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|;");
    AphidLexerTests.TokenizeAll(aphidLexer, "|;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!;");
    AphidLexerTests.TokenizeAll(aphidLexer, "!;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll1405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=;");
    AphidLexerTests.TokenizeAll(aphidLexer, "=;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`;");
    AphidLexerTests.TokenizeAll(aphidLexer, "`;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll57904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">;");
    AphidLexerTests.TokenizeAll(aphidLexer, ">;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll8702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=$");
    AphidLexerTests.TokenizeAll(aphidLexer, "=$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%$");
    AphidLexerTests.TokenizeAll(aphidLexer, "%$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!$");
    AphidLexerTests.TokenizeAll(aphidLexer, "!$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll87201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&$");
    AphidLexerTests.TokenizeAll(aphidLexer, "&$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll22803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll28506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r");
    AphidLexerTests.TokenizeAll(aphidLexer, "r");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("r", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll5103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "r\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("r\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll76803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re");
    AphidLexerTests.TokenizeAll(aphidLexer, "re");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("re", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60608()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "re\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("re\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("reA");
    AphidLexerTests.TokenizeAll(aphidLexer, "reA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("reA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r0");
    AphidLexerTests.TokenizeAll(aphidLexer, "r0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("r0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll28703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re[");
    AphidLexerTests.TokenizeAll(aphidLexer, "re[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("re[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll1001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("rea");
    AphidLexerTests.TokenizeAll(aphidLexer, "rea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("rea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll94602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ret");
    AphidLexerTests.TokenizeAll(aphidLexer, "ret");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ret", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re{");
    AphidLexerTests.TokenizeAll(aphidLexer, "re{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("re{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll27402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ra");
    AphidLexerTests.TokenizeAll(aphidLexer, "ra");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll85601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re0");
    AphidLexerTests.TokenizeAll(aphidLexer, "re0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("re0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r<");
    AphidLexerTests.TokenizeAll(aphidLexer, "r<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("r<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("reý");
    AphidLexerTests.TokenizeAll(aphidLexer, "reý");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("reý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("rA");
    AphidLexerTests.TokenizeAll(aphidLexer, "rA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("rA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll44401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r{");
    AphidLexerTests.TokenizeAll(aphidLexer, "r{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("r{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r");
    AphidLexerTests.TokenizeAll(aphidLexer, "r");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("r", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll93802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">$");
    AphidLexerTests.TokenizeAll(aphidLexer, ">$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll88403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`$");
    AphidLexerTests.TokenizeAll(aphidLexer, "`$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll88902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|$");
    AphidLexerTests.TokenizeAll(aphidLexer, "|$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll97206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#$");
    AphidLexerTests.TokenizeAll(aphidLexer, "#$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=&");
    AphidLexerTests.TokenizeAll(aphidLexer, "=&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#&");
    AphidLexerTests.TokenizeAll(aphidLexer, "#&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll18604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">&");
    AphidLexerTests.TokenizeAll(aphidLexer, ">&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll68102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?");
    AphidLexerTests.TokenizeAll(aphidLexer, "?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll28601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "?\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll52902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?:");
    AphidLexerTests.TokenizeAll(aphidLexer, "?:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll57201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?@");
    AphidLexerTests.TokenizeAll(aphidLexer, "?@");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?`");
    AphidLexerTests.TokenizeAll(aphidLexer, "?`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll96501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?~");
    AphidLexerTests.TokenizeAll(aphidLexer, "?~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll52802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?!");
    AphidLexerTests.TokenizeAll(aphidLexer, "?!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll94703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?|");
    AphidLexerTests.TokenizeAll(aphidLexer, "?|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll26903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?/");
    AphidLexerTests.TokenizeAll(aphidLexer, "?/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll28803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?.");
    AphidLexerTests.TokenizeAll(aphidLexer, "?.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll56201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("??");
    AphidLexerTests.TokenizeAll(aphidLexer, "??");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("??", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll12901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?]");
    AphidLexerTests.TokenizeAll(aphidLexer, "?]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll97602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?-");
    AphidLexerTests.TokenizeAll(aphidLexer, "?-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?,");
    AphidLexerTests.TokenizeAll(aphidLexer, "?,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?>");
    AphidLexerTests.TokenizeAll(aphidLexer, "?>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?)");
    AphidLexerTests.TokenizeAll(aphidLexer, "?)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll139()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "?\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?*");
    AphidLexerTests.TokenizeAll(aphidLexer, "?*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll44502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?<");
    AphidLexerTests.TokenizeAll(aphidLexer, "?<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?+");
    AphidLexerTests.TokenizeAll(aphidLexer, "?+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll59903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?^");
    AphidLexerTests.TokenizeAll(aphidLexer, "?^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll45504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?(");
    AphidLexerTests.TokenizeAll(aphidLexer, "?(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?=");
    AphidLexerTests.TokenizeAll(aphidLexer, "?=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll27503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "?\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll27904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?#");
    AphidLexerTests.TokenizeAll(aphidLexer, "?#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll56603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?_");
    AphidLexerTests.TokenizeAll(aphidLexer, "?_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll93601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?;");
    AphidLexerTests.TokenizeAll(aphidLexer, "?;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll5405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?$");
    AphidLexerTests.TokenizeAll(aphidLexer, "?$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll88307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll97903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!&");
    AphidLexerTests.TokenizeAll(aphidLexer, "!&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`&");
    AphidLexerTests.TokenizeAll(aphidLexer, "`&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll2601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|&");
    AphidLexerTests.TokenizeAll(aphidLexer, "|&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll31503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&&");
    AphidLexerTests.TokenizeAll(aphidLexer, "&&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll97001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("q");
    AphidLexerTests.TokenizeAll(aphidLexer, "q");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("q", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?&");
    AphidLexerTests.TokenizeAll(aphidLexer, "?&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll14202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%&");
    AphidLexerTests.TokenizeAll(aphidLexer, "%&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll10101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d");
    AphidLexerTests.TokenizeAll(aphidLexer, "d");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("d", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll98605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "d\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("d\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d0");
    AphidLexerTests.TokenizeAll(aphidLexer, "d0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("d0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll99605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dA");
    AphidLexerTests.TokenizeAll(aphidLexer, "dA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("dA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d<");
    AphidLexerTests.TokenizeAll(aphidLexer, "d<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("d<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll79402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("do");
    AphidLexerTests.TokenizeAll(aphidLexer, "do");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("do", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll56402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d[");
    AphidLexerTests.TokenizeAll(aphidLexer, "d[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("d[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de");
    AphidLexerTests.TokenizeAll(aphidLexer, "de");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("de", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll85001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "de\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("de\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de0");
    AphidLexerTests.TokenizeAll(aphidLexer, "de0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("de0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deA");
    AphidLexerTests.TokenizeAll(aphidLexer, "deA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("deA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("da");
    AphidLexerTests.TokenizeAll(aphidLexer, "da");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("da", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll96106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("def");
    AphidLexerTests.TokenizeAll(aphidLexer, "def");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("def", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d{");
    AphidLexerTests.TokenizeAll(aphidLexer, "d{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("d{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll98606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de[");
    AphidLexerTests.TokenizeAll(aphidLexer, "de[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("de[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll85402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defb");
    AphidLexerTests.TokenizeAll(aphidLexer, "defb");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defb", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll33603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("def{");
    AphidLexerTests.TokenizeAll(aphidLexer, "def{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("def{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll36201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defA");
    AphidLexerTests.TokenizeAll(aphidLexer, "defA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll39303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d");
    AphidLexerTests.TokenizeAll(aphidLexer, "d");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("d", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll95504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("def");
    AphidLexerTests.TokenizeAll(aphidLexer, "def");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("def", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll97502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("del");
    AphidLexerTests.TokenizeAll(aphidLexer, "del");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("del", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll81202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defa");
    AphidLexerTests.TokenizeAll(aphidLexer, "defa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll51804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dela");
    AphidLexerTests.TokenizeAll(aphidLexer, "dela");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("dela", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll81902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("del{");
    AphidLexerTests.TokenizeAll(aphidLexer, "del{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("del{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62807()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("del");
    AphidLexerTests.TokenizeAll(aphidLexer, "del");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("del", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll34703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("def0");
    AphidLexerTests.TokenizeAll(aphidLexer, "def0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("def0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll48102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defau");
    AphidLexerTests.TokenizeAll(aphidLexer, "defau");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defau", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll3805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delA");
    AphidLexerTests.TokenizeAll(aphidLexer, "delA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("delA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dea");
    AphidLexerTests.TokenizeAll(aphidLexer, "dea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("dea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dele");
    AphidLexerTests.TokenizeAll(aphidLexer, "dele");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("dele", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de{");
    AphidLexerTests.TokenizeAll(aphidLexer, "de{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("de{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll50701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delea");
    AphidLexerTests.TokenizeAll(aphidLexer, "delea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("delea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "defaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll66604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("del0");
    AphidLexerTests.TokenizeAll(aphidLexer, "del0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("del0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll26205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de");
    AphidLexerTests.TokenizeAll(aphidLexer, "de");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("de", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll95803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defi");
    AphidLexerTests.TokenizeAll(aphidLexer, "defi");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll86704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delet");
    AphidLexerTests.TokenizeAll(aphidLexer, "delet");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("delet", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll94502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defin");
    AphidLexerTests.TokenizeAll(aphidLexer, "defin");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll37001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delete");
    AphidLexerTests.TokenizeAll(aphidLexer, "delete");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("delete", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll30002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defia");
    AphidLexerTests.TokenizeAll(aphidLexer, "defia");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll18003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`%");
    AphidLexerTests.TokenizeAll(aphidLexer, "`%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=%");
    AphidLexerTests.TokenizeAll(aphidLexer, "=%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#%");
    AphidLexerTests.TokenizeAll(aphidLexer, "#%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?%");
    AphidLexerTests.TokenizeAll(aphidLexer, "?%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll68801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|%");
    AphidLexerTests.TokenizeAll(aphidLexer, "|%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll88503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">%");
    AphidLexerTests.TokenizeAll(aphidLexer, ">%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll82004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!%");
    AphidLexerTests.TokenizeAll(aphidLexer, "!%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll33702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll89205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&%");
    AphidLexerTests.TokenizeAll(aphidLexer, "&%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll61405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%%");
    AphidLexerTests.TokenizeAll(aphidLexer, "%%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll81501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":\\");
    AphidLexerTests.TokenizeAll(aphidLexer, ":\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(":\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll56604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "|\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("|\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll30902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">\'");
    AphidLexerTests.TokenizeAll(aphidLexer, ">\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(">\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6108()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "!\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("!\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll85203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll88404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "?\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("?\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll66405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "%\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll19702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "#\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("#\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70009()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "`\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("`\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c");
    AphidLexerTests.TokenizeAll(aphidLexer, "c");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("c", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll95901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "c\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("c\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll39304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cA");
    AphidLexerTests.TokenizeAll(aphidLexer, "cA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll22501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cb");
    AphidLexerTests.TokenizeAll(aphidLexer, "cb");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cb", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll14801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ca");
    AphidLexerTests.TokenizeAll(aphidLexer, "ca");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll48904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ca\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ca\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ca\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll37803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c[");
    AphidLexerTests.TokenizeAll(aphidLexer, "c[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("c[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("co");
    AphidLexerTests.TokenizeAll(aphidLexer, "co");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("co", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll39404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c0");
    AphidLexerTests.TokenizeAll(aphidLexer, "c0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("c0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll2103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("co\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "co\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("co\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c{");
    AphidLexerTests.TokenizeAll(aphidLexer, "c{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("c{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("caA");
    AphidLexerTests.TokenizeAll(aphidLexer, "caA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("caA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll66605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("caa");
    AphidLexerTests.TokenizeAll(aphidLexer, "caa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("caa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll85102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("coa");
    AphidLexerTests.TokenizeAll(aphidLexer, "coa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("coa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll26802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c");
    AphidLexerTests.TokenizeAll(aphidLexer, "c");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("c", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40809()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("co{");
    AphidLexerTests.TokenizeAll(aphidLexer, "co{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("co{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("coý");
    AphidLexerTests.TokenizeAll(aphidLexer, "coý");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("coý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll44503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ca{");
    AphidLexerTests.TokenizeAll(aphidLexer, "ca{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ca{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll93301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("caý");
    AphidLexerTests.TokenizeAll(aphidLexer, "caý");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("caý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll97207()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con");
    AphidLexerTests.TokenizeAll(aphidLexer, "con");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("con", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("co0");
    AphidLexerTests.TokenizeAll(aphidLexer, "co0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("co0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll48301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con0");
    AphidLexerTests.TokenizeAll(aphidLexer, "con0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("con0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll3102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ca0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ca0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ca0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll14404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("coA");
    AphidLexerTests.TokenizeAll(aphidLexer, "coA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("coA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll72902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conA");
    AphidLexerTests.TokenizeAll(aphidLexer, "conA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("conA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll27604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con[");
    AphidLexerTests.TokenizeAll(aphidLexer, "con[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("con[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll79603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cona");
    AphidLexerTests.TokenizeAll(aphidLexer, "cona");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cona", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll96107()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cont");
    AphidLexerTests.TokenizeAll(aphidLexer, "cont");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cont", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62707()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con{");
    AphidLexerTests.TokenizeAll(aphidLexer, "con{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("con{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69907()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conta");
    AphidLexerTests.TokenizeAll(aphidLexer, "conta");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("conta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conti");
    AphidLexerTests.TokenizeAll(aphidLexer, "conti");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("conti", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll13001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cata");
    AphidLexerTests.TokenizeAll(aphidLexer, "cata");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cata", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catc");
    AphidLexerTests.TokenizeAll(aphidLexer, "catc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75709()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat0");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll84204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll49102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catA");
    AphidLexerTests.TokenizeAll(aphidLexer, "catA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll86201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con");
    AphidLexerTests.TokenizeAll(aphidLexer, "con");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("con", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catch");
    AphidLexerTests.TokenizeAll(aphidLexer, "catch");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catch", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll32703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catca");
    AphidLexerTests.TokenizeAll(aphidLexer, "catca");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll63202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "=\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("=\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "&\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("&\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll12402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll64103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s");
    AphidLexerTests.TokenizeAll(aphidLexer, "s");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("s", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll88405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "s\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("s\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sA");
    AphidLexerTests.TokenizeAll(aphidLexer, "sA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("sA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll38001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sa");
    AphidLexerTests.TokenizeAll(aphidLexer, "sa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("sa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s{");
    AphidLexerTests.TokenizeAll(aphidLexer, "s{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("s{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s0");
    AphidLexerTests.TokenizeAll(aphidLexer, "s0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("s0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll59403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sw");
    AphidLexerTests.TokenizeAll(aphidLexer, "sw");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("sw", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll32704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s");
    AphidLexerTests.TokenizeAll(aphidLexer, "s");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("s", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sw\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "sw\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("sw\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24407()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sw0");
    AphidLexerTests.TokenizeAll(aphidLexer, "sw0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("sw0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll8803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swa");
    AphidLexerTests.TokenizeAll(aphidLexer, "swa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swA");
    AphidLexerTests.TokenizeAll(aphidLexer, "swA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sw{");
    AphidLexerTests.TokenizeAll(aphidLexer, "sw{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("sw{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swý");
    AphidLexerTests.TokenizeAll(aphidLexer, "swý");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swi");
    AphidLexerTests.TokenizeAll(aphidLexer, "swi");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll3604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swia");
    AphidLexerTests.TokenizeAll(aphidLexer, "swia");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll28301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swi{");
    AphidLexerTests.TokenizeAll(aphidLexer, "swi{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swi{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll80505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swi0");
    AphidLexerTests.TokenizeAll(aphidLexer, "swi0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swi0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll27605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swit");
    AphidLexerTests.TokenizeAll(aphidLexer, "swit");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swit", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll64203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switc");
    AphidLexerTests.TokenizeAll(aphidLexer, "switc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll44902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swi");
    AphidLexerTests.TokenizeAll(aphidLexer, "swi");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swiA");
    AphidLexerTests.TokenizeAll(aphidLexer, "swiA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swita");
    AphidLexerTests.TokenizeAll(aphidLexer, "swita");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swita", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll32802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switch");
    AphidLexerTests.TokenizeAll(aphidLexer, "switch");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switch", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e");
    AphidLexerTests.TokenizeAll(aphidLexer, "e");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("e", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "e\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("e\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll78801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e0");
    AphidLexerTests.TokenizeAll(aphidLexer, "e0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("e0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll61903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("el");
    AphidLexerTests.TokenizeAll(aphidLexer, "el");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("el", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll56803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("el\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "el\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("el\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll97804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("eA");
    AphidLexerTests.TokenizeAll(aphidLexer, "eA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("eA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25308()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e[");
    AphidLexerTests.TokenizeAll(aphidLexer, "e[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("e[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ea");
    AphidLexerTests.TokenizeAll(aphidLexer, "ea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elA");
    AphidLexerTests.TokenizeAll(aphidLexer, "elA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("elA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll81102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("els");
    AphidLexerTests.TokenizeAll(aphidLexer, "els");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("els", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll95105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("el[");
    AphidLexerTests.TokenizeAll(aphidLexer, "el[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("el[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ela");
    AphidLexerTests.TokenizeAll(aphidLexer, "ela");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ela", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll87504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("el0");
    AphidLexerTests.TokenizeAll(aphidLexer, "el0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("el0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll64703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex");
    AphidLexerTests.TokenizeAll(aphidLexer, "ex");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ex", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e{");
    AphidLexerTests.TokenizeAll(aphidLexer, "e{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("e{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ex\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ex\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exa");
    AphidLexerTests.TokenizeAll(aphidLexer, "exa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ex0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ex0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll3605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("el{");
    AphidLexerTests.TokenizeAll(aphidLexer, "el{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("el{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll56703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e");
    AphidLexerTests.TokenizeAll(aphidLexer, "e");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("e", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4309()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("else");
    AphidLexerTests.TokenizeAll(aphidLexer, "else");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("else", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll87704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elý");
    AphidLexerTests.TokenizeAll(aphidLexer, "elý");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("elý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("els0");
    AphidLexerTests.TokenizeAll(aphidLexer, "els0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("els0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elsa");
    AphidLexerTests.TokenizeAll(aphidLexer, "elsa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("elsa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex<");
    AphidLexerTests.TokenizeAll(aphidLexer, "ex<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ex<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll79701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("els{");
    AphidLexerTests.TokenizeAll(aphidLexer, "els{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("els{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll95106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ext");
    AphidLexerTests.TokenizeAll(aphidLexer, "ext");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ext", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elsA");
    AphidLexerTests.TokenizeAll(aphidLexer, "elsA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("elsA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll38702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exA");
    AphidLexerTests.TokenizeAll(aphidLexer, "exA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exta");
    AphidLexerTests.TokenizeAll(aphidLexer, "exta");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll26301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ext0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ext0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ext0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll87802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ext{");
    AphidLexerTests.TokenizeAll(aphidLexer, "ext{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ext{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll1902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ext");
    AphidLexerTests.TokenizeAll(aphidLexer, "ext");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ext", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll79003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exte");
    AphidLexerTests.TokenizeAll(aphidLexer, "exte");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exte", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll20201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("els");
    AphidLexerTests.TokenizeAll(aphidLexer, "els");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("els", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll48702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exten");
    AphidLexerTests.TokenizeAll(aphidLexer, "exten");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exten", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll84901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extA");
    AphidLexerTests.TokenizeAll(aphidLexer, "extA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extea");
    AphidLexerTests.TokenizeAll(aphidLexer, "extea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll22001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex{");
    AphidLexerTests.TokenizeAll(aphidLexer, "ex{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ex{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll26601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exý");
    AphidLexerTests.TokenizeAll(aphidLexer, "exý");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90107()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extend");
    AphidLexerTests.TokenizeAll(aphidLexer, "extend");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extend", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f");
    AphidLexerTests.TokenizeAll(aphidLexer, "f");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("f", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll3904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "f\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("f\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi");
    AphidLexerTests.TokenizeAll(aphidLexer, "fi");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll76804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fo");
    AphidLexerTests.TokenizeAll(aphidLexer, "fo");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fo", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fo\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fo\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fo\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll14104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fi\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fi\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll98903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f0");
    AphidLexerTests.TokenizeAll(aphidLexer, "f0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("f0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll44104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fiA");
    AphidLexerTests.TokenizeAll(aphidLexer, "fiA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("foA");
    AphidLexerTests.TokenizeAll(aphidLexer, "foA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("foA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll17402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin");
    AphidLexerTests.TokenizeAll(aphidLexer, "fin");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll80506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("for");
    AphidLexerTests.TokenizeAll(aphidLexer, "for");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("for", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll12703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("foa");
    AphidLexerTests.TokenizeAll(aphidLexer, "foa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("foa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll8603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fo0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fo0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fo0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll31304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fia");
    AphidLexerTests.TokenizeAll(aphidLexer, "fia");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll2802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finb");
    AphidLexerTests.TokenizeAll(aphidLexer, "finb");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("finb", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fA");
    AphidLexerTests.TokenizeAll(aphidLexer, "fA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll93803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finA");
    AphidLexerTests.TokenizeAll(aphidLexer, "finA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("finA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fo{");
    AphidLexerTests.TokenizeAll(aphidLexer, "fo{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fo{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fin0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fin0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fi0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fi0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll39802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi{");
    AphidLexerTests.TokenizeAll(aphidLexer, "fi{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fi{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll51002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin[");
    AphidLexerTests.TokenizeAll(aphidLexer, "fin[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fin[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fina");
    AphidLexerTests.TokenizeAll(aphidLexer, "fina");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll14303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll67901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f[");
    AphidLexerTests.TokenizeAll(aphidLexer, "f[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("f[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll98101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fb");
    AphidLexerTests.TokenizeAll(aphidLexer, "fb");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fb", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("faa");
    AphidLexerTests.TokenizeAll(aphidLexer, "faa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("faa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin{");
    AphidLexerTests.TokenizeAll(aphidLexer, "fin{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fin{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("faA");
    AphidLexerTests.TokenizeAll(aphidLexer, "faA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("faA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll33402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin");
    AphidLexerTests.TokenizeAll(aphidLexer, "fin");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll20001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fa0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll82605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa[");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fa[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll96108()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fal");
    AphidLexerTests.TokenizeAll(aphidLexer, "fal");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fal", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll50901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("foý");
    AphidLexerTests.TokenizeAll(aphidLexer, "foý");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("foý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa{");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fa{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll68607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "finaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("finaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll36001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("final");
    AphidLexerTests.TokenizeAll(aphidLexer, "final");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("final", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll85502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("faý");
    AphidLexerTests.TokenizeAll(aphidLexer, "faý");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("faý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll14702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f{");
    AphidLexerTests.TokenizeAll(aphidLexer, "f{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("f{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll10704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falA");
    AphidLexerTests.TokenizeAll(aphidLexer, "falA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("falA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f");
    AphidLexerTests.TokenizeAll(aphidLexer, "f");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("f", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll20902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fal[");
    AphidLexerTests.TokenizeAll(aphidLexer, "fal[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fal[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll943()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fiý");
    AphidLexerTests.TokenizeAll(aphidLexer, "fiý");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fiý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fal0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fal0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fal0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll67002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fala");
    AphidLexerTests.TokenizeAll(aphidLexer, "fala");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fala", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fals");
    AphidLexerTests.TokenizeAll(aphidLexer, "fals");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fals", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fal{");
    AphidLexerTests.TokenizeAll(aphidLexer, "fal{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fal{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll38502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("false");
    AphidLexerTests.TokenizeAll(aphidLexer, "false");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("false", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll80602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fal");
    AphidLexerTests.TokenizeAll(aphidLexer, "fal");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fal", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll95001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falsa");
    AphidLexerTests.TokenizeAll(aphidLexer, "falsa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("falsa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll54801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":=");
    AphidLexerTests.TokenizeAll(aphidLexer, ":=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(":=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll89801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<=");
    AphidLexerTests.TokenizeAll(aphidLexer, "<=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll26503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "<\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll51301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\:");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll18401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\@");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\@");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll38902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\|");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll36801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\~");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll85305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\!");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll7303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\`");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\/");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\.");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\?");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll61304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\]");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll82205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\-");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\,");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\>");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\)");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll61702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\*");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15807()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\<");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll5502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\+");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll71303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\(");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\^");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll78602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\=");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\#");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll49802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\_");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\;");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll27802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\$");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\&");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\%");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\\\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "\\\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\\\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll14002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\t");
    AphidLexerTests.TokenizeAll(aphidLexer, "\t");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\t", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":\"");
    AphidLexerTests.TokenizeAll(aphidLexer, ":\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(":\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll13704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":_");
    AphidLexerTests.TokenizeAll(aphidLexer, ":_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(":_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll7803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll48103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("t");
    AphidLexerTests.TokenizeAll(aphidLexer, "t");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("t", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll26206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("t\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "t\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("t\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll39305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tr");
    AphidLexerTests.TokenizeAll(aphidLexer, "tr");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tr", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll84003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("t0");
    AphidLexerTests.TokenizeAll(aphidLexer, "t0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("t0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tr\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "tr\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tr\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("try");
    AphidLexerTests.TokenizeAll(aphidLexer, "try");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("try", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll51701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ta");
    AphidLexerTests.TokenizeAll(aphidLexer, "ta");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll32305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("t{");
    AphidLexerTests.TokenizeAll(aphidLexer, "t{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("t{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll10601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tr0");
    AphidLexerTests.TokenizeAll(aphidLexer, "tr0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tr0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll64502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("trA");
    AphidLexerTests.TokenizeAll(aphidLexer, "trA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("trA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll87401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tA");
    AphidLexerTests.TokenizeAll(aphidLexer, "tA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tra");
    AphidLexerTests.TokenizeAll(aphidLexer, "tra");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62808()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tru");
    AphidLexerTests.TokenizeAll(aphidLexer, "tru");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tru", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll68103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tr[");
    AphidLexerTests.TokenizeAll(aphidLexer, "tr[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tr[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll48003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("th");
    AphidLexerTests.TokenizeAll(aphidLexer, "th");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("th", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll31203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("t");
    AphidLexerTests.TokenizeAll(aphidLexer, "t");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("t", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("true");
    AphidLexerTests.TokenizeAll(aphidLexer, "true");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("true", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tru0");
    AphidLexerTests.TokenizeAll(aphidLexer, "tru0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tru0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll67504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("trua");
    AphidLexerTests.TokenizeAll(aphidLexer, "trua");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("trua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll96205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tru{");
    AphidLexerTests.TokenizeAll(aphidLexer, "tru{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tru{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll20505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tr{");
    AphidLexerTests.TokenizeAll(aphidLexer, "tr{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tr{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll89602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("truA");
    AphidLexerTests.TokenizeAll(aphidLexer, "truA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("truA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll64303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tru");
    AphidLexerTests.TokenizeAll(aphidLexer, "tru");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tru", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75308()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("th\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "th\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("th\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll63501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thA");
    AphidLexerTests.TokenizeAll(aphidLexer, "thA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thr");
    AphidLexerTests.TokenizeAll(aphidLexer, "thr");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thr", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll57803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("th0");
    AphidLexerTests.TokenizeAll(aphidLexer, "th0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("th0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll39601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tha");
    AphidLexerTests.TokenizeAll(aphidLexer, "tha");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tha", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tr");
    AphidLexerTests.TokenizeAll(aphidLexer, "tr");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tr", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll5201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("th{");
    AphidLexerTests.TokenizeAll(aphidLexer, "th{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("th{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thra");
    AphidLexerTests.TokenizeAll(aphidLexer, "thra");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thrA");
    AphidLexerTests.TokenizeAll(aphidLexer, "thrA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thrA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thi");
    AphidLexerTests.TokenizeAll(aphidLexer, "thi");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6109()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thro");
    AphidLexerTests.TokenizeAll(aphidLexer, "thro");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thro", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll1903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("th");
    AphidLexerTests.TokenizeAll(aphidLexer, "th");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("th", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll68502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thr[");
    AphidLexerTests.TokenizeAll(aphidLexer, "thr[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thr[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thia");
    AphidLexerTests.TokenizeAll(aphidLexer, "thia");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll2004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thr0");
    AphidLexerTests.TokenizeAll(aphidLexer, "thr0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thr0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("this");
    AphidLexerTests.TokenizeAll(aphidLexer, "this");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("this", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll68302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thi{");
    AphidLexerTests.TokenizeAll(aphidLexer, "thi{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thi{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thiA");
    AphidLexerTests.TokenizeAll(aphidLexer, "thiA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thr{");
    AphidLexerTests.TokenizeAll(aphidLexer, "thr{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thr{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thr");
    AphidLexerTests.TokenizeAll(aphidLexer, "thr");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thr", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll944()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thi");
    AphidLexerTests.TokenizeAll(aphidLexer, "thi");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll2503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thi0");
    AphidLexerTests.TokenizeAll(aphidLexer, "thi0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thi0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throa");
    AphidLexerTests.TokenizeAll(aphidLexer, "throa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("throa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll26904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throw");
    AphidLexerTests.TokenizeAll(aphidLexer, "throw");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("throw", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":#");
    AphidLexerTests.TokenizeAll(aphidLexer, ":#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(":#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll18605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<#");
    AphidLexerTests.TokenizeAll(aphidLexer, "<#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll37602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":;");
    AphidLexerTests.TokenizeAll(aphidLexer, ":;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(":;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<;");
    AphidLexerTests.TokenizeAll(aphidLexer, "<;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("g");
    AphidLexerTests.TokenizeAll(aphidLexer, "g");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("g", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":$");
    AphidLexerTests.TokenizeAll(aphidLexer, ":$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(":$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<$");
    AphidLexerTests.TokenizeAll(aphidLexer, "<$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\n");
    AphidLexerTests.TokenizeAll(aphidLexer, "\n");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\n", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll17002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<&");
    AphidLexerTests.TokenizeAll(aphidLexer, "<&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll95406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("v");
    AphidLexerTests.TokenizeAll(aphidLexer, "v");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("v", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll61406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":&");
    AphidLexerTests.TokenizeAll(aphidLexer, ":&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(":&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69908()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("u");
    AphidLexerTests.TokenizeAll(aphidLexer, "u");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("u", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll28704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("u\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "u\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("u\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ua");
    AphidLexerTests.TokenizeAll(aphidLexer, "ua");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll84502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("us");
    AphidLexerTests.TokenizeAll(aphidLexer, "us");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("us", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("u{");
    AphidLexerTests.TokenizeAll(aphidLexer, "u{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("u{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("u0");
    AphidLexerTests.TokenizeAll(aphidLexer, "u0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("u0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll31504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("uA");
    AphidLexerTests.TokenizeAll(aphidLexer, "uA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("uA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll79604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("us\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "us\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("us\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usi");
    AphidLexerTests.TokenizeAll(aphidLexer, "usi");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll59603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("us0");
    AphidLexerTests.TokenizeAll(aphidLexer, "us0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("us0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usA");
    AphidLexerTests.TokenizeAll(aphidLexer, "usA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll94704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("us<");
    AphidLexerTests.TokenizeAll(aphidLexer, "us<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("us<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll20304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usiA");
    AphidLexerTests.TokenizeAll(aphidLexer, "usiA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("u");
    AphidLexerTests.TokenizeAll(aphidLexer, "u");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("u", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll59404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usa");
    AphidLexerTests.TokenizeAll(aphidLexer, "usa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usia");
    AphidLexerTests.TokenizeAll(aphidLexer, "usia");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll88705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("us{");
    AphidLexerTests.TokenizeAll(aphidLexer, "us{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("us{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll12704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usý");
    AphidLexerTests.TokenizeAll(aphidLexer, "usý");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usi0");
    AphidLexerTests.TokenizeAll(aphidLexer, "usi0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usi0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usi[");
    AphidLexerTests.TokenizeAll(aphidLexer, "usi[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usi[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usi{");
    AphidLexerTests.TokenizeAll(aphidLexer, "usi{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usi{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll26004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usin");
    AphidLexerTests.TokenizeAll(aphidLexer, "usin");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usi");
    AphidLexerTests.TokenizeAll(aphidLexer, "usi");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll34301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("using");
    AphidLexerTests.TokenizeAll(aphidLexer, "using");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("using", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll63801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usina");
    AphidLexerTests.TokenizeAll(aphidLexer, "usina");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll34503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<%");
    AphidLexerTests.TokenizeAll(aphidLexer, "<%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":%");
    AphidLexerTests.TokenizeAll(aphidLexer, ":%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(":%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\f");
    AphidLexerTests.TokenizeAll(aphidLexer, "\f");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\f", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll48004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":\'");
    AphidLexerTests.TokenizeAll(aphidLexer, ":\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(":\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l");
    AphidLexerTests.TokenizeAll(aphidLexer, "l");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("l", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll89103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "l\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("l\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll72501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l0");
    AphidLexerTests.TokenizeAll(aphidLexer, "l0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("l0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll210()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lo");
    AphidLexerTests.TokenizeAll(aphidLexer, "lo");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lo", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll77304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l<");
    AphidLexerTests.TokenizeAll(aphidLexer, "l<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("l<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll27001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lo\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "lo\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lo\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll89704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lob");
    AphidLexerTests.TokenizeAll(aphidLexer, "lob");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lob", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loA");
    AphidLexerTests.TokenizeAll(aphidLexer, "loA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll27504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lo{");
    AphidLexerTests.TokenizeAll(aphidLexer, "lo{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lo{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll71304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loc");
    AphidLexerTests.TokenizeAll(aphidLexer, "loc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll10705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lA");
    AphidLexerTests.TokenizeAll(aphidLexer, "lA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lo");
    AphidLexerTests.TokenizeAll(aphidLexer, "lo");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lo", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loca");
    AphidLexerTests.TokenizeAll(aphidLexer, "loca");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll61502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("locA");
    AphidLexerTests.TokenizeAll(aphidLexer, "locA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("locA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll96305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loc[");
    AphidLexerTests.TokenizeAll(aphidLexer, "loc[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loc[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll77704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loc0");
    AphidLexerTests.TokenizeAll(aphidLexer, "loc0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loc0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lo0");
    AphidLexerTests.TokenizeAll(aphidLexer, "lo0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lo0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loc{");
    AphidLexerTests.TokenizeAll(aphidLexer, "loc{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loc{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loaA");
    AphidLexerTests.TokenizeAll(aphidLexer, "loaA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("la");
    AphidLexerTests.TokenizeAll(aphidLexer, "la");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("la", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9807()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa[");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loa[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "loaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll72701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa{");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loa{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll48703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l[");
    AphidLexerTests.TokenizeAll(aphidLexer, "l[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("l[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll19703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l{");
    AphidLexerTests.TokenizeAll(aphidLexer, "l{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("l{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l");
    AphidLexerTests.TokenizeAll(aphidLexer, "l");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("l", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll98702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("load");
    AphidLexerTests.TokenizeAll(aphidLexer, "load");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("load", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll88504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loc");
    AphidLexerTests.TokenizeAll(aphidLexer, "loc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll52002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa0");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loa0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll37204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lock");
    AphidLexerTests.TokenizeAll(aphidLexer, "lock");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lock", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll2803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll20101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("<\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "<\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("<\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\'\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "\'\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\'\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\'\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "\'\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\'\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll98607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("k");
    AphidLexerTests.TokenizeAll(aphidLexer, "k");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("k", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll20903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\r");
    AphidLexerTests.TokenizeAll(aphidLexer, "\r");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\r", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll45301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w");
    AphidLexerTests.TokenizeAll(aphidLexer, "w");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("w", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "w\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("w\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll52803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wa");
    AphidLexerTests.TokenizeAll(aphidLexer, "wa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("wa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll72002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w{");
    AphidLexerTests.TokenizeAll(aphidLexer, "w{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("w{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wh");
    AphidLexerTests.TokenizeAll(aphidLexer, "wh");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("wh", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll18506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wh\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "wh\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("wh\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w");
    AphidLexerTests.TokenizeAll(aphidLexer, "w");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("w", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll77305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whi");
    AphidLexerTests.TokenizeAll(aphidLexer, "whi");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll94705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w0");
    AphidLexerTests.TokenizeAll(aphidLexer, "w0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("w0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll80401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whi0");
    AphidLexerTests.TokenizeAll(aphidLexer, "whi0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whi0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll10901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whA");
    AphidLexerTests.TokenizeAll(aphidLexer, "whA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll26701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whil");
    AphidLexerTests.TokenizeAll(aphidLexer, "whil");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whil", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wha");
    AphidLexerTests.TokenizeAll(aphidLexer, "wha");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("wha", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75309()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wh[");
    AphidLexerTests.TokenizeAll(aphidLexer, "wh[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("wh[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll45005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whia");
    AphidLexerTests.TokenizeAll(aphidLexer, "whia");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll95407()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wA");
    AphidLexerTests.TokenizeAll(aphidLexer, "wA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("wA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll8002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whiA");
    AphidLexerTests.TokenizeAll(aphidLexer, "whiA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll99704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whi[");
    AphidLexerTests.TokenizeAll(aphidLexer, "whi[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whi[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll79101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wh0");
    AphidLexerTests.TokenizeAll(aphidLexer, "wh0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("wh0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24408()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wh{");
    AphidLexerTests.TokenizeAll(aphidLexer, "wh{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("wh{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll67505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whý");
    AphidLexerTests.TokenizeAll(aphidLexer, "whý");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll84702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whi{");
    AphidLexerTests.TokenizeAll(aphidLexer, "whi{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whi{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll1702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("while");
    AphidLexerTests.TokenizeAll(aphidLexer, "while");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("while", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whila");
    AphidLexerTests.TokenizeAll(aphidLexer, "whila");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whila", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whi");
    AphidLexerTests.TokenizeAll(aphidLexer, "whi");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("n");
    AphidLexerTests.TokenizeAll(aphidLexer, "n");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("n", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll45006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("n\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "n\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("n\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll34103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("na");
    AphidLexerTests.TokenizeAll(aphidLexer, "na");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("na", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll87705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ne");
    AphidLexerTests.TokenizeAll(aphidLexer, "ne");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ne", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll94803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nA");
    AphidLexerTests.TokenizeAll(aphidLexer, "nA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll1505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("n[");
    AphidLexerTests.TokenizeAll(aphidLexer, "n[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("n[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll54004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("n{");
    AphidLexerTests.TokenizeAll(aphidLexer, "n{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("n{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("n");
    AphidLexerTests.TokenizeAll(aphidLexer, "n");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("n", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ne\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ne\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ne\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("neA");
    AphidLexerTests.TokenizeAll(aphidLexer, "neA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("neA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll80301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("new");
    AphidLexerTests.TokenizeAll(aphidLexer, "new");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("new", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ne[");
    AphidLexerTests.TokenizeAll(aphidLexer, "ne[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ne[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll18103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ne0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ne0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ne0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nu");
    AphidLexerTests.TokenizeAll(aphidLexer, "nu");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nu", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll71202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nu\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "nu\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nu\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9808()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nuA");
    AphidLexerTests.TokenizeAll(aphidLexer, "nuA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nuA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll7508()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nu[");
    AphidLexerTests.TokenizeAll(aphidLexer, "nu[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nu[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll95408()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("n0");
    AphidLexerTests.TokenizeAll(aphidLexer, "n0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("n0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll79803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nu0");
    AphidLexerTests.TokenizeAll(aphidLexer, "nu0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nu0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nul");
    AphidLexerTests.TokenizeAll(aphidLexer, "nul");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nul", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll82802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nea");
    AphidLexerTests.TokenizeAll(aphidLexer, "nea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll50805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ne{");
    AphidLexerTests.TokenizeAll(aphidLexer, "ne{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ne{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("neý");
    AphidLexerTests.TokenizeAll(aphidLexer, "neý");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("neý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6110()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nula");
    AphidLexerTests.TokenizeAll(aphidLexer, "nula");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nula", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll64704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nulA");
    AphidLexerTests.TokenizeAll(aphidLexer, "nulA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nulA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll63003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nul0");
    AphidLexerTests.TokenizeAll(aphidLexer, "nul0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nul0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll14405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nul[");
    AphidLexerTests.TokenizeAll(aphidLexer, "nul[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nul[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll10802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("null");
    AphidLexerTests.TokenizeAll(aphidLexer, "null");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("null", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll48005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nul{");
    AphidLexerTests.TokenizeAll(aphidLexer, "nul{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nul{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll31204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nua");
    AphidLexerTests.TokenizeAll(aphidLexer, "nua");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll86503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nul");
    AphidLexerTests.TokenizeAll(aphidLexer, "nul");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nul", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nu{");
    AphidLexerTests.TokenizeAll(aphidLexer, "nu{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nu{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll59904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nuý");
    AphidLexerTests.TokenizeAll(aphidLexer, "nuý");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nuý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll48802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\v");
    AphidLexerTests.TokenizeAll(aphidLexer, "\v");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\v", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll618()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("m");
    AphidLexerTests.TokenizeAll(aphidLexer, "m");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("m", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24409()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("o");
    AphidLexerTests.TokenizeAll(aphidLexer, "o");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("o", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll97805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll8604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^");
    AphidLexerTests.TokenizeAll(aphidLexer, "^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "^\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll26504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^!");
    AphidLexerTests.TokenizeAll(aphidLexer, "^!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll5406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^@");
    AphidLexerTests.TokenizeAll(aphidLexer, "^@");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^`");
    AphidLexerTests.TokenizeAll(aphidLexer, "^`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^~");
    AphidLexerTests.TokenizeAll(aphidLexer, "^~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^:");
    AphidLexerTests.TokenizeAll(aphidLexer, "^:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll49301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^|");
    AphidLexerTests.TokenizeAll(aphidLexer, "^|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll48502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^/");
    AphidLexerTests.TokenizeAll(aphidLexer, "^/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll96109()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^.");
    AphidLexerTests.TokenizeAll(aphidLexer, "^.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^?");
    AphidLexerTests.TokenizeAll(aphidLexer, "^?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^]");
    AphidLexerTests.TokenizeAll(aphidLexer, "^]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll19802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^-");
    AphidLexerTests.TokenizeAll(aphidLexer, "^-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll99007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^,");
    AphidLexerTests.TokenizeAll(aphidLexer, "^,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll72202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^>");
    AphidLexerTests.TokenizeAll(aphidLexer, "^>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75710()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^)");
    AphidLexerTests.TokenizeAll(aphidLexer, "^)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "^\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^*");
    AphidLexerTests.TokenizeAll(aphidLexer, "^*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll26101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^<");
    AphidLexerTests.TokenizeAll(aphidLexer, "^<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^+");
    AphidLexerTests.TokenizeAll(aphidLexer, "^+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^^");
    AphidLexerTests.TokenizeAll(aphidLexer, "^^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll50502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^(");
    AphidLexerTests.TokenizeAll(aphidLexer, "^(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll10403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^=");
    AphidLexerTests.TokenizeAll(aphidLexer, "^=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "^\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll97301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^#");
    AphidLexerTests.TokenizeAll(aphidLexer, "^#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^_");
    AphidLexerTests.TokenizeAll(aphidLexer, "^_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll82701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^;");
    AphidLexerTests.TokenizeAll(aphidLexer, "^;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll61103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^$");
    AphidLexerTests.TokenizeAll(aphidLexer, "^$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll64304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^&");
    AphidLexerTests.TokenizeAll(aphidLexer, "^&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll50302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^%");
    AphidLexerTests.TokenizeAll(aphidLexer, "^%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll54303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("^\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "^\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("^\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll17602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62708()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.TokenizeAll(aphidLexer, "");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~");
    AphidLexerTests.TokenizeAll(aphidLexer, "~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "~\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll960()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~:");
    AphidLexerTests.TokenizeAll(aphidLexer, "~:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~@");
    AphidLexerTests.TokenizeAll(aphidLexer, "~@");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~|");
    AphidLexerTests.TokenizeAll(aphidLexer, "~|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll1506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~~");
    AphidLexerTests.TokenizeAll(aphidLexer, "~~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll72003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~!");
    AphidLexerTests.TokenizeAll(aphidLexer, "~!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll2901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~`");
    AphidLexerTests.TokenizeAll(aphidLexer, "~`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll89403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~/");
    AphidLexerTests.TokenizeAll(aphidLexer, "~/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~.");
    AphidLexerTests.TokenizeAll(aphidLexer, "~.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll19004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~?");
    AphidLexerTests.TokenizeAll(aphidLexer, "~?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll7702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~]");
    AphidLexerTests.TokenizeAll(aphidLexer, "~]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~-");
    AphidLexerTests.TokenizeAll(aphidLexer, "~-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~,");
    AphidLexerTests.TokenizeAll(aphidLexer, "~,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll50103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~>");
    AphidLexerTests.TokenizeAll(aphidLexer, "~>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~)");
    AphidLexerTests.TokenizeAll(aphidLexer, "~)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "~\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll93504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~*");
    AphidLexerTests.TokenizeAll(aphidLexer, "~*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll81402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~<");
    AphidLexerTests.TokenizeAll(aphidLexer, "~<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~+");
    AphidLexerTests.TokenizeAll(aphidLexer, "~+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62809()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~(");
    AphidLexerTests.TokenizeAll(aphidLexer, "~(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~^");
    AphidLexerTests.TokenizeAll(aphidLexer, "~^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29807()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~=");
    AphidLexerTests.TokenizeAll(aphidLexer, "~=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll78001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "~\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll66406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~#");
    AphidLexerTests.TokenizeAll(aphidLexer, "~#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll57804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~_");
    AphidLexerTests.TokenizeAll(aphidLexer, "~_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll68608()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~;");
    AphidLexerTests.TokenizeAll(aphidLexer, "~;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~$");
    AphidLexerTests.TokenizeAll(aphidLexer, "~$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll88903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~&");
    AphidLexerTests.TokenizeAll(aphidLexer, "~&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll89104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~%");
    AphidLexerTests.TokenizeAll(aphidLexer, "~%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll1802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("~\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "~\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("~\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll53104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*");
    AphidLexerTests.TokenizeAll(aphidLexer, "*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll78902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "*\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll32506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*!");
    AphidLexerTests.TokenizeAll(aphidLexer, "*!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll13105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*@");
    AphidLexerTests.TokenizeAll(aphidLexer, "*@");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll97503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*:");
    AphidLexerTests.TokenizeAll(aphidLexer, "*:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll96306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*|");
    AphidLexerTests.TokenizeAll(aphidLexer, "*|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll81302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*~");
    AphidLexerTests.TokenizeAll(aphidLexer, "*~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll49402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*`");
    AphidLexerTests.TokenizeAll(aphidLexer, "*`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*/");
    AphidLexerTests.TokenizeAll(aphidLexer, "*/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll18901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*.");
    AphidLexerTests.TokenizeAll(aphidLexer, "*.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll59301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*?");
    AphidLexerTests.TokenizeAll(aphidLexer, "*?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll2005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*]");
    AphidLexerTests.TokenizeAll(aphidLexer, "*]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll19403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*-");
    AphidLexerTests.TokenizeAll(aphidLexer, "*-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25309()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*,");
    AphidLexerTests.TokenizeAll(aphidLexer, "*,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll71503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*>");
    AphidLexerTests.TokenizeAll(aphidLexer, "*>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll81903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*)");
    AphidLexerTests.TokenizeAll(aphidLexer, "*)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll89503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "*\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("**");
    AphidLexerTests.TokenizeAll(aphidLexer, "**");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("**", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*<");
    AphidLexerTests.TokenizeAll(aphidLexer, "*<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll84405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*+");
    AphidLexerTests.TokenizeAll(aphidLexer, "*+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*(");
    AphidLexerTests.TokenizeAll(aphidLexer, "*(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll87001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*^");
    AphidLexerTests.TokenizeAll(aphidLexer, "*^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*=");
    AphidLexerTests.TokenizeAll(aphidLexer, "*=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll5801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "*\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll97701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*#");
    AphidLexerTests.TokenizeAll(aphidLexer, "*#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll95701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*_");
    AphidLexerTests.TokenizeAll(aphidLexer, "*_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll54902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*;");
    AphidLexerTests.TokenizeAll(aphidLexer, "*;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*$");
    AphidLexerTests.TokenizeAll(aphidLexer, "*$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll44601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*&");
    AphidLexerTests.TokenizeAll(aphidLexer, "*&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll26207()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*%");
    AphidLexerTests.TokenizeAll(aphidLexer, "*%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll76101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("*\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "*\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("*\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24807()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".");
    AphidLexerTests.TokenizeAll(aphidLexer, ".");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll72301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".\0");
    AphidLexerTests.TokenizeAll(aphidLexer, ".\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll13402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".@");
    AphidLexerTests.TokenizeAll(aphidLexer, ".@");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll96402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".|");
    AphidLexerTests.TokenizeAll(aphidLexer, ".|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll32507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".~");
    AphidLexerTests.TokenizeAll(aphidLexer, ".~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll67302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".:");
    AphidLexerTests.TokenizeAll(aphidLexer, ".:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll48204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".`");
    AphidLexerTests.TokenizeAll(aphidLexer, ".`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll71203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".!");
    AphidLexerTests.TokenizeAll(aphidLexer, ".!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("./");
    AphidLexerTests.TokenizeAll(aphidLexer, "./");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("./", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll12601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("..");
    AphidLexerTests.TokenizeAll(aphidLexer, "..");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("..", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".?");
    AphidLexerTests.TokenizeAll(aphidLexer, ".?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll99705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".]");
    AphidLexerTests.TokenizeAll(aphidLexer, ".]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".-");
    AphidLexerTests.TokenizeAll(aphidLexer, ".-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".,");
    AphidLexerTests.TokenizeAll(aphidLexer, ".,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".>");
    AphidLexerTests.TokenizeAll(aphidLexer, ".>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".)");
    AphidLexerTests.TokenizeAll(aphidLexer, ".)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".\\");
    AphidLexerTests.TokenizeAll(aphidLexer, ".\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".*");
    AphidLexerTests.TokenizeAll(aphidLexer, ".*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60609()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".<");
    AphidLexerTests.TokenizeAll(aphidLexer, ".<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll68609()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".+");
    AphidLexerTests.TokenizeAll(aphidLexer, ".+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll61104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".^");
    AphidLexerTests.TokenizeAll(aphidLexer, ".^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll71005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".(");
    AphidLexerTests.TokenizeAll(aphidLexer, ".(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".=");
    AphidLexerTests.TokenizeAll(aphidLexer, ".=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll99507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".\"");
    AphidLexerTests.TokenizeAll(aphidLexer, ".\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll95201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".#");
    AphidLexerTests.TokenizeAll(aphidLexer, ".#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60610()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("._");
    AphidLexerTests.TokenizeAll(aphidLexer, "._");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("._", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".;");
    AphidLexerTests.TokenizeAll(aphidLexer, ".;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll5904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".$");
    AphidLexerTests.TokenizeAll(aphidLexer, ".$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll37804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".&");
    AphidLexerTests.TokenizeAll(aphidLexer, ".&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".%");
    AphidLexerTests.TokenizeAll(aphidLexer, ".%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(".\'");
    AphidLexerTests.TokenizeAll(aphidLexer, ".\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>(".\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("}");
    AphidLexerTests.TokenizeAll(aphidLexer, "}");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("}", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+");
    AphidLexerTests.TokenizeAll(aphidLexer, "+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24808()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "+\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+!");
    AphidLexerTests.TokenizeAll(aphidLexer, "+!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll37401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+:");
    AphidLexerTests.TokenizeAll(aphidLexer, "+:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+@");
    AphidLexerTests.TokenizeAll(aphidLexer, "+@");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+`");
    AphidLexerTests.TokenizeAll(aphidLexer, "+`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll76701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+|");
    AphidLexerTests.TokenizeAll(aphidLexer, "+|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll96801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+~");
    AphidLexerTests.TokenizeAll(aphidLexer, "+~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll45103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+/");
    AphidLexerTests.TokenizeAll(aphidLexer, "+/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll50303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+.");
    AphidLexerTests.TokenizeAll(aphidLexer, "+.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+?");
    AphidLexerTests.TokenizeAll(aphidLexer, "+?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll79004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+]");
    AphidLexerTests.TokenizeAll(aphidLexer, "+]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll96307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+-");
    AphidLexerTests.TokenizeAll(aphidLexer, "+-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll71802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+,");
    AphidLexerTests.TokenizeAll(aphidLexer, "+,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73107()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+>");
    AphidLexerTests.TokenizeAll(aphidLexer, "+>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll30903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+)");
    AphidLexerTests.TokenizeAll(aphidLexer, "+)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll67003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "+\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+*");
    AphidLexerTests.TokenizeAll(aphidLexer, "+*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+<");
    AphidLexerTests.TokenizeAll(aphidLexer, "+<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll86804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("++");
    AphidLexerTests.TokenizeAll(aphidLexer, "++");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("++", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+(");
    AphidLexerTests.TokenizeAll(aphidLexer, "+(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll51901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+^");
    AphidLexerTests.TokenizeAll(aphidLexer, "+^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+=");
    AphidLexerTests.TokenizeAll(aphidLexer, "+=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll7703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "+\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+#");
    AphidLexerTests.TokenizeAll(aphidLexer, "+#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+_");
    AphidLexerTests.TokenizeAll(aphidLexer, "+_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll67101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+;");
    AphidLexerTests.TokenizeAll(aphidLexer, "+;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll30501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+$");
    AphidLexerTests.TokenizeAll(aphidLexer, "+$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll3204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+&");
    AphidLexerTests.TokenizeAll(aphidLexer, "+&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll28401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+%");
    AphidLexerTests.TokenizeAll(aphidLexer, "+%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("+\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "+\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("+\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-");
    AphidLexerTests.TokenizeAll(aphidLexer, "-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "-\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll61703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-:");
    AphidLexerTests.TokenizeAll(aphidLexer, "-:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-@");
    AphidLexerTests.TokenizeAll(aphidLexer, "-@");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll45402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-~");
    AphidLexerTests.TokenizeAll(aphidLexer, "-~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll50503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-!");
    AphidLexerTests.TokenizeAll(aphidLexer, "-!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll59405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-|");
    AphidLexerTests.TokenizeAll(aphidLexer, "-|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll87706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-`");
    AphidLexerTests.TokenizeAll(aphidLexer, "-`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll20506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-/");
    AphidLexerTests.TokenizeAll(aphidLexer, "-/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69909()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-.");
    AphidLexerTests.TokenizeAll(aphidLexer, "-.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll80805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-?");
    AphidLexerTests.TokenizeAll(aphidLexer, "-?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-]");
    AphidLexerTests.TokenizeAll(aphidLexer, "-]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll14406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("--");
    AphidLexerTests.TokenizeAll(aphidLexer, "--");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("--", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-,");
    AphidLexerTests.TokenizeAll(aphidLexer, "-,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("->");
    AphidLexerTests.TokenizeAll(aphidLexer, "->");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("->", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll84101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-)");
    AphidLexerTests.TokenizeAll(aphidLexer, "-)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll5905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "-\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll66202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-*");
    AphidLexerTests.TokenizeAll(aphidLexer, "-*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-<");
    AphidLexerTests.TokenizeAll(aphidLexer, "-<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll79202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-+");
    AphidLexerTests.TokenizeAll(aphidLexer, "-+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-^");
    AphidLexerTests.TokenizeAll(aphidLexer, "-^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll12801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-(");
    AphidLexerTests.TokenizeAll(aphidLexer, "-(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll66003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-=");
    AphidLexerTests.TokenizeAll(aphidLexer, "-=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll30801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "-\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-#");
    AphidLexerTests.TokenizeAll(aphidLexer, "-#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-_");
    AphidLexerTests.TokenizeAll(aphidLexer, "-_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll68303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-;");
    AphidLexerTests.TokenizeAll(aphidLexer, "-;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll97102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-$");
    AphidLexerTests.TokenizeAll(aphidLexer, "-$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll44303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-&");
    AphidLexerTests.TokenizeAll(aphidLexer, "-&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-%");
    AphidLexerTests.TokenizeAll(aphidLexer, "-%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll89002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("-\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "-\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("-\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll44105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/");
    AphidLexerTests.TokenizeAll(aphidLexer, "/");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll20507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "/\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75711()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/:");
    AphidLexerTests.TokenizeAll(aphidLexer, "/:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70010()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/@");
    AphidLexerTests.TokenizeAll(aphidLexer, "/@");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll84004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/|");
    AphidLexerTests.TokenizeAll(aphidLexer, "/|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll82803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/~");
    AphidLexerTests.TokenizeAll(aphidLexer, "/~");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/!");
    AphidLexerTests.TokenizeAll(aphidLexer, "/!");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/`");
    AphidLexerTests.TokenizeAll(aphidLexer, "/`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll8203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("//");
    AphidLexerTests.TokenizeAll(aphidLexer, "//");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("//", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll8503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/.");
    AphidLexerTests.TokenizeAll(aphidLexer, "/.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll71701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/?");
    AphidLexerTests.TokenizeAll(aphidLexer, "/?");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll22301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/]");
    AphidLexerTests.TokenizeAll(aphidLexer, "/]");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15808()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/-");
    AphidLexerTests.TokenizeAll(aphidLexer, "/-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/,");
    AphidLexerTests.TokenizeAll(aphidLexer, "/,");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/>");
    AphidLexerTests.TokenizeAll(aphidLexer, "/>");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/)");
    AphidLexerTests.TokenizeAll(aphidLexer, "/)");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/\\");
    AphidLexerTests.TokenizeAll(aphidLexer, "/\\");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll56001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/*");
    AphidLexerTests.TokenizeAll(aphidLexer, "/*");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/<");
    AphidLexerTests.TokenizeAll(aphidLexer, "/<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62709()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/+");
    AphidLexerTests.TokenizeAll(aphidLexer, "/+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll53105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/(");
    AphidLexerTests.TokenizeAll(aphidLexer, "/(");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll84205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/^");
    AphidLexerTests.TokenizeAll(aphidLexer, "/^");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/=");
    AphidLexerTests.TokenizeAll(aphidLexer, "/=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll86504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "/\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll89206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/#");
    AphidLexerTests.TokenizeAll(aphidLexer, "/#");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/_");
    AphidLexerTests.TokenizeAll(aphidLexer, "/_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll81702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/;");
    AphidLexerTests.TokenizeAll(aphidLexer, "/;");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll39903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/$");
    AphidLexerTests.TokenizeAll(aphidLexer, "/$");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll31702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/&");
    AphidLexerTests.TokenizeAll(aphidLexer, "/&");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/%");
    AphidLexerTests.TokenizeAll(aphidLexer, "/%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll54903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "/\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ta\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ta\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ta\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4310()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thro[");
    AphidLexerTests.TokenizeAll(aphidLexer, "thro[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thro[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll96403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thi_");
    AphidLexerTests.TokenizeAll(aphidLexer, "thi_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thi_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll44304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defi_");
    AphidLexerTests.TokenizeAll(aphidLexer, "defi_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defi_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll77601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dele[");
    AphidLexerTests.TokenizeAll(aphidLexer, "dele[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("dele[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll84206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usin[");
    AphidLexerTests.TokenizeAll(aphidLexer, "usin[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usin[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whil_");
    AphidLexerTests.TokenizeAll(aphidLexer, "whil_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whil_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll38801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exten[");
    AphidLexerTests.TokenizeAll(aphidLexer, "exten[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exten[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll12403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("def_");
    AphidLexerTests.TokenizeAll(aphidLexer, "def_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("def_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll54005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exte_");
    AphidLexerTests.TokenizeAll(aphidLexer, "exte_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exte_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("us_");
    AphidLexerTests.TokenizeAll(aphidLexer, "us_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("us_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("els_");
    AphidLexerTests.TokenizeAll(aphidLexer, "els_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("els_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90108()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ext_");
    AphidLexerTests.TokenizeAll(aphidLexer, "ext_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ext_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll10501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex_");
    AphidLexerTests.TokenizeAll(aphidLexer, "ex_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ex_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll8504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swi_");
    AphidLexerTests.TokenizeAll(aphidLexer, "swi_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swi_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("del_");
    AphidLexerTests.TokenizeAll(aphidLexer, "del_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("del_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tru_");
    AphidLexerTests.TokenizeAll(aphidLexer, "tru_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tru_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defa_");
    AphidLexerTests.TokenizeAll(aphidLexer, "defa_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defa_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll8204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat_");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r_");
    AphidLexerTests.TokenizeAll(aphidLexer, "r_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("r_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll18606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defau[");
    AphidLexerTests.TokenizeAll(aphidLexer, "defau[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defau[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll76301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con_");
    AphidLexerTests.TokenizeAll(aphidLexer, "con_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("con_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll1601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swit[");
    AphidLexerTests.TokenizeAll(aphidLexer, "swit[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swit[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11107()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("brea_");
    AphidLexerTests.TokenizeAll(aphidLexer, "brea_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("brea_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll10302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w_");
    AphidLexerTests.TokenizeAll(aphidLexer, "w_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("w_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll49204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa_");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loa_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll33201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fo_");
    AphidLexerTests.TokenizeAll(aphidLexer, "fo_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fo_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll54402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nul_");
    AphidLexerTests.TokenizeAll(aphidLexer, "nul_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nul_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i_");
    AphidLexerTests.TokenizeAll(aphidLexer, "i_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("i_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fal_");
    AphidLexerTests.TokenizeAll(aphidLexer, "fal_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fal_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("u_");
    AphidLexerTests.TokenizeAll(aphidLexer, "u_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("u_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll50405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K÷\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "K÷\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("K÷\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll64503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fina_");
    AphidLexerTests.TokenizeAll(aphidLexer, "fina_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fina_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll20508()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ca_");
    AphidLexerTests.TokenizeAll(aphidLexer, "ca_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ca_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cont_");
    AphidLexerTests.TokenizeAll(aphidLexer, "cont_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cont_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll32306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catc[");
    AphidLexerTests.TokenizeAll(aphidLexer, "catc[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catc[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll19101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thro_");
    AphidLexerTests.TokenizeAll(aphidLexer, "thro_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thro_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll96903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thr_");
    AphidLexerTests.TokenizeAll(aphidLexer, "thr_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thr_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll27803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("th_");
    AphidLexerTests.TokenizeAll(aphidLexer, "th_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("th_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll56302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("br_");
    AphidLexerTests.TokenizeAll(aphidLexer, "br_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("br_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b_");
    AphidLexerTests.TokenizeAll(aphidLexer, "b_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("b_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whi_");
    AphidLexerTests.TokenizeAll(aphidLexer, "whi_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whi_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll12002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("co_");
    AphidLexerTests.TokenizeAll(aphidLexer, "co_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("co_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d_");
    AphidLexerTests.TokenizeAll(aphidLexer, "d_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("d_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi_");
    AphidLexerTests.TokenizeAll(aphidLexer, "fi_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fi_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll45104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loc_");
    AphidLexerTests.TokenizeAll(aphidLexer, "loc_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loc_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sw_");
    AphidLexerTests.TokenizeAll(aphidLexer, "sw_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("sw_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s_");
    AphidLexerTests.TokenizeAll(aphidLexer, "s_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("s_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41308()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l_");
    AphidLexerTests.TokenizeAll(aphidLexer, "l_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("l_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("t_");
    AphidLexerTests.TokenizeAll(aphidLexer, "t_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("t_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll31902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usi_");
    AphidLexerTests.TokenizeAll(aphidLexer, "usi_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usi_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll33103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lo_");
    AphidLexerTests.TokenizeAll(aphidLexer, "lo_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lo_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll48503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fals_");
    AphidLexerTests.TokenizeAll(aphidLexer, "fals_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fals_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll85204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conti[");
    AphidLexerTests.TokenizeAll(aphidLexer, "conti[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("conti[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll22804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre_");
    AphidLexerTests.TokenizeAll(aphidLexer, "bre_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("bre_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll51805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin_");
    AphidLexerTests.TokenizeAll(aphidLexer, "fin_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fin_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de_");
    AphidLexerTests.TokenizeAll(aphidLexer, "de_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("de_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll86505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("n_");
    AphidLexerTests.TokenizeAll(aphidLexer, "n_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("n_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75712()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usin_");
    AphidLexerTests.TokenizeAll(aphidLexer, "usin_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usin_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usin\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "usin\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usin\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("el_");
    AphidLexerTests.TokenizeAll(aphidLexer, "el_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("el_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defi\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defi\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defi\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll79901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0E", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll49601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nu_");
    AphidLexerTests.TokenizeAll(aphidLexer, "nu_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nu_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c_");
    AphidLexerTests.TokenizeAll(aphidLexer, "c_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("c_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f_");
    AphidLexerTests.TokenizeAll(aphidLexer, "f_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("f_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e_");
    AphidLexerTests.TokenizeAll(aphidLexer, "e_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("e_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dele_");
    AphidLexerTests.TokenizeAll(aphidLexer, "dele_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("dele_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll50406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tr_");
    AphidLexerTests.TokenizeAll(aphidLexer, "tr_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tr_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll66501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa_");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fa_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll76401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thro\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "thro\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thro\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defau");
    AphidLexerTests.TokenizeAll(aphidLexer, "defau");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defau", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swit_");
    AphidLexerTests.TokenizeAll(aphidLexer, "swit_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swit_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll54006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re_");
    AphidLexerTests.TokenizeAll(aphidLexer, "re_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("re_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll93103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wh_");
    AphidLexerTests.TokenizeAll(aphidLexer, "wh_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("wh_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("brea\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "brea\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("brea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll67702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exten");
    AphidLexerTests.TokenizeAll(aphidLexer, "exten");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exten", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catc");
    AphidLexerTests.TokenizeAll(aphidLexer, "catc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delet");
    AphidLexerTests.TokenizeAll(aphidLexer, "delet");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("delet", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69910()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fina");
    AphidLexerTests.TokenizeAll(aphidLexer, "fina");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switc");
    AphidLexerTests.TokenizeAll(aphidLexer, "switc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll19005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conti");
    AphidLexerTests.TokenizeAll(aphidLexer, "conti");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("conti", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll88505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continu");
    AphidLexerTests.TokenizeAll(aphidLexer, "continu");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continu", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll8703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continu\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continu\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continu\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll97208()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continuA");
    AphidLexerTests.TokenizeAll(aphidLexer, "continuA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continuA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll66004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continu[");
    AphidLexerTests.TokenizeAll(aphidLexer, "continu[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continu[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll19908()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continu0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continu0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continu0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll84005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continub");
    AphidLexerTests.TokenizeAll(aphidLexer, "continub");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continub", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll78903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continu{");
    AphidLexerTests.TokenizeAll(aphidLexer, "continu{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continu{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll37303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continue");
    AphidLexerTests.TokenizeAll(aphidLexer, "continue");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continue", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continu");
    AphidLexerTests.TokenizeAll(aphidLexer, "continu");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continu", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40810()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continu_");
    AphidLexerTests.TokenizeAll(aphidLexer, "continu_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continu_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll224()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defin");
    AphidLexerTests.TokenizeAll(aphidLexer, "defin");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll17103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$a_");
    AphidLexerTests.TokenizeAll(aphidLexer, "$a_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("$a_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catc_");
    AphidLexerTests.TokenizeAll(aphidLexer, "catc_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catc_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll50002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ne_");
    AphidLexerTests.TokenizeAll(aphidLexer, "ne_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ne_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll53504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exte");
    AphidLexerTests.TokenizeAll(aphidLexer, "exte");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exte", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defa");
    AphidLexerTests.TokenizeAll(aphidLexer, "defa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("final");
    AphidLexerTests.TokenizeAll(aphidLexer, "final");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("final", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll13705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dele\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "dele\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("dele\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll99008()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("final\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "final\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("final\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll39803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("n\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "n\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("n\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "r\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("r\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll12504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("u\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "u\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("u\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll2401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("t\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "t\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("t\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll45206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delet\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "delet\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("delet\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll7202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exte\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "exte\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exte\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll37603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "e\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("e\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll54403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "d\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("d\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll34603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defin\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defin\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defin\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cont");
    AphidLexerTests.TokenizeAll(aphidLexer, "cont");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cont", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24707()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\'\0\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "\'\0\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\'\0\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\'\\\'");
    AphidLexerTests.TokenizeAll(aphidLexer, "\'\\\'");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\'\\\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll14203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("1\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "1\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("1\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll5906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("1.");
    AphidLexerTests.TokenizeAll(aphidLexer, "1.");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("1.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll88101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deĀ\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "deĀ\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("deĀ\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("10");
    AphidLexerTests.TokenizeAll(aphidLexer, "10");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("10", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll61305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continu\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continu\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continu\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "s\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("s\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll66702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switc\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "switc\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switc\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("1E");
    AphidLexerTests.TokenizeAll(aphidLexer, "1E");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("1E", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll17201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throw0");
    AphidLexerTests.TokenizeAll(aphidLexer, "throw0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("throw0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throwA");
    AphidLexerTests.TokenizeAll(aphidLexer, "throwA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("throwA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29808()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throwa");
    AphidLexerTests.TokenizeAll(aphidLexer, "throwa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("throwa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll86604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throw");
    AphidLexerTests.TokenizeAll(aphidLexer, "throw");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("throw", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll96110()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throw[");
    AphidLexerTests.TokenizeAll(aphidLexer, "throw[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("throw[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll04()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throw_");
    AphidLexerTests.TokenizeAll(aphidLexer, "throw_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("throw_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43807()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\"\0\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "\"\0\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\"\0\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll93701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\"\\\"");
    AphidLexerTests.TokenizeAll(aphidLexer, "\"\\\"");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\"\\\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll53505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conti\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "conti\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("conti\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "f\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("f\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll54007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exten\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "exten\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exten\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll31205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "i\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("i\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swita");
    AphidLexerTests.TokenizeAll(aphidLexer, "swita");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swita", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll71305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de0");
    AphidLexerTests.TokenizeAll(aphidLexer, "de0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("de0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%>\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "%>\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%>\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6111()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%><");
    AphidLexerTests.TokenizeAll(aphidLexer, "%><");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%><", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%><%");
    AphidLexerTests.TokenizeAll(aphidLexer, "%><%");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%><%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%><%\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "%><%\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%><%\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll12304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%><%=");
    AphidLexerTests.TokenizeAll(aphidLexer, "%><%=");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%><%=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "w\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("w\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll19909()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exte");
    AphidLexerTests.TokenizeAll(aphidLexer, "exte");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exte", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll13501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usia");
    AphidLexerTests.TokenizeAll(aphidLexer, "usia");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll3905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll98001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("Ka");
    AphidLexerTests.TokenizeAll(aphidLexer, "Ka");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("Ka", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll27104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "defaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11308()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "c\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("c\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fals");
    AphidLexerTests.TokenizeAll(aphidLexer, "fals");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fals", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll49103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fina\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fina\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fina\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll98703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nea");
    AphidLexerTests.TokenizeAll(aphidLexer, "nea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("neA");
    AphidLexerTests.TokenizeAll(aphidLexer, "neA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("neA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll37701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fA");
    AphidLexerTests.TokenizeAll(aphidLexer, "fA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll96111()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("newa");
    AphidLexerTests.TokenizeAll(aphidLexer, "newa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("newa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("new0");
    AphidLexerTests.TokenizeAll(aphidLexer, "new0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("new0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("new:");
    AphidLexerTests.TokenizeAll(aphidLexer, "new:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("new:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("newA");
    AphidLexerTests.TokenizeAll(aphidLexer, "newA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("newA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15809()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("new{");
    AphidLexerTests.TokenizeAll(aphidLexer, "new{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("new{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21707()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("new");
    AphidLexerTests.TokenizeAll(aphidLexer, "new");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("new", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("new\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "new\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("new\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24410()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("new_");
    AphidLexerTests.TokenizeAll(aphidLexer, "new_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("new_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll33403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("newa");
    AphidLexerTests.TokenizeAll(aphidLexer, "newa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("newa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll95107()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "b\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("b\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35308()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defau\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defau\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defau\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dea");
    AphidLexerTests.TokenizeAll(aphidLexer, "dea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("dea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll82005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("rA");
    AphidLexerTests.TokenizeAll(aphidLexer, "rA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("rA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll05()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("else");
    AphidLexerTests.TokenizeAll(aphidLexer, "else");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("else", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll88201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whi\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "whi\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whi\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll31903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defauA");
    AphidLexerTests.TokenizeAll(aphidLexer, "defauA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defauA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35309()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breaka");
    AphidLexerTests.TokenizeAll(aphidLexer, "breaka");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("breaka", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll86901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("break");
    AphidLexerTests.TokenizeAll(aphidLexer, "break");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("break", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breakA");
    AphidLexerTests.TokenizeAll(aphidLexer, "breakA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("breakA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24008()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("break0");
    AphidLexerTests.TokenizeAll(aphidLexer, "break0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("break0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll26005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("break_");
    AphidLexerTests.TokenizeAll(aphidLexer, "break_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("break_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4311()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deleta");
    AphidLexerTests.TokenizeAll(aphidLexer, "deleta");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("deleta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll93902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whil");
    AphidLexerTests.TokenizeAll(aphidLexer, "whil");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whil", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll13201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thr\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "thr\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thr\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catc");
    AphidLexerTests.TokenizeAll(aphidLexer, "catc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll85503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "l\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("l\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i0");
    AphidLexerTests.TokenizeAll(aphidLexer, "i0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("i0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll28705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defaua");
    AphidLexerTests.TokenizeAll(aphidLexer, "defaua");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defaua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll57805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0E\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E+");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E+");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0E+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll8605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E-");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E-");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0E-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll66302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0E0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E-0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E-0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0E-0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E-:");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E-:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0E-:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll13706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switca");
    AphidLexerTests.TokenizeAll(aphidLexer, "switca");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll87707()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("th\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "th\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("th\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extena");
    AphidLexerTests.TokenizeAll(aphidLexer, "extena");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extena", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll10303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%>\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "%>\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%>\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll84601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll14105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throw\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "throw\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("throw\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll80905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usi\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "usi\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usi\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll27905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ca");
    AphidLexerTests.TokenizeAll(aphidLexer, "ca");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll12003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("la");
    AphidLexerTests.TokenizeAll(aphidLexer, "la");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("la", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w \0\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "w \0\0\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("w \0\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wa");
    AphidLexerTests.TokenizeAll(aphidLexer, "wa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("wa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wA");
    AphidLexerTests.TokenizeAll(aphidLexer, "wA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("wA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll86002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w0");
    AphidLexerTests.TokenizeAll(aphidLexer, "w0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("w0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i<");
    AphidLexerTests.TokenizeAll(aphidLexer, "i<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("i<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exten{");
    AphidLexerTests.TokenizeAll(aphidLexer, "exten{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exten{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll67601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("do\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "do\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("do\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll1507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("doa");
    AphidLexerTests.TokenizeAll(aphidLexer, "doa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("doa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("do0");
    AphidLexerTests.TokenizeAll(aphidLexer, "do0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("do0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("do{");
    AphidLexerTests.TokenizeAll(aphidLexer, "do{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("do{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll63303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("do");
    AphidLexerTests.TokenizeAll(aphidLexer, "do");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("do", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll44305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("doA");
    AphidLexerTests.TokenizeAll(aphidLexer, "doA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("doA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("do\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "do\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("do\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll80906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("do_");
    AphidLexerTests.TokenizeAll(aphidLexer, "do_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("do_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("doa");
    AphidLexerTests.TokenizeAll(aphidLexer, "doa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("doa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll31101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swia");
    AphidLexerTests.TokenizeAll(aphidLexer, "swia");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll439()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fal");
    AphidLexerTests.TokenizeAll(aphidLexer, "fal");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fal", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll61904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ua");
    AphidLexerTests.TokenizeAll(aphidLexer, "ua");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll77501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60207()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defau{");
    AphidLexerTests.TokenizeAll(aphidLexer, "defau{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defau{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll93505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continue\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continue\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continue\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll227()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continuea\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continuea\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continuea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll87803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continueA\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continueA\0\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continueA\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43808()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continue[");
    AphidLexerTests.TokenizeAll(aphidLexer, "continue[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continue[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll34202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continue0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continue0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continue0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll28507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continue{");
    AphidLexerTests.TokenizeAll(aphidLexer, "continue{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continue{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continue");
    AphidLexerTests.TokenizeAll(aphidLexer, "continue");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continue", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll82101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continue_");
    AphidLexerTests.TokenizeAll(aphidLexer, "continue_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continue_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll2504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0E0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll81103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E00");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E00");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0E00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll45207()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continue\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continue\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continue\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll45901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("uA");
    AphidLexerTests.TokenizeAll(aphidLexer, "uA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("uA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll97806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("def\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "def\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("def\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70011()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("in\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "in\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("in\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("inA");
    AphidLexerTests.TokenizeAll(aphidLexer, "inA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("inA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll20509()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ina");
    AphidLexerTests.TokenizeAll(aphidLexer, "ina");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll57301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("in[");
    AphidLexerTests.TokenizeAll(aphidLexer, "in[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("in[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll97209()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("in{");
    AphidLexerTests.TokenizeAll(aphidLexer, "in{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("in{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("in0");
    AphidLexerTests.TokenizeAll(aphidLexer, "in0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("in0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("in");
    AphidLexerTests.TokenizeAll(aphidLexer, "in");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("in", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll76805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("in\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "in\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("in\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll28001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("in_");
    AphidLexerTests.TokenizeAll(aphidLexer, "in_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("in_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ina");
    AphidLexerTests.TokenizeAll(aphidLexer, "ina");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fin\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fin\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sa");
    AphidLexerTests.TokenizeAll(aphidLexer, "sa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("sa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll5004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("u0");
    AphidLexerTests.TokenizeAll(aphidLexer, "u0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("u0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll1703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thia");
    AphidLexerTests.TokenizeAll(aphidLexer, "thia");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll34902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deûA");
    AphidLexerTests.TokenizeAll(aphidLexer, "deûA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("deûA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("faa");
    AphidLexerTests.TokenizeAll(aphidLexer, "faa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("faa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll14407()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("true\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "true\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("true\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("truea");
    AphidLexerTests.TokenizeAll(aphidLexer, "truea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("truea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll13707()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("true{");
    AphidLexerTests.TokenizeAll(aphidLexer, "true{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("true{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("true_");
    AphidLexerTests.TokenizeAll(aphidLexer, "true_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("true_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43809()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("true\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "true\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("true\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll67703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conta");
    AphidLexerTests.TokenizeAll(aphidLexer, "conta");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("conta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll84503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catca");
    AphidLexerTests.TokenizeAll(aphidLexer, "catca");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll78603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swi\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "swi\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swi\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("del\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "del\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("del\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69911()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "bre\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("bre\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll72203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ba");
    AphidLexerTests.TokenizeAll(aphidLexer, "ba");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ba", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll66703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nA");
    AphidLexerTests.TokenizeAll(aphidLexer, "nA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35310()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loc");
    AphidLexerTests.TokenizeAll(aphidLexer, "loc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll67402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nu\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "nu\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nu\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll94503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cA");
    AphidLexerTests.TokenizeAll(aphidLexer, "cA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("caa");
    AphidLexerTests.TokenizeAll(aphidLexer, "caa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("caa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("else\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "else\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("else\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll34704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elsea");
    AphidLexerTests.TokenizeAll(aphidLexer, "elsea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("elsea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll18607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("else[");
    AphidLexerTests.TokenizeAll(aphidLexer, "else[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("else[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4807()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("else{");
    AphidLexerTests.TokenizeAll(aphidLexer, "else{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("else{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll7101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("else_");
    AphidLexerTests.TokenizeAll(aphidLexer, "else_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("else_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll81703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("else");
    AphidLexerTests.TokenizeAll(aphidLexer, "else");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("else", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll49403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("us\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "us\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("us\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll71104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exten");
    AphidLexerTests.TokenizeAll(aphidLexer, "exten");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exten", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bra");
    AphidLexerTests.TokenizeAll(aphidLexer, "bra");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("bra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ne\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ne\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ne\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("coa");
    AphidLexerTests.TokenizeAll(aphidLexer, "coa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("coa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll2006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sA");
    AphidLexerTests.TokenizeAll(aphidLexer, "sA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("sA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll36501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swit\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "swit\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swit\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41907()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ne{");
    AphidLexerTests.TokenizeAll(aphidLexer, "ne{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ne{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll52401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("contia");
    AphidLexerTests.TokenizeAll(aphidLexer, "contia");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("contia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lA");
    AphidLexerTests.TokenizeAll(aphidLexer, "lA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%><\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "%><\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%><\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll38401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("co{");
    AphidLexerTests.TokenizeAll(aphidLexer, "co{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("co{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fi0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fi0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll85306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falsea");
    AphidLexerTests.TokenizeAll(aphidLexer, "falsea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("falsea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll17603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("false");
    AphidLexerTests.TokenizeAll(aphidLexer, "false");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("false", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll28103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falseA");
    AphidLexerTests.TokenizeAll(aphidLexer, "falseA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("falseA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("false0");
    AphidLexerTests.TokenizeAll(aphidLexer, "false0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("false0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll87901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("false_");
    AphidLexerTests.TokenizeAll(aphidLexer, "false_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("false_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("false\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "false\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("false\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("def0");
    AphidLexerTests.TokenizeAll(aphidLexer, "def0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("def0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll86705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("rea");
    AphidLexerTests.TokenizeAll(aphidLexer, "rea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("rea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll56103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exa");
    AphidLexerTests.TokenizeAll(aphidLexer, "exa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "con\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("con\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll86605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fo\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fo\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fo\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25310()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nul\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "nul\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nul\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll14003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("trûA");
    AphidLexerTests.TokenizeAll(aphidLexer, "trûA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("trûA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll32403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ela");
    AphidLexerTests.TokenizeAll(aphidLexer, "ela");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ela", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35311()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("da");
    AphidLexerTests.TokenizeAll(aphidLexer, "da");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("da", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll18507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defau");
    AphidLexerTests.TokenizeAll(aphidLexer, "defau");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defau", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("new");
    AphidLexerTests.TokenizeAll(aphidLexer, "new");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("new", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wh\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "wh\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("wh\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whA");
    AphidLexerTests.TokenizeAll(aphidLexer, "whA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ta0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ta0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ta0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll68610()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defina");
    AphidLexerTests.TokenizeAll(aphidLexer, "defina");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35707()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tryA");
    AphidLexerTests.TokenizeAll(aphidLexer, "tryA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tryA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll31001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("try0");
    AphidLexerTests.TokenizeAll(aphidLexer, "try0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("try0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("try:");
    AphidLexerTests.TokenizeAll(aphidLexer, "try:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("try:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll89504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("trya");
    AphidLexerTests.TokenizeAll(aphidLexer, "trya");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("trya", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("try[");
    AphidLexerTests.TokenizeAll(aphidLexer, "try[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("try[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("try{");
    AphidLexerTests.TokenizeAll(aphidLexer, "try{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("try{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll7203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("try");
    AphidLexerTests.TokenizeAll(aphidLexer, "try");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("try", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("try\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "try\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("try\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll37901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("try_");
    AphidLexerTests.TokenizeAll(aphidLexer, "try_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("try_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll61201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("trya");
    AphidLexerTests.TokenizeAll(aphidLexer, "trya");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("trya", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll38601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ca\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ca\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ca\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll13303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sw\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "sw\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("sw\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("else\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "else\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("else\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll20305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conti{");
    AphidLexerTests.TokenizeAll(aphidLexer, "conti{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("conti{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll835()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fi\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fi\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll17701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lo\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "lo\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lo\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ta");
    AphidLexerTests.TokenizeAll(aphidLexer, "ta");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll17302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conti");
    AphidLexerTests.TokenizeAll(aphidLexer, "conti");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("conti", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll59905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dela");
    AphidLexerTests.TokenizeAll(aphidLexer, "dela");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("dela", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e0");
    AphidLexerTests.TokenizeAll(aphidLexer, "e0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("e0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll77401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("this\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "this\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("this\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll63102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thisa");
    AphidLexerTests.TokenizeAll(aphidLexer, "thisa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thisa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll51601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("this[");
    AphidLexerTests.TokenizeAll(aphidLexer, "this[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("this[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll966()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("this{");
    AphidLexerTests.TokenizeAll(aphidLexer, "this{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("this{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("this_");
    AphidLexerTests.TokenizeAll(aphidLexer, "this_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("this_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll88001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("this");
    AphidLexerTests.TokenizeAll(aphidLexer, "this");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("this", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("this\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "this\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("this\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thisa");
    AphidLexerTests.TokenizeAll(aphidLexer, "thisa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thisa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll97103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("brA");
    AphidLexerTests.TokenizeAll(aphidLexer, "brA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("brA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24809()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("brea");
    AphidLexerTests.TokenizeAll(aphidLexer, "brea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("brea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll34504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ne");
    AphidLexerTests.TokenizeAll(aphidLexer, "ne");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ne", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll71006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whila");
    AphidLexerTests.TokenizeAll(aphidLexer, "whila");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whila", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll66407()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continua");
    AphidLexerTests.TokenizeAll(aphidLexer, "continua");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nula");
    AphidLexerTests.TokenizeAll(aphidLexer, "nula");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nula", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21708()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nu0");
    AphidLexerTests.TokenizeAll(aphidLexer, "nu0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nu0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll28804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throwýa");
    AphidLexerTests.TokenizeAll(aphidLexer, "throwýa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("throwýa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll34801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tra");
    AphidLexerTests.TokenizeAll(aphidLexer, "tra");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll22602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("A0");
    AphidLexerTests.TokenizeAll(aphidLexer, "A0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("A0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("doa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "doa\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("doa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll93205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tryA");
    AphidLexerTests.TokenizeAll(aphidLexer, "tryA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tryA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("//\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "//\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("//\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll82901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("//\n");
    AphidLexerTests.TokenizeAll(aphidLexer, "//\n");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("//\n", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11807()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("//\r");
    AphidLexerTests.TokenizeAll(aphidLexer, "//\r");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("//\r", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("els");
    AphidLexerTests.TokenizeAll(aphidLexer, "els");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("els", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll5907()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("reA");
    AphidLexerTests.TokenizeAll(aphidLexer, "reA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("reA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll19203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tr[");
    AphidLexerTests.TokenizeAll(aphidLexer, "tr[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tr[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll38103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("co");
    AphidLexerTests.TokenizeAll(aphidLexer, "co");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("co", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll3205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extend");
    AphidLexerTests.TokenizeAll(aphidLexer, "extend");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extend", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll77306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extend\0\0\0\0\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "extend\0\0\0\0\0\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extend\0\0\0\0\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll45007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extenda");
    AphidLexerTests.TokenizeAll(aphidLexer, "extenda");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extenda", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21207()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "con0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("con0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll85103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extend\0\0\0\0\0\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "extend\0\0\0\0\0\0\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extend\0\0\0\0\0\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tru\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "tru\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tru\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11309()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ext");
    AphidLexerTests.TokenizeAll(aphidLexer, "ext");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ext", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll48905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whia");
    AphidLexerTests.TokenizeAll(aphidLexer, "whia");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll3906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finala");
    AphidLexerTests.TokenizeAll(aphidLexer, "finala");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("finala", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continuea0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continuea0\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continuea0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll34401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0b\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0b\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0b\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0b1");
    AphidLexerTests.TokenizeAll(aphidLexer, "0b1");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0b1", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0b0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0b0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0b0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll97401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("using0");
    AphidLexerTests.TokenizeAll(aphidLexer, "using0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("using0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll94902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usingA");
    AphidLexerTests.TokenizeAll(aphidLexer, "usingA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usingA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usinga");
    AphidLexerTests.TokenizeAll(aphidLexer, "usinga");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usinga", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll27201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("using");
    AphidLexerTests.TokenizeAll(aphidLexer, "using");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("using", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("using_");
    AphidLexerTests.TokenizeAll(aphidLexer, "using_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("using_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll93003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usingýA");
    AphidLexerTests.TokenizeAll(aphidLexer, "usingýA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usingýA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62710()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usingA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "usingA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usingA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll53301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extend{");
    AphidLexerTests.TokenizeAll(aphidLexer, "extend{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extend{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74207()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("br\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "br\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("br\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll81002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continuea\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continuea\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continuea\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throwa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "throwa\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("throwa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll49501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("trAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "trAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("trAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll61105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("el{");
    AphidLexerTests.TokenizeAll(aphidLexer, "el{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("el{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll37805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extenA");
    AphidLexerTests.TokenizeAll(aphidLexer, "extenA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extenA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/*\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "/*\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/*\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll57503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/**");
    AphidLexerTests.TokenizeAll(aphidLexer, "/**");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/**", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("final{");
    AphidLexerTests.TokenizeAll(aphidLexer, "final{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("final{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll76901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fo0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fo0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fo0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll14703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fia");
    AphidLexerTests.TokenizeAll(aphidLexer, "fia");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll843()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catcha");
    AphidLexerTests.TokenizeAll(aphidLexer, "catcha");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catcha", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catch");
    AphidLexerTests.TokenizeAll(aphidLexer, "catch");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catch", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catchA");
    AphidLexerTests.TokenizeAll(aphidLexer, "catchA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catchA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll80603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catch0");
    AphidLexerTests.TokenizeAll(aphidLexer, "catch0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catch0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll94603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catch[");
    AphidLexerTests.TokenizeAll(aphidLexer, "catch[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catch[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catch_");
    AphidLexerTests.TokenizeAll(aphidLexer, "catch_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catch_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll18805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catch\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "catch\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catch\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll81801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("brea0");
    AphidLexerTests.TokenizeAll(aphidLexer, "brea0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("brea0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll53402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("els{");
    AphidLexerTests.TokenizeAll(aphidLexer, "els{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("els{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll86606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("foa");
    AphidLexerTests.TokenizeAll(aphidLexer, "foa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("foa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll50806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d0");
    AphidLexerTests.TokenizeAll(aphidLexer, "d0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("d0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("do0");
    AphidLexerTests.TokenizeAll(aphidLexer, "do0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("do0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usa");
    AphidLexerTests.TokenizeAll(aphidLexer, "usa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll64901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extend");
    AphidLexerTests.TokenizeAll(aphidLexer, "extend");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extend", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll99009()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swi_");
    AphidLexerTests.TokenizeAll(aphidLexer, "swi_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swi_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll71105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "re\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("re\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll20403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nua");
    AphidLexerTests.TokenizeAll(aphidLexer, "nua");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thr_");
    AphidLexerTests.TokenizeAll(aphidLexer, "thr_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thr_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll27105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E\00");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E\00");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0E\00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll68611()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catc0");
    AphidLexerTests.TokenizeAll(aphidLexer, "catc0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catc0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll68503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loûA");
    AphidLexerTests.TokenizeAll(aphidLexer, "loûA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loûA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11808()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lock\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "lock\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lock\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll06()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lock[");
    AphidLexerTests.TokenizeAll(aphidLexer, "lock[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lock[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll12505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("locka");
    AphidLexerTests.TokenizeAll(aphidLexer, "locka");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("locka", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll80507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lock{");
    AphidLexerTests.TokenizeAll(aphidLexer, "lock{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lock{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll19910()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("locka");
    AphidLexerTests.TokenizeAll(aphidLexer, "locka");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("locka", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lock_");
    AphidLexerTests.TokenizeAll(aphidLexer, "lock_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lock_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll63203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thro0");
    AphidLexerTests.TokenizeAll(aphidLexer, "thro0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thro0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll38903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defiA");
    AphidLexerTests.TokenizeAll(aphidLexer, "defiA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swa");
    AphidLexerTests.TokenizeAll(aphidLexer, "swa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delea");
    AphidLexerTests.TokenizeAll(aphidLexer, "delea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("delea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll30104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lock");
    AphidLexerTests.TokenizeAll(aphidLexer, "lock");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lock", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("faA");
    AphidLexerTests.TokenizeAll(aphidLexer, "faA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("faA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defaA");
    AphidLexerTests.TokenizeAll(aphidLexer, "defaA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lo[");
    AphidLexerTests.TokenizeAll(aphidLexer, "lo[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lo[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fiA");
    AphidLexerTests.TokenizeAll(aphidLexer, "fiA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usinA");
    AphidLexerTests.TokenizeAll(aphidLexer, "usinA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usinA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll45403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("newa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "newa\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("newa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll31703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("caA");
    AphidLexerTests.TokenizeAll(aphidLexer, "caA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("caA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll10404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lock0");
    AphidLexerTests.TokenizeAll(aphidLexer, "lock0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lock0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whilea");
    AphidLexerTests.TokenizeAll(aphidLexer, "whilea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whilea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll71604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whileA");
    AphidLexerTests.TokenizeAll(aphidLexer, "whileA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whileA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll44005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("while0");
    AphidLexerTests.TokenizeAll(aphidLexer, "while0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("while0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll66303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("while");
    AphidLexerTests.TokenizeAll(aphidLexer, "while");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("while", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll82503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("while_");
    AphidLexerTests.TokenizeAll(aphidLexer, "while_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("while_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll22102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l0");
    AphidLexerTests.TokenizeAll(aphidLexer, "l0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("l0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ex\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ex\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll13403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defin{");
    AphidLexerTests.TokenizeAll(aphidLexer, "defin{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defin{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whileýa");
    AphidLexerTests.TokenizeAll(aphidLexer, "whileýa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whileýa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll63601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r[");
    AphidLexerTests.TokenizeAll(aphidLexer, "r[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("r[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll2104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("try");
    AphidLexerTests.TokenizeAll(aphidLexer, "try");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("try", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("el");
    AphidLexerTests.TokenizeAll(aphidLexer, "el");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("el", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whilea\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "whilea\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whilea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58008()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falsa");
    AphidLexerTests.TokenizeAll(aphidLexer, "falsa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("falsa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll5703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E\000");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E\000");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0E\000", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll44106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cont0");
    AphidLexerTests.TokenizeAll(aphidLexer, "cont0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cont0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll19911()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tA");
    AphidLexerTests.TokenizeAll(aphidLexer, "tA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll32803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wha");
    AphidLexerTests.TokenizeAll(aphidLexer, "wha");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("wha", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll229()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("iA");
    AphidLexerTests.TokenizeAll(aphidLexer, "iA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("iA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll89003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cona");
    AphidLexerTests.TokenizeAll(aphidLexer, "cona");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cona", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll59202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("null\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "null\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("null\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll22603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("null[");
    AphidLexerTests.TokenizeAll(aphidLexer, "null[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("null[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nulla");
    AphidLexerTests.TokenizeAll(aphidLexer, "nulla");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nulla", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("null{");
    AphidLexerTests.TokenizeAll(aphidLexer, "null{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("null{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35312()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("null\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "null\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("null\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("null_");
    AphidLexerTests.TokenizeAll(aphidLexer, "null_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("null_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll19601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("final");
    AphidLexerTests.TokenizeAll(aphidLexer, "final");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("final", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "finaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("finaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("def<");
    AphidLexerTests.TokenizeAll(aphidLexer, "def<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("def<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thisA");
    AphidLexerTests.TokenizeAll(aphidLexer, "thisA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thisA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll77705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fora");
    AphidLexerTests.TokenizeAll(aphidLexer, "fora");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fora", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("forA");
    AphidLexerTests.TokenizeAll(aphidLexer, "forA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("forA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91008()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("for[");
    AphidLexerTests.TokenizeAll(aphidLexer, "for[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("for[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll32307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("for0");
    AphidLexerTests.TokenizeAll(aphidLexer, "for0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("for0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("for{");
    AphidLexerTests.TokenizeAll(aphidLexer, "for{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("for{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75713()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("for");
    AphidLexerTests.TokenizeAll(aphidLexer, "for");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("for", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("for\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "for\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("for\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll12101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("for_");
    AphidLexerTests.TokenizeAll(aphidLexer, "for_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("for_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fora");
    AphidLexerTests.TokenizeAll(aphidLexer, "fora");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fora", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll57004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("br0");
    AphidLexerTests.TokenizeAll(aphidLexer, "br0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("br0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll81403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ba\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ba\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ba\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll5503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nuA");
    AphidLexerTests.TokenizeAll(aphidLexer, "nuA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nuA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll96206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falseýA");
    AphidLexerTests.TokenizeAll(aphidLexer, "falseýA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("falseýA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll2505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falseA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "falseA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("falseA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extea");
    AphidLexerTests.TokenizeAll(aphidLexer, "extea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75008()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("retA");
    AphidLexerTests.TokenizeAll(aphidLexer, "retA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("retA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll5104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ret0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ret0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ret0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll26905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ret:");
    AphidLexerTests.TokenizeAll(aphidLexer, "ret:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ret:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll33901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("reta");
    AphidLexerTests.TokenizeAll(aphidLexer, "reta");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("reta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll30705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ret{");
    AphidLexerTests.TokenizeAll(aphidLexer, "ret{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ret{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll99508()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ret");
    AphidLexerTests.TokenizeAll(aphidLexer, "ret");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ret", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ret\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ret\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ret\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll314()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ret_");
    AphidLexerTests.TokenizeAll(aphidLexer, "ret_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ret_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("reta");
    AphidLexerTests.TokenizeAll(aphidLexer, "reta");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("reta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll12305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("retA");
    AphidLexerTests.TokenizeAll(aphidLexer, "retA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("retA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll95409()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("reta\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "reta\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("reta\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll3103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swi");
    AphidLexerTests.TokenizeAll(aphidLexer, "swi");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defin");
    AphidLexerTests.TokenizeAll(aphidLexer, "defin");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catchýa");
    AphidLexerTests.TokenizeAll(aphidLexer, "catchýa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catchýa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll12306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exA");
    AphidLexerTests.TokenizeAll(aphidLexer, "exA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa0a");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa0a");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loa0a", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll85205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sw0");
    AphidLexerTests.TokenizeAll(aphidLexer, "sw0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("sw0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll81003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ca0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ca0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ca0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex[");
    AphidLexerTests.TokenizeAll(aphidLexer, "ex[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ex[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll76201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("if\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "if\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("if\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("if0");
    AphidLexerTests.TokenizeAll(aphidLexer, "if0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("if0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ifa");
    AphidLexerTests.TokenizeAll(aphidLexer, "ifa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ifa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll66203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("if{");
    AphidLexerTests.TokenizeAll(aphidLexer, "if{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("if{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ifA");
    AphidLexerTests.TokenizeAll(aphidLexer, "ifA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ifA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll19404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("if");
    AphidLexerTests.TokenizeAll(aphidLexer, "if");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("if", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("if\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "if\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("if\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll27505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("if_");
    AphidLexerTests.TokenizeAll(aphidLexer, "if_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("if_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ifa");
    AphidLexerTests.TokenizeAll(aphidLexer, "ifa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ifa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll98904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ifa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ifa\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ifa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lockA");
    AphidLexerTests.TokenizeAll(aphidLexer, "lockA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lockA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll89505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tru<");
    AphidLexerTests.TokenizeAll(aphidLexer, "tru<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tru<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll45008()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("contiý0");
    AphidLexerTests.TokenizeAll(aphidLexer, "contiý0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("contiý0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("contiA");
    AphidLexerTests.TokenizeAll(aphidLexer, "contiA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("contiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21608()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("true0");
    AphidLexerTests.TokenizeAll(aphidLexer, "true0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("true0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll17403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ina\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ina\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ina\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll96207()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f[");
    AphidLexerTests.TokenizeAll(aphidLexer, "f[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("f[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0x\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0x\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0x\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24411()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0x0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0x0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0x0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll44703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0x:");
    AphidLexerTests.TokenizeAll(aphidLexer, "0x:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0x:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll457()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0xz");
    AphidLexerTests.TokenizeAll(aphidLexer, "0xz");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0xz", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41309()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0xA");
    AphidLexerTests.TokenizeAll(aphidLexer, "0xA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0xA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin[");
    AphidLexerTests.TokenizeAll(aphidLexer, "fin[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fin[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll38204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E\000\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E\000\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0E\000\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll88706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usin0");
    AphidLexerTests.TokenizeAll(aphidLexer, "usin0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usin0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll5005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("if{");
    AphidLexerTests.TokenizeAll(aphidLexer, "if{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("if{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll79203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("in0");
    AphidLexerTests.TokenizeAll(aphidLexer, "in0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("in0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("us0");
    AphidLexerTests.TokenizeAll(aphidLexer, "us0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("us0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll77901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l{");
    AphidLexerTests.TokenizeAll(aphidLexer, "l{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("l{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll80508()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("t{");
    AphidLexerTests.TokenizeAll(aphidLexer, "t{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("t{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll45601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delete");
    AphidLexerTests.TokenizeAll(aphidLexer, "delete");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("delete", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll48401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delete\0\0\0\0\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "delete\0\0\0\0\0\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("delete\0\0\0\0\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll49903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deletea");
    AphidLexerTests.TokenizeAll(aphidLexer, "deletea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("deletea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll96308()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58009()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fa0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usA");
    AphidLexerTests.TokenizeAll(aphidLexer, "usA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll14902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("trya\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "trya\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("trya\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll72601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deletý0");
    AphidLexerTests.TokenizeAll(aphidLexer, "deletý0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("deletý0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll34705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deletA");
    AphidLexerTests.TokenizeAll(aphidLexer, "deletA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("deletA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll39703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("for0");
    AphidLexerTests.TokenizeAll(aphidLexer, "for0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("for0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll57605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E\01.\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E\01.\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0E\01.\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll50807()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E\01.:");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E\01.:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0E\01.:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60611()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("doA");
    AphidLexerTests.TokenizeAll(aphidLexer, "doA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("doA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll45009()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d{");
    AphidLexerTests.TokenizeAll(aphidLexer, "d{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("d{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll84406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re0");
    AphidLexerTests.TokenizeAll(aphidLexer, "re0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("re0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("foA");
    AphidLexerTests.TokenizeAll(aphidLexer, "foA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("foA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll18104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breakýa");
    AphidLexerTests.TokenizeAll(aphidLexer, "breakýa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("breakýa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll97603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("del");
    AphidLexerTests.TokenizeAll(aphidLexer, "del");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("del", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delet<");
    AphidLexerTests.TokenizeAll(aphidLexer, "delet<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("delet<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91009()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("load\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "load\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("load\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll59203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loada");
    AphidLexerTests.TokenizeAll(aphidLexer, "loada");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loada", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("load{");
    AphidLexerTests.TokenizeAll(aphidLexer, "load{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("load{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll64305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("load_");
    AphidLexerTests.TokenizeAll(aphidLexer, "load_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("load_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("load0");
    AphidLexerTests.TokenizeAll(aphidLexer, "load0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("load0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll30003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loadA");
    AphidLexerTests.TokenizeAll(aphidLexer, "loadA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loadA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("load\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "load\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("load\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falsA");
    AphidLexerTests.TokenizeAll(aphidLexer, "falsA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("falsA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll19204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deleA");
    AphidLexerTests.TokenizeAll(aphidLexer, "deleA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("deleA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll30706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defi0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defi0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defi0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catc\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "catc\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catc\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switcA");
    AphidLexerTests.TokenizeAll(aphidLexer, "switcA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switcA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll57701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deletea\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "deletea\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("deletea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll93403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breaka\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "breaka\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("breaka\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll12201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "breaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("breaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll53203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swA");
    AphidLexerTests.TokenizeAll(aphidLexer, "swA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll38205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0b00");
    AphidLexerTests.TokenizeAll(aphidLexer, "0b00");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0b00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll7601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w<");
    AphidLexerTests.TokenizeAll(aphidLexer, "w<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("w<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll95301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switch[");
    AphidLexerTests.TokenizeAll(aphidLexer, "switch[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switch[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switch");
    AphidLexerTests.TokenizeAll(aphidLexer, "switch");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switch", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40811()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switch\0\0\0\0\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "switch\0\0\0\0\0\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switch\0\0\0\0\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switcha");
    AphidLexerTests.TokenizeAll(aphidLexer, "switcha");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switcha", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll54102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("t");
    AphidLexerTests.TokenizeAll(aphidLexer, "t");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("t", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("l");
    AphidLexerTests.TokenizeAll(aphidLexer, "l");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("l", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll7304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0b0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0b0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0b0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll2703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delete{");
    AphidLexerTests.TokenizeAll(aphidLexer, "delete{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("delete{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll66005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wh0");
    AphidLexerTests.TokenizeAll(aphidLexer, "wh0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("wh0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll36901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("if");
    AphidLexerTests.TokenizeAll(aphidLexer, "if");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("if", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll34203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E-00\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E-00\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0E-00\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll34505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finaA");
    AphidLexerTests.TokenizeAll(aphidLexer, "finaA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("finaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll27606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usi[");
    AphidLexerTests.TokenizeAll(aphidLexer, "usi[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usi[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll49205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre[");
    AphidLexerTests.TokenizeAll(aphidLexer, "bre[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("bre[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll84407()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thr÷A\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "thr÷A\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thr÷A\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll2007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thi\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "thi\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thi\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll48205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whi÷A\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "whi÷A\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whi÷A\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll98905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("rA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "rA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("rA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll93206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loc÷A\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "loc÷A\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loc÷A\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll12506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loca");
    AphidLexerTests.TokenizeAll(aphidLexer, "loca");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll61503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tru0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "tru0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tru0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll28201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("truea");
    AphidLexerTests.TokenizeAll(aphidLexer, "truea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("truea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll7305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("br{");
    AphidLexerTests.TokenizeAll(aphidLexer, "br{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("br{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0x0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0x0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0x0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll61905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("definA");
    AphidLexerTests.TokenizeAll(aphidLexer, "definA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("definA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11809()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sw{");
    AphidLexerTests.TokenizeAll(aphidLexer, "sw{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("sw{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("forA");
    AphidLexerTests.TokenizeAll(aphidLexer, "forA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("forA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll81303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "delaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("delaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switc{");
    AphidLexerTests.TokenizeAll(aphidLexer, "switc{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switc{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de[");
    AphidLexerTests.TokenizeAll(aphidLexer, "de[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("de[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll3206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("trua");
    AphidLexerTests.TokenizeAll(aphidLexer, "trua");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("trua", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23008()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fo{");
    AphidLexerTests.TokenizeAll(aphidLexer, "fo{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fo{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll57005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delet[");
    AphidLexerTests.TokenizeAll(aphidLexer, "delet[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("delet[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finbA");
    AphidLexerTests.TokenizeAll(aphidLexer, "finbA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("finbA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switch{");
    AphidLexerTests.TokenizeAll(aphidLexer, "switch{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switch{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll38301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d");
    AphidLexerTests.TokenizeAll(aphidLexer, "d");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("d", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll85903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("saa");
    AphidLexerTests.TokenizeAll(aphidLexer, "saa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("saa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll99801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elsea");
    AphidLexerTests.TokenizeAll(aphidLexer, "elsea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("elsea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll94903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("do{");
    AphidLexerTests.TokenizeAll(aphidLexer, "do{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("do{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continu{");
    AphidLexerTests.TokenizeAll(aphidLexer, "continu{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continu{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finalý0");
    AphidLexerTests.TokenizeAll(aphidLexer, "finalý0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("finalý0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42107()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("in{");
    AphidLexerTests.TokenizeAll(aphidLexer, "in{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("in{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fba");
    AphidLexerTests.TokenizeAll(aphidLexer, "fba");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fba", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll81203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finalA");
    AphidLexerTests.TokenizeAll(aphidLexer, "finalA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("finalA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll67403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delete");
    AphidLexerTests.TokenizeAll(aphidLexer, "delete");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("delete", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll27106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("trueA");
    AphidLexerTests.TokenizeAll(aphidLexer, "trueA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("trueA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continuaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "continuaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continuaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll59507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switcý0");
    AphidLexerTests.TokenizeAll(aphidLexer, "switcý0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switcý0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll54701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switc");
    AphidLexerTests.TokenizeAll(aphidLexer, "switc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21609()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tr{");
    AphidLexerTests.TokenizeAll(aphidLexer, "tr{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tr{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll64104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ea");
    AphidLexerTests.TokenizeAll(aphidLexer, "ea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll64705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deleteA");
    AphidLexerTests.TokenizeAll(aphidLexer, "deleteA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("deleteA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll1803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whilA");
    AphidLexerTests.TokenizeAll(aphidLexer, "whilA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whilA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll45505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tr");
    AphidLexerTests.TokenizeAll(aphidLexer, "tr");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tr", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wh[");
    AphidLexerTests.TokenizeAll(aphidLexer, "wh[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("wh[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll18105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extend0");
    AphidLexerTests.TokenizeAll(aphidLexer, "extend0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extend0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defauý0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defauý0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defauý0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b0");
    AphidLexerTests.TokenizeAll(aphidLexer, "b0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("b0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nu[");
    AphidLexerTests.TokenizeAll(aphidLexer, "nu[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nu[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll22805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("for");
    AphidLexerTests.TokenizeAll(aphidLexer, "for");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("for", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll72903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("us{");
    AphidLexerTests.TokenizeAll(aphidLexer, "us{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("us{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll98203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usiaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "usiaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usiaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll48803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sw");
    AphidLexerTests.TokenizeAll(aphidLexer, "sw");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("sw", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extae");
    AphidLexerTests.TokenizeAll(aphidLexer, "extae");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extae", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("this0");
    AphidLexerTests.TokenizeAll(aphidLexer, "this0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("this0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll77307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finba");
    AphidLexerTests.TokenizeAll(aphidLexer, "finba");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("finba", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90109()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defa");
    AphidLexerTests.TokenizeAll(aphidLexer, "defa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll34604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lo{");
    AphidLexerTests.TokenizeAll(aphidLexer, "lo{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lo{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll71007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e<");
    AphidLexerTests.TokenizeAll(aphidLexer, "e<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("e<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll84703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("u{");
    AphidLexerTests.TokenizeAll(aphidLexer, "u{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("u{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll50104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ret0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ret0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ret0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll51201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loa0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6907()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("us");
    AphidLexerTests.TokenizeAll(aphidLexer, "us");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("us", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("eA");
    AphidLexerTests.TokenizeAll(aphidLexer, "eA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("eA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c[");
    AphidLexerTests.TokenizeAll(aphidLexer, "c[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("c[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll56605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delet0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "delet0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("delet0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll96309()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("n[");
    AphidLexerTests.TokenizeAll(aphidLexer, "n[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("n[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69707()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bA");
    AphidLexerTests.TokenizeAll(aphidLexer, "bA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("bA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll12705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swiaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "swiaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swiaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll36703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elseA");
    AphidLexerTests.TokenizeAll(aphidLexer, "elseA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("elseA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll86403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de{");
    AphidLexerTests.TokenizeAll(aphidLexer, "de{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("de{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll93207()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thaA");
    AphidLexerTests.TokenizeAll(aphidLexer, "thaA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll32508()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("faaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "faaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("faaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24009()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e[");
    AphidLexerTests.TokenizeAll(aphidLexer, "e[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("e[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll63103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("in");
    AphidLexerTests.TokenizeAll(aphidLexer, "in");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("in", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll33703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conti0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "conti0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("conti0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll73003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "falaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("falaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23009()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("do");
    AphidLexerTests.TokenizeAll(aphidLexer, "do");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("do", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll97210()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("reaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "reaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("reaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "exaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll19405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nul");
    AphidLexerTests.TokenizeAll(aphidLexer, "nul");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nul", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91308()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "whaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll57006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0x00");
    AphidLexerTests.TokenizeAll(aphidLexer, "0x00");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0x00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll59604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defaua\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defaua\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defaua\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll82504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usingAa");
    AphidLexerTests.TokenizeAll(aphidLexer, "usingAa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usingAa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll52102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi[");
    AphidLexerTests.TokenizeAll(aphidLexer, "fi[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fi[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll4201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b[");
    AphidLexerTests.TokenizeAll(aphidLexer, "b[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("b[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70012()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switcA\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "switcA\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switcA\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll85403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("this");
    AphidLexerTests.TokenizeAll(aphidLexer, "this");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("this", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll30707()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defA");
    AphidLexerTests.TokenizeAll(aphidLexer, "defA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll64401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi{");
    AphidLexerTests.TokenizeAll(aphidLexer, "fi{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fi{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll97807()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conti00");
    AphidLexerTests.TokenizeAll(aphidLexer, "conti00");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("conti00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29809()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ca[");
    AphidLexerTests.TokenizeAll(aphidLexer, "ca[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ca[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll13304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("caaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "caaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("caaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fo");
    AphidLexerTests.TokenizeAll(aphidLexer, "fo");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fo", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lo");
    AphidLexerTests.TokenizeAll(aphidLexer, "lo");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lo", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fiaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "fiaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fiaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll3207()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("daa");
    AphidLexerTests.TokenizeAll(aphidLexer, "daa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("daa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll259()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loA0");
    AphidLexerTests.TokenizeAll(aphidLexer, "loA0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loA0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nulaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "nulaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nulaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21709()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi");
    AphidLexerTests.TokenizeAll(aphidLexer, "fi");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defina\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defina\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defina\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("uaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "uaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("uaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll27107()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cont\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "cont\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cont\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switch0");
    AphidLexerTests.TokenizeAll(aphidLexer, "switch0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switch0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "thaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll50601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cba");
    AphidLexerTests.TokenizeAll(aphidLexer, "cba");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cba", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll66801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nu{");
    AphidLexerTests.TokenizeAll(aphidLexer, "nu{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nu{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "deaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("deaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll27607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("braa");
    AphidLexerTests.TokenizeAll(aphidLexer, "braa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("braa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll78101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{c");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{c");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{c", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continu");
    AphidLexerTests.TokenizeAll(aphidLexer, "continu");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continu", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre");
    AphidLexerTests.TokenizeAll(aphidLexer, "bre");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("bre", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exteA");
    AphidLexerTests.TokenizeAll(aphidLexer, "exteA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exteA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll13106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loc");
    AphidLexerTests.TokenizeAll(aphidLexer, "loc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll13801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("u");
    AphidLexerTests.TokenizeAll(aphidLexer, "u");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("u", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nu");
    AphidLexerTests.TokenizeAll(aphidLexer, "nu");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nu", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll26803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defba");
    AphidLexerTests.TokenizeAll(aphidLexer, "defba");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defba", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll13601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{cc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{cc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{cc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll8505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("iaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "iaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("iaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75009()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thiaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "thiaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thiaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll96701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con[");
    AphidLexerTests.TokenizeAll(aphidLexer, "con[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("con[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll88707()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "nA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll53403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa[");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fa[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll38503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("foaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "foaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("foaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catcha\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "catcha\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catcha\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll80907()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elsae");
    AphidLexerTests.TokenizeAll(aphidLexer, "elsae");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("elsae", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll3907()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nulla");
    AphidLexerTests.TokenizeAll(aphidLexer, "nulla");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nulla", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll58407()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{ca");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{ca");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{ca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fal0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fal0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fal0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll12507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delet{");
    AphidLexerTests.TokenizeAll(aphidLexer, "delet{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("delet{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "elaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("elaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w{");
    AphidLexerTests.TokenizeAll(aphidLexer, "w{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("w{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delet");
    AphidLexerTests.TokenizeAll(aphidLexer, "delet");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("delet", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll10405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switchA");
    AphidLexerTests.TokenizeAll(aphidLexer, "switchA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switchA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll59701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ra");
    AphidLexerTests.TokenizeAll(aphidLexer, "ra");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("definý0");
    AphidLexerTests.TokenizeAll(aphidLexer, "definý0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("definý0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll57905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nuaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "nuaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nuaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{c{");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{c{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{c{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("waa");
    AphidLexerTests.TokenizeAll(aphidLexer, "waa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("waa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll2105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("coaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "coaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("coaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll17003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continue{");
    AphidLexerTests.TokenizeAll(aphidLexer, "continue{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continue{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll56403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breba");
    AphidLexerTests.TokenizeAll(aphidLexer, "breba");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("breba", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "swaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nAa");
    AphidLexerTests.TokenizeAll(aphidLexer, "nAa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nAa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll79605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tru");
    AphidLexerTests.TokenizeAll(aphidLexer, "tru");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tru", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll39405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catac");
    AphidLexerTests.TokenizeAll(aphidLexer, "catac");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catac", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll79804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extenda\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "extenda\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extenda\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll65201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lock");
    AphidLexerTests.TokenizeAll(aphidLexer, "lock");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lock", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90807()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("eaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "eaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("eaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll85307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("true");
    AphidLexerTests.TokenizeAll(aphidLexer, "true");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("true", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62711()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switchA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "switchA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switchA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll59605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defin0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defin0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defin0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll88308()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("else");
    AphidLexerTests.TokenizeAll(aphidLexer, "else");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("else", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll98501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extenA\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "extenA\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extenA\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll27403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("null");
    AphidLexerTests.TokenizeAll(aphidLexer, "null");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("null", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll30202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("laa");
    AphidLexerTests.TokenizeAll(aphidLexer, "laa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("laa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll5105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("br");
    AphidLexerTests.TokenizeAll(aphidLexer, "br");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("br", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll79403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "usaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ret");
    AphidLexerTests.TokenizeAll(aphidLexer, "ret");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ret", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finala\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "finala\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("finala\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con");
    AphidLexerTests.TokenizeAll(aphidLexer, "con");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("con", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70013()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("neaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "neaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("neaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll50003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("null0A");
    AphidLexerTests.TokenizeAll(aphidLexer, "null0A");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("null0A", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40812()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extendaA");
    AphidLexerTests.TokenizeAll(aphidLexer, "extendaA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extendaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35313()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0b00\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0b00\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0b00\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll86404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0xa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0xa\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0xa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25707()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switch0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "switch0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switch0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extea\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "extea\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll5407()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switch");
    AphidLexerTests.TokenizeAll(aphidLexer, "switch");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switch", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll32509()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nA{");
    AphidLexerTests.TokenizeAll(aphidLexer, "nA{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nA{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll89207()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("brea0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "brea0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("brea0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll37205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{cac");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{cac");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{cac", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("retaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "retaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("retaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usin[");
    AphidLexerTests.TokenizeAll(aphidLexer, "usin[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usin[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("else0");
    AphidLexerTests.TokenizeAll(aphidLexer, "else0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("else0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll49803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b{");
    AphidLexerTests.TokenizeAll(aphidLexer, "b{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("b{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll2301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whi");
    AphidLexerTests.TokenizeAll(aphidLexer, "whi");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll64005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continue\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continue\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continue\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll95505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0b01\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0b01\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0b01\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll2201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r{");
    AphidLexerTests.TokenizeAll(aphidLexer, "r{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("r{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll97211()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defau0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defau0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defau0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll10803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{cat");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{cat");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{cat", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll87101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extenA0");
    AphidLexerTests.TokenizeAll(aphidLexer, "extenA0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extenA0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{catc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{catc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{catc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll44903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throwýA");
    AphidLexerTests.TokenizeAll(aphidLexer, "throwýA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("throwýA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62810()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breaA");
    AphidLexerTests.TokenizeAll(aphidLexer, "breaA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("breaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll71605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nA");
    AphidLexerTests.TokenizeAll(aphidLexer, "nA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll31505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("baa");
    AphidLexerTests.TokenizeAll(aphidLexer, "baa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("baa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r");
    AphidLexerTests.TokenizeAll(aphidLexer, "r");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("r", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll18806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{conticc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{conticc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{conticc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll983()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{contin");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{contin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{cat\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{cat\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{cat\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll12307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thro0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "thro0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thro0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de");
    AphidLexerTests.TokenizeAll(aphidLexer, "de");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("de", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83107()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{continc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{continc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{continc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{contin{");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{contin{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25311()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{contin");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{contin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll89603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{contin\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{contin\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{contin0");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{contin0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll45801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{continA");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{continA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{continA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{continac");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{continac");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{continac", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{contin_");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{contin_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll79005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{contincc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{contincc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{contincc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll22103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{contin{");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{contin{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll89105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{contin");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{contin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll79805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thra");
    AphidLexerTests.TokenizeAll(aphidLexer, "thra");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thr");
    AphidLexerTests.TokenizeAll(aphidLexer, "thr");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thr", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll38703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("w");
    AphidLexerTests.TokenizeAll(aphidLexer, "w");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("w", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fals0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fals0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fals0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll56904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whiaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "whiaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whiaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll33801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delete0");
    AphidLexerTests.TokenizeAll(aphidLexer, "delete0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("delete0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll28805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b");
    AphidLexerTests.TokenizeAll(aphidLexer, "b");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("b", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll30105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{catchcc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{catchcc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{catchcc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll66101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("doaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "doaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("doaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll50407()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dele");
    AphidLexerTests.TokenizeAll(aphidLexer, "dele");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("dele", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll71803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ifaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "ifaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ifaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defaa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defaa\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defaa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ext");
    AphidLexerTests.TokenizeAll(aphidLexer, "ext");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ext", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll88309()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delea\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "delea\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("delea\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{cccccc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{cccccc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{cccccc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll54201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s{");
    AphidLexerTests.TokenizeAll(aphidLexer, "s{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("s{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nullaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "nullaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nullaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catca\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "catca\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catca\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll78301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("def[");
    AphidLexerTests.TokenizeAll(aphidLexer, "def[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("def[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nullAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "nullAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nullAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll30601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finaa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "finaa\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("finaa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thisaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "thisaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thisaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll8003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elsAa");
    AphidLexerTests.TokenizeAll(aphidLexer, "elsAa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("elsAa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loaaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "loaaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loaaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll56905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "loAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll45105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{cont\0cc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{cont\0cc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{cont\0cc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll8205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switc_");
    AphidLexerTests.TokenizeAll(aphidLexer, "switc_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switc_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll7509()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defi0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defi0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defi0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("load`");
    AphidLexerTests.TokenizeAll(aphidLexer, "load`");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("load`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll57007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{contacc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{contacc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{contacc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thisAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "thisAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thisAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll52103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("newaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "newaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("newaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll86405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exteaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "exteaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exteaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23907()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{contA");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{contA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{contA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll84207()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thro0A");
    AphidLexerTests.TokenizeAll(aphidLexer, "thro0A");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thro0A", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll86607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deleaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "deleaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("deleaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll32705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lock0a");
    AphidLexerTests.TokenizeAll(aphidLexer, "lock0a");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lock0a", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll32001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usi");
    AphidLexerTests.TokenizeAll(aphidLexer, "usi");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll31305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loadaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "loadaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loadaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll82505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finaaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "finaaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("finaaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll34605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whileaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "whileaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whileaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll39003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whilea{");
    AphidLexerTests.TokenizeAll(aphidLexer, "whilea{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whilea{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catchaA");
    AphidLexerTests.TokenizeAll(aphidLexer, "catchaA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catchaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll86805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "nAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll56303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("inaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "inaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("inaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll13107()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("null00");
    AphidLexerTests.TokenizeAll(aphidLexer, "null00");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("null00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll80509()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usingAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "usingAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usingAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s");
    AphidLexerTests.TokenizeAll(aphidLexer, "s");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("s", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll86003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("//\0\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "//\0\0\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("//\0\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11407()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extenAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "extenAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extenAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll85801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catcha0");
    AphidLexerTests.TokenizeAll(aphidLexer, "catcha0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catcha0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loba");
    AphidLexerTests.TokenizeAll(aphidLexer, "loba");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loba", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll44107()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e{");
    AphidLexerTests.TokenizeAll(aphidLexer, "e{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("e{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll51003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("foraa");
    AphidLexerTests.TokenizeAll(aphidLexer, "foraa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("foraa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll89705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fora\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fora\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fora\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll39103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falseAa");
    AphidLexerTests.TokenizeAll(aphidLexer, "falseAa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("falseAa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll26505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catcha[");
    AphidLexerTests.TokenizeAll(aphidLexer, "catcha[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catcha[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switchAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "switchAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switchAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll52903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defi0[");
    AphidLexerTests.TokenizeAll(aphidLexer, "defi0[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defi0[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continuaA\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continuaA\0\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continuaA\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll61407()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("definaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "definaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("definaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll50105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tryaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "tryaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tryaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62811()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("trueaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "trueaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("trueaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll52003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defia");
    AphidLexerTests.TokenizeAll(aphidLexer, "defia");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll19803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extenda_\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "extenda_\0\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extenda_\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40813()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lock00");
    AphidLexerTests.TokenizeAll(aphidLexer, "lock00");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lock00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47907()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delete0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "delete0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("delete0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wh{");
    AphidLexerTests.TokenizeAll(aphidLexer, "wh{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("wh{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll99509()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa[");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loa[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll93903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usingA0");
    AphidLexerTests.TokenizeAll(aphidLexer, "usingA0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usingA0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90707()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i[");
    AphidLexerTests.TokenizeAll(aphidLexer, "i[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("i[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("final_");
    AphidLexerTests.TokenizeAll(aphidLexer, "final_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("final_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9809()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "e0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("e0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wh");
    AphidLexerTests.TokenizeAll(aphidLexer, "wh");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("wh", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll14903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thûA");
    AphidLexerTests.TokenizeAll(aphidLexer, "thûA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thûA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll19205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breaka0");
    AphidLexerTests.TokenizeAll(aphidLexer, "breaka0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("breaka0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll145()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("iaA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "iaA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("iaA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll37503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re[");
    AphidLexerTests.TokenizeAll(aphidLexer, "re[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("re[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breaka<");
    AphidLexerTests.TokenizeAll(aphidLexer, "breaka<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("breaka<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll27301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex{");
    AphidLexerTests.TokenizeAll(aphidLexer, "ex{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ex{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll54103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa{");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fa{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll87505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e");
    AphidLexerTests.TokenizeAll(aphidLexer, "e");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("e", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll34903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa");
    AphidLexerTests.TokenizeAll(aphidLexer, "fa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll20404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extea[");
    AphidLexerTests.TokenizeAll(aphidLexer, "extea[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extea[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll91309()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("laA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "laA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("laA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25407()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dȀ\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "dȀ\0\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("dȀ\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll18807()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("th0");
    AphidLexerTests.TokenizeAll(aphidLexer, "th0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("th0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll67303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usingA[");
    AphidLexerTests.TokenizeAll(aphidLexer, "usingA[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usingA[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll64105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("taa");
    AphidLexerTests.TokenizeAll(aphidLexer, "taa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("taa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83707()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throwaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "throwaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("throwaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll17303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whil[");
    AphidLexerTests.TokenizeAll(aphidLexer, "whil[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whil[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll13305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switcAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "switcAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switcAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll71403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exten0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "exten0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exten0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catca0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "catca0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catca0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll24412()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re{");
    AphidLexerTests.TokenizeAll(aphidLexer, "re{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("re{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll23702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fal[");
    AphidLexerTests.TokenizeAll(aphidLexer, "fal[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fal[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex");
    AphidLexerTests.TokenizeAll(aphidLexer, "ex");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ex", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll7102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whilea");
    AphidLexerTests.TokenizeAll(aphidLexer, "whilea");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whilea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9810()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("truaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "truaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("truaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll63304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("contA");
    AphidLexerTests.TokenizeAll(aphidLexer, "contA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("contA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll51004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f{");
    AphidLexerTests.TokenizeAll(aphidLexer, "f{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("f{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll98906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("raa");
    AphidLexerTests.TokenizeAll(aphidLexer, "raa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("raa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll45404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continu0\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continu0\0\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continu0\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll785()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("/*\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "/*\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("/*\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll28806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re");
    AphidLexerTests.TokenizeAll(aphidLexer, "re");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("re", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("taA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "taA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("taA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extenaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "extenaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extenaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll100()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("saA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "saA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("saA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll15602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thi");
    AphidLexerTests.TokenizeAll(aphidLexer, "thi");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("th[");
    AphidLexerTests.TokenizeAll(aphidLexer, "th[");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("th[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll68612()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("waa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "waa\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("waa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll33604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whila\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "whila\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whila\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exteA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "exteA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exteA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll36502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{cont\0catcac");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{cont\0catcac");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{cont\0catcac", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll54802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falseA{");
    AphidLexerTests.TokenizeAll(aphidLexer, "falseA{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("falseA{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62508()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{conta{co");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{conta{co");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{conta{co", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll44504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%>\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "%>\0\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("%>\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll95602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("else00");
    AphidLexerTests.TokenizeAll(aphidLexer, "else00");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("else00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll888()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deletAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "deletAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("deletAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll63802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extendþaa\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "extendþaa\0\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extendþaa\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll9206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f");
    AphidLexerTests.TokenizeAll(aphidLexer, "f");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("f", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll27202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throwa{");
    AphidLexerTests.TokenizeAll(aphidLexer, "throwa{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("throwa{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll21402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swita\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "swita\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swita\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll49206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0xA:");
    AphidLexerTests.TokenizeAll(aphidLexer, "0xA:");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0xA:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll53302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thro0A0");
    AphidLexerTests.TokenizeAll(aphidLexer, "thro0A0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thro0A0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll57402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falseA");
    AphidLexerTests.TokenizeAll(aphidLexer, "falseA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("falseA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll772()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defauaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "defauaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defauaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("final0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "final0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("final0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll7602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finaa0");
    AphidLexerTests.TokenizeAll(aphidLexer, "finaa0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("finaa0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll95410()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin÷A\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fin÷A\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fin÷A\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll56104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continueAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "continueAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continueAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll57702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("locaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "locaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("locaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0xAz");
    AphidLexerTests.TokenizeAll(aphidLexer, "0xAz");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0xAz", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll49502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deleteþaa\0\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "deleteþaa\0\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("deleteþaa\0\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll85602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fiA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fiA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fiA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll7804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{conta{coc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{conta{coc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{conta{coc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\'\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "\'\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("\'\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll87902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finalaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "finalaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("finalaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll707()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defaA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defaA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defaA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{conta{con");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{conta{con");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{conta{con", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll79806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("uA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "uA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("uA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll26702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thro0Aa");
    AphidLexerTests.TokenizeAll(aphidLexer, "thro0Aa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thro0Aa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll17304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("lockaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "lockaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("lockaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll81904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defin00");
    AphidLexerTests.TokenizeAll(aphidLexer, "defin00");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defin00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll25602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("nuA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "nuA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("nuA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll83108()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E000");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E000");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0E000", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll99706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thraa");
    AphidLexerTests.TokenizeAll(aphidLexer, "thraa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thraa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll13306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thro0A{");
    AphidLexerTests.TokenizeAll(aphidLexer, "thro0A{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thro0A{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll10406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E\0000");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E\0000");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0E\0000", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll264()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("th{");
    AphidLexerTests.TokenizeAll(aphidLexer, "th{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("th{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll719()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("th");
    AphidLexerTests.TokenizeAll(aphidLexer, "th");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("th", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thro0A");
    AphidLexerTests.TokenizeAll(aphidLexer, "thro0A");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thro0A", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0xAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "0xAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0xAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll63502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{conta{conc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{conta{conc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{conta{conc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll678()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{conta{cont");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{conta{cont");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{conta{cont", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll81905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{conta{contc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{conta{contc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{conta{contc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll277()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin");
    AphidLexerTests.TokenizeAll(aphidLexer, "fin");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throwa");
    AphidLexerTests.TokenizeAll(aphidLexer, "throwa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("throwa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll53506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("forA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "forA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("forA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{conta{continueccccc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{conta{continueccccc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{conta{continueccccc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll66304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extAa");
    AphidLexerTests.TokenizeAll(aphidLexer, "extAa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extAa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{cont\0caaac");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{cont\0caaac");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{cont\0caaac", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll57302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("traa");
    AphidLexerTests.TokenizeAll(aphidLexer, "traa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("traa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll988()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{conta{cont{");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{conta{cont{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{conta{cont{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11108()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elseAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "elseAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("elseAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll64504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "exA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll2704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "usA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defi00");
    AphidLexerTests.TokenizeAll(aphidLexer, "defi00");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defi00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll52104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usina");
    AphidLexerTests.TokenizeAll(aphidLexer, "usina");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll28602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fal");
    AphidLexerTests.TokenizeAll(aphidLexer, "fal");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fal", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll61306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("wa0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "wa0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("wa0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll6804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defau_");
    AphidLexerTests.TokenizeAll(aphidLexer, "defau_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defau_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll66006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exteAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "exteAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exteAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll30904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exten_");
    AphidLexerTests.TokenizeAll(aphidLexer, "exten_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exten_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll50201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("inA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "inA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("inA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("this00");
    AphidLexerTests.TokenizeAll(aphidLexer, "this00");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("this00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "bA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("bA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "thAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll35314()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switc0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "switc0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switc0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switA");
    AphidLexerTests.TokenizeAll(aphidLexer, "switA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47107()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delet00");
    AphidLexerTests.TokenizeAll(aphidLexer, "delet00");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("delet00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll497()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thro0AaA");
    AphidLexerTests.TokenizeAll(aphidLexer, "thro0AaA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thro0AaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "defa\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "elA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("elA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll56304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defina_");
    AphidLexerTests.TokenizeAll(aphidLexer, "defina_");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defina_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll13602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exten00");
    AphidLexerTests.TokenizeAll(aphidLexer, "exten00");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exten00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll47706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i{");
    AphidLexerTests.TokenizeAll(aphidLexer, "i{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("i{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll50106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i");
    AphidLexerTests.TokenizeAll(aphidLexer, "i");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("i", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70308()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whilaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "whilaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whilaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll55202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("newA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "newA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("newA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll76302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "swA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll29207()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "usAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("coaAa");
    AphidLexerTests.TokenizeAll(aphidLexer, "coaAa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("coaAa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll63204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usingA{");
    AphidLexerTests.TokenizeAll(aphidLexer, "usingA{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usingA{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll8004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{catAc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{catAc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{catAc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll648()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ifaA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "ifaA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ifaA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll90808()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("doýaA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "doýaA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("doýaA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll20801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("naa");
    AphidLexerTests.TokenizeAll(aphidLexer, "naa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("naa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll94101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falseAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "falseAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("falseAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll371()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("faA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "faA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("faA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll363()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e00");
    AphidLexerTests.TokenizeAll(aphidLexer, "e00");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("e00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "bAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("bAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll26006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fina|");
    AphidLexerTests.TokenizeAll(aphidLexer, "fina|");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fina|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll37806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("caA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "caA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("caA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll62812()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swi÷A");
    AphidLexerTests.TokenizeAll(aphidLexer, "swi÷A");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swi÷A", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll85206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swiA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "swiA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swiA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll28002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fiAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "fiAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fiAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll39704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catcA");
    AphidLexerTests.TokenizeAll(aphidLexer, "catcA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catcA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll86608()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defiA{");
    AphidLexerTests.TokenizeAll(aphidLexer, "defiA{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defiA{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll41908()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deaaA");
    AphidLexerTests.TokenizeAll(aphidLexer, "deaaA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("deaaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll52105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breA0");
    AphidLexerTests.TokenizeAll(aphidLexer, "breA0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("breA0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll33404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa0a{");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa0a{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loa0a{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll31704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whaAa");
    AphidLexerTests.TokenizeAll(aphidLexer, "whaAa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whaAa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll80101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("raAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "raAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("raAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70608()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defaAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "defaAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defaAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll76402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("loa0a");
    AphidLexerTests.TokenizeAll(aphidLexer, "loa0a");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("loa0a", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll42502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bra0a");
    AphidLexerTests.TokenizeAll(aphidLexer, "bra0a");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("bra0a", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll537()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defiA");
    AphidLexerTests.TokenizeAll(aphidLexer, "defiA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll31506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breaAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "breaAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("breaAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll33104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E\0000.\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E\0000.\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0E\0000.\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll75904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0E\0000.0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0E\0000.0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0E\0000.0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll16304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swiAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "swiAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swiAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll53303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("load00");
    AphidLexerTests.TokenizeAll(aphidLexer, "load00");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("load00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll536()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defaaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "defaaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("defaaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll37002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("tryA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "tryA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("tryA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll72702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catca<");
    AphidLexerTests.TokenizeAll(aphidLexer, "catca<");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catca<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll49602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whila{");
    AphidLexerTests.TokenizeAll(aphidLexer, "whila{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whila{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll69806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("throwA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "throwA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("throwA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll99402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switchAaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "switchAaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("switchAaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll56404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("iaAaA");
    AphidLexerTests.TokenizeAll(aphidLexer, "iaAaA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("iaAaA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43810()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("final00");
    AphidLexerTests.TokenizeAll(aphidLexer, "final00");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("final00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll571()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ret00");
    AphidLexerTests.TokenizeAll(aphidLexer, "ret00");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("ret00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll848()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("faAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "faAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("faAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll22901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("brea00");
    AphidLexerTests.TokenizeAll(aphidLexer, "brea00");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("brea00", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll43704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("thro0Aaa\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "thro0Aaa\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("thro0Aaa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll13108()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("whila");
    AphidLexerTests.TokenizeAll(aphidLexer, "whila");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("whila", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll92102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catca0{");
    AphidLexerTests.TokenizeAll(aphidLexer, "catca0{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("catca0{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll289()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "exAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll72502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{caaa{");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{caaa{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{caaa{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll70309()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("reaaa");
    AphidLexerTests.TokenizeAll(aphidLexer, "reaaa");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("reaaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll12308()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{conta{conaccccccccc");
    AphidLexerTests.TokenizeAll(aphidLexer, "cat{conta{conaccccccccc");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("cat{conta{conaccccccccc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll11310()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swAA");
    AphidLexerTests.TokenizeAll(aphidLexer, "swAA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("swAA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll40004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usinA\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "usinA\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usinA\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll175()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("continu00\0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "continu00\0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("continu00\0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll59606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exte");
    AphidLexerTests.TokenizeAll(aphidLexer, "exte");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("exte", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extee");
    AphidLexerTests.TokenizeAll(aphidLexer, "extee");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extee", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll74()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extels\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "extels\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extels\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll60107()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extex");
    AphidLexerTests.TokenizeAll(aphidLexer, "extex");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extex", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll680()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extexe");
    AphidLexerTests.TokenizeAll(aphidLexer, "extexe");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extexe", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll46506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extext");
    AphidLexerTests.TokenizeAll(aphidLexer, "extext");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extext", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll5802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extexte");
    AphidLexerTests.TokenizeAll(aphidLexer, "extexte");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extexte", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll48704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extext\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "extext\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extext\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll48302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0x0a0");
    AphidLexerTests.TokenizeAll(aphidLexer, "0x0a0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("0x0a0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll66007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extextend{");
    AphidLexerTests.TokenizeAll(aphidLexer, "extextend{");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("extextend{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll99()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fals0\0");
    AphidLexerTests.TokenizeAll(aphidLexer, "fals0\0");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("fals0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
public void TokenizeAll721()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("usingA");
    AphidLexerTests.TokenizeAll(aphidLexer, "usingA");
    Assert.IsNotNull((object)aphidLexer);
    Assert.AreEqual<string>("usingA", aphidLexer.Text);
}
    }
}
