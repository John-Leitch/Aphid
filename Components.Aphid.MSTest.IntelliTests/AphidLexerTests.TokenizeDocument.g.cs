using System.ComponentModel;
using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework;
using Components.Aphid.Lexer;
// <auto-generated>
// This file contains automatically generated tests.
// Do not modify this file manually.
// 
// If the contents of this file becomes outdated, you can delete it.
// For example, if it no longer compiles.
// </auto-generated>
using System;
using DescriptionAttribute = Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute;

namespace Components.Aphid.Parser.Tests
{
    public partial class AphidLexerTests
    {

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument222()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.TokenizeDocument(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument816()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument558()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument510()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument345()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument228()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\f");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\f");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\f", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument299()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument367()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%Y");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%Y");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%Y", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument963()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument946()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\0<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "\0<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\0<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument109()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\f\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\f\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\f\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument640()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument668()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%@\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%@\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%@\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument18()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%1");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%1");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%1", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument27()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%@>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%@>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%@>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument272()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument599()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument346()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument316()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%￿");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%￿");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%￿", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument861()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%``");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%``");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%``", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument128()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%h");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%h");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%h", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument789()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<% ");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<% ");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<% ", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument323()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument583()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument110()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%a");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%a");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%a", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument314()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument747()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument983()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument594()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument265()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%b");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%b");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%b", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument775()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument556()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument853()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument546()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument876()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument565()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument638()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument25()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument166()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument589()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument7()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument491()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument839()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%::");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%::");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%::", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument847()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument685()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument712()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument231()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument670()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument829()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument370()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument925()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument152()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument535()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%i");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%i");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%i", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument199()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%if");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%if");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%if", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument572()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%in");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%in");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%in", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument828()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument732()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument570()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument384()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%j");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%j");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%j", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument146()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument779()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument562()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument871()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument168()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument593()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument520()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument929()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument922()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument115()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument410()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument781()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument340()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument833()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument317()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument182()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument796()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument416()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument396()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument449()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument75()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument764()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument216()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument271()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument726()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument771()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument729()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument100()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument945()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument682()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument622()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument390()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument557()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument8101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%p");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%p");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%p", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument564()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument121()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument521()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument774()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument616()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument294()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument664()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument996()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%</");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%</");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%</", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument949()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument671()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument295()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument883()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument188()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument86101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument684()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument423()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument947()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument534()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument794()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument148()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument917()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument30()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument766()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<<=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<<=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<<=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument658()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument910()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument513()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument719()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument443()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument997()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument761()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument226()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument312()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument524()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument551()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument975()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument11501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument335()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument962()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument769()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument944()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument27101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument623()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument325()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument733()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%x");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%x");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%x", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument972()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument360()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument490()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument29901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%r");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%r");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%r", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument461()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument147()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument169()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument280()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument850()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument631()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument439()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument460()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument624()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument663()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument649()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument268()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument674()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument438()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument537()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument130()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument763()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument394()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument620()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>>=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>>=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>>=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument34501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument568()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument310()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%><");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%><");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%><", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument573()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument888()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument584()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument451()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument866()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument859()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument289()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument851()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument85101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument680()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%q");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%q");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%q", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument936()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%z");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%z");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%z", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument688()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument576()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument899()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument980()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument83301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument560()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument90701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument14801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument759()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument42301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument998()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%??");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%??");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%??", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument358()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument376()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument548()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument514()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument450()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument37601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument636()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument75901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument2701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%##");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%##");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%##", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument875()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument628()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument160()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument639()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument835()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument600()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument191()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument318()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument881()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument679()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument332()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument374()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument466()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument462()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument984()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument144()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument251()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument161()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument626()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%y");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%y");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%y", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument83901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%c");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%c");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%c", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument591()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument459()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument528()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument86601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument569()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument218()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument363()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument353()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument532()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument456()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument973()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument29401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%d");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%d");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%d", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument223()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%do");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%do");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%do", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument369()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument970()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument181()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument215()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument709()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%f");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%f");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%f", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument170()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%e", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument85301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%t");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%t");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%t", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument699()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument164()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%u");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%u");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%u", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument993()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\n");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\n");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\n", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument722()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\t");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\t");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\t", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument224()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%v");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%v");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%v", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%s");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%s");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%s", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument6()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\v");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\v");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\v", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument913()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument321()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%g");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%g");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%g", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument960()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\r");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\r");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\r", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument313()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%w", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument84()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument845()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument15201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument634()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument655()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument597()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument67901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument745()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument436()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument809()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument87()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument737()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument916()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument533()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument99801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument817()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument966()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument517()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%l");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%l");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%l", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument83()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument414()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument797()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument749()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument742()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument477()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%||");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%||");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%||", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument23()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument575()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument819()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument274()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument225()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument47()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument1801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument79()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument246()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument12()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument758()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument195()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument793()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument937()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument419()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument398()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument27201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument592()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument86602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%k");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%k");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%k", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument209()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument320()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument37()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument453()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument915()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument66801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument411()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument92()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument132()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument79301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument867()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument78101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument711()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument248()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument85102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument434()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument359()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument324()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument3701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument770()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument914()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument831()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%n");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%n");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%n", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument211()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument196()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument864()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument563()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument13()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument618()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument20801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument938()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument512()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument471()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument776()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument30601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument129()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument352()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument552()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument437()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument258()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument64001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument82901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument3001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument625()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument748()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument167()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument630()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument66()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument279()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument65501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument176()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument96601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument190()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument6301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument486()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument463()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument17601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%**");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%**");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%**", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument27901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument427()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument838()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument681()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument596()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument872()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%m");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%m");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%m", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument995()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%}");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%}");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%}", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument250()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0x");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0x");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0x", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument39801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0b");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0b");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0b", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%o");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%o");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%o", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument752()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument648()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument37401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument555()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument281()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument725()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument193()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%./");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%./");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%./", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%..");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%..");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%..", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument44901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument13201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument571()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument20901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument472()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument245()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument189()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument525()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument496()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument183()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument259()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument852()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument768()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument448()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument862()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument351()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument492()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument214()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument727()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument667()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument952()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument392()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument389()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%++");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%++");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%++", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument543()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument267()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument212()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument429()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument44301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument391()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument985()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument880()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument362()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument445()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument17602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument355()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument824()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument53()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument465()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument276()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument263()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument692()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument92901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%--");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%--");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%--", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument744()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument647()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%->");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%->");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%->", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument911()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument894()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument780()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument818()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument598()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument694()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument39001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument656()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument48601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument441()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument738()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument659()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument01()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument577()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%//");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%//");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%//", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument34502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument691()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument982()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument843()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument420()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument42302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument2()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument426()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument530()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument4()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument89401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%w[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument46501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%s[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%s[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%s[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument979()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%el[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%el[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%el[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument545()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tr[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tr[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%tr[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument1()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%sw[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%sw[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%sw[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument20()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fi[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument375()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%b[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%b[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%b[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument792()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%u[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%u[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%u[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument239()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%lo[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%lo[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%lo[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument454()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%br[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%br[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%br[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument357()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fa[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fa[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fa[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument213()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%th[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument971()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nu[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nu[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%nu[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%d[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%d[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%d[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wh[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wh[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%wh[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument113()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%f[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%f[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%f[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument232()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tr[\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tr[\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%tr[\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument977()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%us[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%us[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%us[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%co[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%co[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%co[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%t[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%t[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%t[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument958()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swit", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument243()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swit\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument820()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swit[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swita");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swita");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swita", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swit0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swit{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swit", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switca");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switca");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument136()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument978()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switcA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switcA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switcA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument61801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument187()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument252()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swit_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument78()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%co");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%co");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%co", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument221()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument812()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%using", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument78001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usin{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument784()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument527()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usinA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usinA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usinA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument343()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usin0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument652()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usin_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%w", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ex");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ex");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ex", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument519()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%c");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%c");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%c", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument617()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$arg");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$arg");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$arg", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$arg\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$arg\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$arg\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument969()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$arg0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$arg0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$arg0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument930()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$args");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$args");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$args", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument260()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$arg{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$arg{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$arg{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$argA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$argA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$argA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument841()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$arg");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$arg");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$arg", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument687()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$arg_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$arg_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$arg_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument65()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defia");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument220()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defi{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%define", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%definA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defin0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%define\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument813()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%definea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument470()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defi0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument7801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defined", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument162()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%define0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%define<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument8102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defin[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defineA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defineA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defineA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument587()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%define{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defin{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument730()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%define", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument2101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defiA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defiA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument82001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%define_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument23901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defi_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exte", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument873()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exte\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument17603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exten", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument290()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exten\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument837()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extend", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument467()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exte0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extena");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extena");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extena", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument67()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exte{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument690()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exten{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exten", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument37402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exte", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument29001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exteA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exteA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exteA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exten0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument581()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extenA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extenA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extenA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exten_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument348()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exte_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument29()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E-\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E-\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E-\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument372()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E-0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E-0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E-0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E-0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E-0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E-0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument567()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E-00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E-00");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E-00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument171()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%u");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%u");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%u", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument334()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wh");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wh");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%wh", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument20902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defin_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument58701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%br");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%br");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%br", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%e", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument566()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catc\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument184()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catca");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catca");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catc{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catcA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catcA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catcA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument328()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catc0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument484()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument82()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catc_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument632()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%breaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument84301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brea{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument287()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brea0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%break", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument42()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%breaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brea_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument827()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument927()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%sw");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%sw");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%sw", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%r");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%r");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%r", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument8()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fina\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%final", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument447()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fina0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument696()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%final\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument529()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finaA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finaA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument893()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fina{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%final0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finala");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finala");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finala", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finall", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument28901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%final{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument714()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%final", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument951()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finall\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument96602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finall0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument849()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finallA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finally", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument67401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finall<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument860()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finall[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finalA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finalA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finalA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finalla");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finalla");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finalla", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument735()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finall{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument382()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finall", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument44801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fina_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument3301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%final_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument475()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finall_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cont", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument574()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cont\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument58702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cont0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument879()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cont<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument9701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conti", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conta");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument185()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conti\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument319()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conti0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contia");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument145()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conti<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument30701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cont{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument518()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cont", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument58301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conti{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument430()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument354()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument440()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument425()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument956()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument347()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contiA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contiA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument887()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continu\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continue");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continue");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continue", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument17()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conti", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continuA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continuA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continuA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument931()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continu[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continua");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continua");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continu{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument646()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continu0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument657()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conti_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cont_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument481()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%th", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument900()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%f");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%f");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%f", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continu_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument986()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument242()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%re");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%re");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%re", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument783()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dele", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dele\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delet", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dele{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dele", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument400()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dele0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument83501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delet\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument64()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleta");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deleta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument46502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delet{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deleA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument5201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deletA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deletA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deletA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delete");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delete");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delete", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delet0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delet", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dele_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument198()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delet_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument612()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ca");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ca");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument96901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument741()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument731()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defa0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument229()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defa<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defau", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument83801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defau\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaua");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaua");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defau{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaul", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defau0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument92501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defa{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument717()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defauA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defauA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defauA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument253()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaul\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument65201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaulA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaulA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaulA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaula");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaula");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaula", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument28902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaul0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaul[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument751()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%default", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defau", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument261()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaul{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument542()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaul", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument526()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defa_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument823()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defau_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fals", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fals\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%false", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%falsa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument723()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fals{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument14601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%falsA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument177()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fals0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument1901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fals", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument613()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fals_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaul_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument165()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%el");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%el");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%el", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument559()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument134()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%while", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument61201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whilA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whilA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whilA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument67902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whila");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whila");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whila", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument2102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument39601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument82801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%us");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%us");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%us", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument349()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument473()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument85901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument762()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thro", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument197()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thro\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument38201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument47101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throw", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thro0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thro[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument772()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thro{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument509()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thro", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thro_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument5()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ne");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ne");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ne", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01.\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01.\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01.\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01.0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01.0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01.0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument244()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01.:\0\0\0\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01.:\0\0\0\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01.:\0\0\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%lo");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%lo");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%lo", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nu");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nu");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%nu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%s");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%s");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%s", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument38()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tr");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tr");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%tr", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fo");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fo");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fo", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument27202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0\"\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0\"\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0\"\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0\"\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0\"\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0\"\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument869()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ne\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ne\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ne\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument5901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wh\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wh\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%wh\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument44501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nu\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nu\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%nu\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument46701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exten\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument300()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dele\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\010");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\010");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\010", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument46201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%re\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%re\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%re\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument8301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swit\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finall\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument38901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument37501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument87201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument24501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument78002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument64901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument273()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument139()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument75801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument65801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument125()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument11001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0==");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0==");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0==", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument28001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument99701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument30001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument50601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument20101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument336()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument2001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument159()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument18201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fina\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument7301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0\"\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0\"\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0\"\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0\"\\\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0\"\\\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0\"\\\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument12901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%th\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ex\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ex\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ex\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument66802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cont\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument621()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%br\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%br\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%br\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument269()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%define\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01e", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument27601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01e\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01e-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01e0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument20501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e-\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e-\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01e-\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument311()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e-0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e-0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01e-0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument140()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e-0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e-0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01e-0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e-00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e-00");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01e-00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument44701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01E");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01E");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01E", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument330()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tr\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tr\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%tr\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument262()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%final\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument455()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delet\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%us\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%us\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%us\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument5501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%sw\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%sw\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%sw\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument278()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%try[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%try[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%try[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument64701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument368()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ca\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ca\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ca\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument791()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fals\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defau\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%lo\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%lo\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%lo\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument30101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thro\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument476()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continu\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument90702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument991()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fo\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fo\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fo\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument444()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\'\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\'\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=\'\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument58302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\'\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\'\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=\'\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%el\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%el\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%el\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument67903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaul\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument28()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument233()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument24301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catc\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%co\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%co\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%co\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E-00\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E-00\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E-00\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument154()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conti\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exte\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument822()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%try");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%try");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%try", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\'\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\'\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=\'\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument46202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\'\\\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\'\\\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=\'\\\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument990()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%nea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument286()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ne{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ne{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ne{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument47301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defia");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument987()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exte0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument95()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%try\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%try\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%try\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument878()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%faA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%faA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%faA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument480()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brea0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument826()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%e\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument322()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%loa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%loa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%loa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument85103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%sw0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%sw0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%sw0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%false\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falseA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falseA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%falseA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument79201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%false[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument58401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%false0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%falsea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%false{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument9702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%false", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument693()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%false_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument192()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%coa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%coa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%coa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaua");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaua");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument955()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%u\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%u\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%u\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%f\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%f\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%f\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument452()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%b");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%b");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%b", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument619()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%bra");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%bra");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%bra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\010\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\010\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\010\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument786()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%break\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument547()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%break0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument39802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breakA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breakA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%breakA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%break[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument24401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaka");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaka");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%breaka", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%break{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%break", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument337()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%break_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument155()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%break\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument24302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wha");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wha");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%wha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument122()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extena");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extena");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extena", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whila");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whila");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whila", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument760()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tha");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tha");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%tha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finala");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finala");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finala", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument413()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%i");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%i");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%i", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument689()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%n");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%n");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%n", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument25301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%d");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%d");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%d", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument99301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swita");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swita");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swita", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument544()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%t");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%t");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%t", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument20201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument47201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finally\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallyA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallyA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finallyA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument38902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finally[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument3601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallya");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallya");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finallya", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument39602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finally{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finally0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument890()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finally", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finally_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%falsa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument994()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument964()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tra");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tra");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%tra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument388()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%caa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%caa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%caa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finally\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument12101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%l");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%l");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%l", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument483()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nua");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nua");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%nua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%trya");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%trya");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%trya", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument811()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%false\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument457()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finalla");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finalla");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finalla", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ca");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ca");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument23201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defineA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defineA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defineA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defi{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument464()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dele0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%using\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%using0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument12501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usinga");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usinga");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usinga", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%using{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument24303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%using", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usingA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usingA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usingA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument119()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%using\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument61202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%using_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usinga");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usinga");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usinga", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usingA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usingA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usingA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ca{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ca{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ca{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument588()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dele<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument458()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument157()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallya");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallya");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finallya", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument393()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tr0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tr0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%tr0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument114()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catcA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catcA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catcA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument75201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%falsA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument256()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%faa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%faa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%faa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument736()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaula");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaula");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaula", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaka");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaka");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%breaka", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument255()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=_\0\0￿\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=_\0\0￿\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=_\0\0￿\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extend\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extendA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extendA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extendA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument6801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extend[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument976()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extend0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument633()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extenda");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extenda");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extenda", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extend{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extend", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument661()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extend\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extend_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extendA\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extendA\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extendA\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument373()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument941()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%br0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%br0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%br0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument5601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extenA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extenA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extenA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument586()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finall0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument497()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0!\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0!\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0!\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0!$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0!$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0!$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0!\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0!\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0!\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument18401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%do");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%do");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%do", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument90101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swit0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument943()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ne");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ne");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ne", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument579()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%try{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%try{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%try{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument895()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defauA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defauA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defauA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument418()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%￿0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%￿0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%￿0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument479()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brea<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument25201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument53501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%final0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaula\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaula\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaula\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument02()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delea\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument58101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument292()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%lA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%lA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%lA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument18701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%co0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%co0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%co0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument724()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%for[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%for[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%for[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument935()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%for");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%for");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%for", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%for\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%for\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%for\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ca");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ca");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%coa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%coa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%coa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument371()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument83701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%na");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%na");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%na", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument48401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%definea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument79202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finally0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument111()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contina\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contina\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contina\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conta");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ta");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%breaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument61701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleta");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deleta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%try");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%try");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%try", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument126()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument428()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catca");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catca");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument675()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fia");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument540()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ela");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ela");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ela", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument381()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%w\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%r0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%r0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%r0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define÷[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define÷[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%define÷[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument578()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%coA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%coA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%coA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument700()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%rea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%rea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%rea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument66301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument138()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%foa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%foa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%foa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument50602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%doa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%doa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%doa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fina0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fora");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fora");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fora", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catch\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument800()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catchA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catchA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catchA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument954()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catch0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catch[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument37301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catcha");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catcha");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catcha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catch{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument344()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catch_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument78003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catch\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catch0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument834()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%s\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%s\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%s\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument889()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continua");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continua");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument90601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%using[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument49601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fa{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fa{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fa{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument53001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ba");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ba");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ba", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument90()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument163()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contia");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument342()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defina\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defina\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defina\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument920()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%falsea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%iA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%iA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%iA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument653()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usinA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usinA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usinA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument892()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument237()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delete\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delete\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delete\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delete0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delete0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delete0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument754()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delete<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delete<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delete<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument715()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deletea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deletea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deletea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument87901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delete{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delete{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delete{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument478()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleteA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleteA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deleteA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delete");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delete");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delete", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument23301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delete\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delete\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delete\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument877()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delete_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delete_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delete_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument15401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deletea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deletea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deletea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument18202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usin{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument431()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defin0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%foA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%foA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%foA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brea{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument676()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument415()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%da");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%da");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%da", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument240()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finalA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finalA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finalA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fina{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument8701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delet0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument953()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0&@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0&@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0&@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument645()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contiA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contiA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%new");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%new");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%new", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%new\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%new\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%new\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%re0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%re0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%re0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deletea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deletea\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deletea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%forA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%forA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%forA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument61601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%el0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%el0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%el0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument897()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%newa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%newa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%newa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument87601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%false{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument47202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%us0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%us0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%us0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument58303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thý[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thý[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thý[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument309()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%th_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument469()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catc{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument654()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exteA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exteA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exteA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument757()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%doa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%doa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%doa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finall{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument6802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%neA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%neA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%neA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thro0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument48101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throw\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument27301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throwa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throwa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throwa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument44502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throw{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument112()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throwA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throwA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throwA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument117()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throw", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument6401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throw0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument5502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throw\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument12102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throw_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument9401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throw0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument37602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throw0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument417()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defia\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defia\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defia\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument34901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nea\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%nea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument42501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument18901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%us<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%us<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%us<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument539()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exte[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument1701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ret");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ret");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ret", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ret\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ret\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ret\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%reta");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%reta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%reta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument87701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaul{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument46601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%n\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%n\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%n\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swita\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swita\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swita\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument858()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nua\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nua\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%nua\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%using{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument48102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delete{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delete{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delete{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument84302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument288()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%false", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%w0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catcha");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catcha");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catcha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument9()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%loa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%loa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%loa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument64902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%doaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%doaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%doaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument86901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument29902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ra");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ra");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument14701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%bra\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%bra\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%bra\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument933()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throwa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throwa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throwa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument554()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finall", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument90102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%￠<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%￠<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%￠<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument47501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument47801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaua\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaua\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaua\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%sa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%sa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%sa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument44302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tra\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tra\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%tra\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument728()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%rea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%rea\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%rea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%definA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument49101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switcA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switcA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switcA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%co{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%co{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%co{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catchA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catchA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catchA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catch<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defined\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument96201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defineda");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defineda");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defineda", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument5503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defined0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defined<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument734()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defined{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument96603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defined", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument15901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definedA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definedA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%definedA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument99702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defined\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument5602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defined_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument95501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defineda");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defineda");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defineda", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defineda\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defineda\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defineda\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument379()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wha\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wha\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%wha\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument65901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%newA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%newA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%newA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ela\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ela\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ela\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extea\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument87902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%i0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%i0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%i0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%c0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%c0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%c0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fia\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fia\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fia\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument777()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleta\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleta\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deleta\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument50901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%foa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%foa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%foa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%l0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%l0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%l0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument886()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tr{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tr{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%tr{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fo{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fo{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fo{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contia\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contia\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contia\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument83702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extena\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extena\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extena\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument746()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finala\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finala\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finala\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument172()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%bA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%bA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%bA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%break0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument856()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%falsa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument710()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument95101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catcha\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catcha\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catcha\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ex0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ex0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ex0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%for0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%for0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%for0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument25901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tr");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tr");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%tr", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%newa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%newa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%newa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument99501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0!@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0!@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0!@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wh{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wh{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%wh{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument7802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%while\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument669()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whilea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whilea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whilea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument383()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whileA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whileA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whileA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%while[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%while{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%while0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%while", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument549()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%while_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument541()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%while\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument683()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whilea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whilea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whilea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument854()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fi0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delete");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delete");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delete", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument50101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%faa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%faa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%faa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%co");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%co");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%co", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument721()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definedA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definedA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%definedA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument773()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finaa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finaa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finaa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument30702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%reta\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%reta\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%reta\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallya\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallya\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finallya\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument58402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cont0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument61()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%br<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%br<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%br<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument247()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%try0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%try0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%try0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ret{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ret{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ret{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin÷[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin÷[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin÷[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switch\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switch0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument297()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switchA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switchA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switchA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument23902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switch[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument32401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switcha");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switcha");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switcha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument585()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switch{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument5603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument85201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switch_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switch\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument53701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switchA\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switchA\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switchA\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switch0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument236()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ua");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ua");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument50301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%loA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%loA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%loA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%caa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%caa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%caa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument28701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%using", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument75401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catca\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catca\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catca\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument53401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%sw{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%sw{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%sw{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument326()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whilea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whilea\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whilea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%breaa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument665()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaka\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaka\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%breaka\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument90501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switca");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switca");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument921()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%re{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%re{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%re{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument39301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<\0<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<\0<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<\0<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fals0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument580()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument48()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0&\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0&\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0&\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0&$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0&$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0&$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0&\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0&\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0&\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%if");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%if");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%if", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%if0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%if0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%if0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument339()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%if0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%if0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%if0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fo");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fo");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fo", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument82802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finalla\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finalla\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finalla\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument173()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%re");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%re");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%re", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument18402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swit{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument38401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%t}");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%t}");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%t}", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument30002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wh");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wh");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%wh", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument6501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tryA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tryA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%tryA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nu0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nu0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%nu0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument12201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usina\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usina\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usina\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument96902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaul", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument47502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exten0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whila\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whila\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whila\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument885()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deleA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument3002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thro{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%in");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%in");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%in", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument7302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ina\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ina\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ina\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument79101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%inaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%inaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%inaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument39302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swit", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument39002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%la");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%la");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%la", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument24601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usinga\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usinga\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usinga\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument814()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wï<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wï<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%wï<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%while0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ret");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ret");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ret", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%sw");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%sw");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%sw", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument79401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breakA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breakA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%breakA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument9703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%definA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument95301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\08E-00\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\08E-00\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\08E-00\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument3101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defined0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument6502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%break[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument50102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ifA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ifA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ifA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%final<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument75902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%lo0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%lo0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%lo0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument53201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallyA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallyA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finallyA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%default\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument123()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaulta");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaulta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaulta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument948()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%default{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%default0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument331()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%default", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaultA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaultA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaultA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%default\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument95401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%default_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument13401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaulta");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaulta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaulta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%default0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument66501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default<\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default<\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%default<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument83802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaulta\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaulta\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaulta\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument85902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continua\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continua\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continua\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument750()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thro", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument49()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsea\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%falsea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deleA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument1301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%lo@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%lo@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%lo@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument23601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ex[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ex[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ex[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument14702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continue\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continue\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continue\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument217()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continue0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continue0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continue0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument82601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continuea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continuea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continuea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument642()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continueA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continueA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continueA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument3602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continue{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continue{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continue{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument12502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continue");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continue");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continue", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument86201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continue\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continue\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continue\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continue_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continue_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continue_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument85001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continuea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continuea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continuea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument32201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continueA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continueA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continueA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument8401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continuea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continuea\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continuea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument90103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continue{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continue{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continue{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%do");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%do");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%do", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument50401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definedA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definedA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%definedA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument17101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conti[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whileaA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whileaA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whileaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%loý[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%loý[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%loý[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E-000");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E-000");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E-000", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wha0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wha0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%wha0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%default0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%us{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%us{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%us{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument743()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fi<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument39303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%lo{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%lo{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%lo{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ex{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ex{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ex{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nu<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nu<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%nu<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument124()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%for[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%for[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%for[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%inaA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%inaA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%inaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument651()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%trA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%trA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%trA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extenda");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extenda");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extenda", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument919()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument28601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cont[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deý[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deý[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deý[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continu{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exten<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defin<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument1201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ne0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ne0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ne0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument20401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined<\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined<\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defined<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument32()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%while<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catch[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fa0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fa0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fa0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%define{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument78102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%new0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%new0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%new0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument249()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fo0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fo0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fo0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument15501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dele{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument17201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ex");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ex");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ex", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument79203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extend[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conti{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument150()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defineaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defineaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defineaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument78004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ca0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ca0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ca0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument923()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throw<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument65802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument20202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dele", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument756()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defa{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fals<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin`\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin`\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin`\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument23903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin`$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin`$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin`$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin`\'\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin`\'\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin`\'\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument15202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fiA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fiA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exten{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fora\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fora\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fora\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%for{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%for{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%for{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally<\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally<\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finally<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%us");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%us");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%us", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument356()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%retA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%retA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%retA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument788()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%trya\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%trya\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%trya\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi|@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi|@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defi|@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument85002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extend{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument926()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%define", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument75001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%el{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%el{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%el{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dea\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument942()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fi[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%default{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument61301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definedß[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definedß[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%definedß[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%final[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument210()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%break{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument37001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%br{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%br{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%br{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fals{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument42303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%br");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%br");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%br", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01.\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01.\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01.\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01.$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01.$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01.$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01.\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01.\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01.\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument67402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exten", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument83803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument65101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switch<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument153()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%caA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%caA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%caA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument58801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01.z");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01.z");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01.z", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument79204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continue");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continue");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continue", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument50603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defin[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallyaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallyaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finallyaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fi{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument6803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nu{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nu{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%nu{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument34902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extend", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument11401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delet{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument855()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delet", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument765()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01._");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01._");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01._", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument25601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continueA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continueA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continueA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument86()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%th{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument25101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continuaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continuaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continuaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%el");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%el");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%el", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument7101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%new{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%new{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%new{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument387()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usingaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usingaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usingaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument13801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whilea[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whilea[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whilea[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%new");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%new");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%new", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument254()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi|_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi|_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defi|_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%default", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument338()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=$a");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=$a");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=$a", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defau[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%l0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%l0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%l0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defin{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument4001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throwA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throwA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throwA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fals", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%for");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%for");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%for", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defined{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument11()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switcha");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switcha");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switcha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defined", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument264()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ina[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ina[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ina[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument34001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%break", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switch[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument9501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falseaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falseaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%falseaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whaA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whaA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument89001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%while{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument333()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ta\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ta\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ta\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument46203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catchaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catchaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catchaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument61302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w<@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w<@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%w<@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument137()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%th", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument96903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01E0:@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01E0:@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01E0:@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%elA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%elA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%elA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument825()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%iA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%iA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%iA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument86001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throw[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument974()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conti", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument28801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finaaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finaaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finaaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defau{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument82701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0#\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0#\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0#\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument14602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0#$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0#$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0#$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0#\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0#\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0#\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exte{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extenA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extenA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extenA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catch{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%final{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument329()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%falsaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument50801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w<<\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w<<\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%w<<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument37201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallyß[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallyß[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finallyß[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil|\"\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil|\"\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil|\"\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil|$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil|$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil|$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument67101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil|\'\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil|\'\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil|\'\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument24304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finally{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument498()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exteaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exteaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exteaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defau", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%while", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument677()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contiA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contiA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contiA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument194()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%lo");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%lo");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%lo", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\0\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "\0\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument86202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throw{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument84501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%th0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nuA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nuA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%nuA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument27302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument78801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01E0:_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01E0:_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01E0:_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument832()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%reA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%reA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%reA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%el`@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%el`@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%el`@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument96301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throw", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument61901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%retA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%retA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%retA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nu");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nu");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%nu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument6601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0#@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0#@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0#@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exte", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument28903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switch{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument79102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%i0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%i0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%i0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ret0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ret0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ret0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%breaaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%in0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%in0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%in0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument61802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w<_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w<_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%w<_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument235()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%final", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument64501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=$a\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=$a\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=$a\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%reA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%reA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%reA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th\\\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th\\\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%th\\\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th\\$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th\\$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%th\\$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th\\\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th\\\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%th\\\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whilaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whilaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whilaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument23602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=$ar");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=$ar");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=$ar", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument79402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=$ar\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=$ar\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=$ar\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument590()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finalA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finalA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finalA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument296()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%el`_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%el`_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%el`_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%new0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%new0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%new0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th\\@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th\\@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%th\\@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument939()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catcA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catcA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catcA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finally", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th\\_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th\\_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%th\\_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument277()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01:\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01:\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01:\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\08:$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\08:$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\08:$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument422()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01:\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01:\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01:\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w<\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w<\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%w<\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument5301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w<$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w<$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%w<$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w<\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w<\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%w<\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument34503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finallaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defauaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defauaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defauaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument50302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wh0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wh0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%wh0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nuaA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nuaA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%nuaA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument4002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ca0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ca0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ca0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument67701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%i0a");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%i0a");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%i0a", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breakA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breakA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%breakA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument219()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deleaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument2002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fiaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fiaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fiaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cont{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument75002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usinA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usinA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usinA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument82702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extendAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extendAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extendAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument643()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ua\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ua\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ua\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%elaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%elaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%elaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switcaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switcaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switcaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument753()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaulaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaulaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaulaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defiaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defiaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defiaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%r0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%r0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%r0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument18403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whileaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whileaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whileaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%coA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%coA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%coA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%retAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%retAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%retAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument66901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%neA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%neA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%neA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument718()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleteA\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleteA\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deleteA\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument99001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deletA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deletA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deletA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defineaA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defineaA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defineaA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%forA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%forA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%forA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%r0A");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%r0A");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%r0A", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument75003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fiA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fiA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fiA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument17301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%definAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument32901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extenaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extenaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extenaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument90602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%braa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%braa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%braa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument32801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%elA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%elA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%elA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extendaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extendaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extendaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument550()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finalaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finalaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finalaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continuA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continuA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continuA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fa0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fa0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fa0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%newaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%newaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%newaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breakaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breakaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%breakaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument90201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%coa_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%coa_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%coa_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument650()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throwaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throwaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throwaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument561()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%loaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%loaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%loaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deleAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%loA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%loA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%loA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument27801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usinaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usinaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usinaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catcaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catcaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catcaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument78802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument9101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ifa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ifa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ifa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument4003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cont", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument18404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%reAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%reAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%reAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument5504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deletaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deletaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deletaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument24602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%r¿0[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%r¿0[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%r¿0[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument3501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc00");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%neaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%neaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%neaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument38202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%traa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%traa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%traa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%new00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%new00");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%new00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument637()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falseA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falseA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%falseA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exA0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exA0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exA0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%definaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument678()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%loAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%loAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%loAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contiaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contiaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contiaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument2301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nuaAa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nuaAa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%nuaAa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument29201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catchA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catchA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catchA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument17701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%trya0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%trya0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%trya0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%reaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%reaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%reaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument395()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%falsA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument75701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definedaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definedaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%definedaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%sw_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%sw_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%sw_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument611()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%uaA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%uaA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%uaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument151()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finally0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument53402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaultaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaultaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaultaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument92101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleteaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleteaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deleteaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de*@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de*@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de*@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de*\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de*\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de*\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de*$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de*$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de*$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument20502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de*\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de*\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de*\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument39401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continueaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continueaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continueaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de*_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de*_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de*_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument284()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fo0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fo0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fo0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument85801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contina0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contina0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contina0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ifaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ifaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ifaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tryaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tryaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%tryaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th^@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th^@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%th^@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th^\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th^\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%th^\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th^$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th^$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%th^$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument47503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th^\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th^\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%th^\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th^_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th^_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%th^_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument815()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%trA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%trA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%trA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument7501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument89402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%retaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%retaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%retaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument65701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ua[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ua[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ua[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%caaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%caaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%caaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument49201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exteA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exteA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exteA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument468()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whileA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whileA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whileA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument28602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%i0{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%i0{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%i0{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument46204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finallA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%i0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%i0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%i0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument8201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%coaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%coaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%coaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument6804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%na\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%na\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%na\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de\0K\0Y");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de\0K\0Y");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de\0K\0Y", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument641()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%foraa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%foraa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%foraa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%re0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%re0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%re0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%faaAa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%faaAa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%faaAa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fiAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fiAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fiAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument257()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument716()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%elAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%elAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%elAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument821()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finaaA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finaaA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finaaA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument13402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%us0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%us0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%us0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%sa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%sa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%sa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$arg<$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$arg<$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$arg<$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%us_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%us_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%us_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument89002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swit0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument42502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%caa_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%caa_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%caa_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument432()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%w0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whilaA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whilaA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whilaA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ret_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ret_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ret_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument7803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%taA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%taA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%taA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%i0aa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%i0aa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%i0aa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument6001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fi0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument5902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%trAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%trAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%trAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument275()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%el_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%el_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%el_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ba\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ba\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ba\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument47102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exA00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exA00");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exA00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument940()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de+@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de+@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de+@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument782()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de+_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de+_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de+_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument713()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de+\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de+\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de+\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de+$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de+$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de+$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument82501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de+\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de+\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de+\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument28401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%uaA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%uaA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%uaA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%foaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%foaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%foaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument85802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%taA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%taA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%taA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument810()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tr_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tr_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%tr_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul_\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul_\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaul_\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%saÁ");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%saÁ");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%saÁ", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument85803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defauA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defauA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defauA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument53901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switchaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switchaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switchaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument38402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finallAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument75202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defiA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defiA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defiA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument37101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switchAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switchAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switchAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument50103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ca00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ca00");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ca00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument99302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ta0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ta0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ta0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument92502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defauAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defauAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defauAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument283()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw00");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throw00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument11301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ifa{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ifa{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ifa{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument34701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument12401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definedAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definedAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%definedAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%bA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%bA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%bA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument200()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e>@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e>@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%e>@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e>>\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e>>\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%e>>\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument44503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e>\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e>\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%e>\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument874()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e>\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e>\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%e>\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument82803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e\0>_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e\0>_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%e\0>_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e?\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e?\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%e?\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument3201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e?$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e?$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%e?$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e?\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e?\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%e?\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument64801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e?@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e?@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%e?@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument24305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e\0?_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e\0?_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%e\0?_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi00");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fi00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whilAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whilAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whilAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument32601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finala0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finala0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finala0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ifa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ifa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ifa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument9102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switchA0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switchA0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switchA0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finalla0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finalla0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finalla0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de00");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extendaa0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extendaa0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extendaa0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument799()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit00");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swit00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%re00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%re00");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%re00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument67904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finaaa0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finaaa0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finaaa0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument46801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ina{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ina{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ina{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument141()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exA0A");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exA0A");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exA0A", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument988()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%taAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%taAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%taAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument90703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%breaA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%c0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%c0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%c0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument2003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%coA0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%coA0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%coA0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument38403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%coAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%coAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%coAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument778()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%saA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%saA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%saA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%breaAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument672()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nu0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nu0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%nu0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument89201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ta0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ta0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ta0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defineAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defineAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defineAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument386()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%saA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%saA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%saA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument53202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catcha0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catcha0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catcha0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w0A");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w0A");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%w0A", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%define0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cont0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument87301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%neA0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%neA0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%neA0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument442()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%inaa0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%inaa0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%inaa0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument61101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w¿0[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w¿0[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%w¿0[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swi");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<<\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<<\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument99502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%f_<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%f_<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%f_<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%neAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%neAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%neAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ﾱ");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ﾱ");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ﾱ", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument65803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whi");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<<\0<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<<\0<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<<\0<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de-\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de-\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de-\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument99303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de-$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de-$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de-$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument364()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de-\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de-\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de-\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de-@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de-@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de-@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument75702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de-_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de-_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de-_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument34702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%saa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%saa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%saa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument18101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tha0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tha0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%tha0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.TokenizeDocument(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument7102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument34504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\f");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\f");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\f", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument29903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%Y");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%Y");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%Y", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument8103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument96302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\0<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "\0<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\0<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\f\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\f\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\f\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument64002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument66803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%@\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%@\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%@\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument1802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%1");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%1");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%1", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument2702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%@>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%@>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%@>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument27203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument34601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%￿");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%￿");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%￿", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument86102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%``");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%``");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%``", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument12801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%h");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%h");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%h", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument78901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<% ");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<% ");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<% ", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument32301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument58304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument11002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%a");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%a");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%a", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument5505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%b");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%b");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%b", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument85302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument87602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument2501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument58901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument720()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument49102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument83902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%::");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%::");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%::", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument84701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument23101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument67001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument82902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument37002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument92503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument15203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument53502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%i");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%i");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%i", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%if");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%if");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%if", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%in");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%in");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%in", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument82804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument38404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%j");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%j");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%j", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument14603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument87101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument90704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument92902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument92201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument11502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument78103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument34002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument83302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument18203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument79601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument39603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument44902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument7502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument27102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument2103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument6002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument20301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument39003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument8104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%p");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%p");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%p", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument12103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument61602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument29402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument66401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument99601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%</");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%</");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%</", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument6805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument5604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument67102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument29501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument18801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument86103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument42304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument20802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument53403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument79403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument14802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument3003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<<=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<<=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<<=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument90603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument65804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument44303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument99703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument11503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument96202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument27103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument32501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%x");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%x");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%x", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument49001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument29904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%r");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%r");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%r", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument46101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument14703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument28002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument85003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument46001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument30602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument66302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36709()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument64903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument67403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument53702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument13001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument39402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>>=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>>=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>>=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument34505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%><");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%><");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%><", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument58403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument86603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument85903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument28904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument7303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument85104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument85105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%q");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%q");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%q", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%z");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%z");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%z", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument89901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument83303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument90705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument14803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument75903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument42305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument99802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument50303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%??");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%??");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%??", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument7601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument37603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument37604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument75904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument2703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%##");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%##");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%##", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument87501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument83502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument90301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument67905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument37403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument46602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument46205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument14401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument25102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%y");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%y");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%y", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument83903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%c");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%c");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%c", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument86604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument53203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%>&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument29403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%d");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%d");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%d", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%do");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%do");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%do", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%:&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%!&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument18102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%<&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument50201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%?&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%`&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%f");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%f");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%f", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument17001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%e", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%#_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument85303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%t");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%t");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%t", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%u");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%u");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%u", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument99304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\n");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\n");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\n", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\t");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\t");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\t", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%v");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%v");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%v", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument9704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%s");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%s");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%s", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument610()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\v");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\v");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\v", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument32101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%g");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%g");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%g", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument96001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\r");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\r");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\r", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%w", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument8402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument84502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument15204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument65502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument67906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument8702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument53301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument99803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\\&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument96604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%l");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%l");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%l", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument8302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%&_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument79701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument47701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%||");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%||");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%||", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument2302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument90901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument27401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument4701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument1803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument7901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument24603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument1202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument75802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument79302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument39803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%|&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument27204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument86605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%k");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%k");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%k", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument20903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument32001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument3302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument3702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument66804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument9201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument13202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument50802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument79303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument86701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument78104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36710()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument24801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument85106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument32402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument6302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument3703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%^&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument83101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%n");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%n");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%n", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%%_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument86401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument1302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument61803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument20803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument50402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument47103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument30603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument12902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument25801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument64003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument82903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument3004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%~&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument6602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument27902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument65503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument17604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument96605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument5202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument6303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument48602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument46301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument17605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%**");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%**");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%**", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument27903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument42701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument83804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%*&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument87202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%m");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%m");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%m", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument99503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%}");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%}");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%}", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument25001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0x");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0x");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0x", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument39804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0b");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0b");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0b", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%o");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%o");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%o", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument75203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument64802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument37404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument28101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%./");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%./");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%./", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%..");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%..");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%..", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument44903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument13203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument20904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument47203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument24502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument3603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument18902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument49602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument18301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument25902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument85202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%.&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument44802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument86203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument49202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument66701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument95201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument39201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument38903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%++");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%++");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%++", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36711()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument42901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument44304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument39101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%+&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument44504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument17606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument82401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument5302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument46503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument27602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument92903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%--");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%--");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%--", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument64702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%->");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%->");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%->", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument89403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument78005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument1902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument39004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument65601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument48603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument44101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%-&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument65902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument03()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%//");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%//");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%//", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument34506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument84303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument42001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument42306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument42601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57610()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument53002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument412()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%/&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument30703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument89404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%w[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument46504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%s[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%s[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%s[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%el[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%el[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%el[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tr[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tr[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%tr[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument116()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%sw[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%sw[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%sw[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument2004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fi[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument37502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%b[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%b[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%b[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument79205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%u[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%u[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%u[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument20503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument23904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%lo[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%lo[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%lo[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%br[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%br[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%br[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fa[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fa[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fa[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%th[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nu[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nu[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%nu[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%d[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%d[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%d[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wh[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wh[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%wh[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument11302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%f[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%f[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%f[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument23202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tr[\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tr[\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%tr[\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%us[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%us[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%us[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%co[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%co[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%co[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%t[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%t[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%t[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument95801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swit", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument24306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swit\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument82002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swit[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument4004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swita");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swita");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swita", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swit0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swit{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swit", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switca");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switca");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument13601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switcA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switcA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switcA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument61804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument18702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument25202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swit_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument7804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%co");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%co");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%co", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument1601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%using", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument78006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usin{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument78401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usinA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usinA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usinA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument34301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usin0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument65202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usin_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument7701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%w", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ex");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ex");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ex", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%c");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%c");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%c", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument61702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$arg");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$arg");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$arg", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$arg\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$arg\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$arg\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument96904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$arg0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$arg0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$arg0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$args");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$args");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$args", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$arg{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$arg{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$arg{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$argA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$argA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$argA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument84101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$arg");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$arg");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$arg", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$arg_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$arg_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%$arg_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument6503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defia");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defi{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument50604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%define", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%definA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defin0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%define\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%definea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument47001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defi0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument7805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defined", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%define0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%define<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument8105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defin[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defineA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defineA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defineA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument58703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%define{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defin{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%define", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument2104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defiA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defiA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument82003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%define_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument23905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defi_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exte", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument87302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exte\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument17607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exten", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument29002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exten\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument83703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extend", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument46702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exte0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26509()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extena");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extena");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extena", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument6701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exte{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exten{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument6901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exten", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument37405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exte", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument29003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exteA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exteA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exteA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exten0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument58102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extenA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extenA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extenA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exten_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument34801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exte_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument2901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E-\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E-\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E-\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument37202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E-0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E-0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E-0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E-0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E-0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E-0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E-00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E-00");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E-00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument17102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%u");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%u");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%u", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wh");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wh");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%wh", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument20905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defin_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument58704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%br");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%br");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%br", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%e", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catc\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument18405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catca");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catca");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument421()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catc{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catcA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catcA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catcA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument32802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catc0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument48402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument8202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catc_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%breaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument84304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brea{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument28702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brea0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument118()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%break", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument4201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%breaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brea_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument82703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument92701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%sw");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%sw");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%sw", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%r");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%r");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%r", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument830()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument227()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fina\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%final", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument44702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fina0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%final\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finaA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finaA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument89301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fina{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument30201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%final0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finala");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finala");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finala", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finall", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument28905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%final{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%final", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument95102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finall\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument96606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finall0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument84901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finallA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finally", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument67404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finall<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument86002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finall[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finalA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finalA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finalA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finalla");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finalla");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finalla", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finall{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument38203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finall", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument44803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fina_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument3303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%final_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument47504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finall_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument30102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cont", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cont\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument58705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cont0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument87903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cont<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument9705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conti", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91009()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conta");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument18501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conti\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conti0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument9402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contia");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument14501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conti<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument30704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cont{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cont", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument58305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conti{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument44001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument42503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument95601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument34703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contiA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contiA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continu\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continue");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continue");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continue", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument1702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conti", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continuA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continuA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continuA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continu[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continua");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continua");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continu{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument64601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continu0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument65702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conti_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cont_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument48103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%th", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument90001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%f");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%f");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%f", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continu_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument24201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%re");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%re");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%re", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument78301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dele", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dele\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delet", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dele{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument90104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dele", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dele0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument83503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delet\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument6402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleta");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deleta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument46505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delet{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deleA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument5203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deletA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deletA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deletA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delete");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delete");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delete", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument5903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delet0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delet", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dele_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delet_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument61203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ca");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ca");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument96905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defa0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defa<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defau", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument83805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defau\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaua");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaua");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defau{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaul", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defau0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument92504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defa{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument836()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defauA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defauA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defauA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument25302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaul\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument65203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaulA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaulA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaulA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaula");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaula");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaula", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument28906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaul0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaul[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument75101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%default", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defau", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaul{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaul", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defa_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument82301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defau_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fals", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fals\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%false", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%falsa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fals{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument14604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%falsA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument17702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fals0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument1903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fals", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument61303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fals_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument30301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaul_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%el");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%el");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%el", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument90202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument13403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%while", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument61204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whilA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whilA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whilA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument67907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whila");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whila");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whila", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument2105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument22503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument39604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument82805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%us");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%us");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%us", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument34903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument47302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument85904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thro", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thro\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument38204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59309()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument47104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throw", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument50104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thro0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument74405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thro[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thro{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument50902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thro", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thro_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument511()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ne");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ne");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ne", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01.\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01.\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01.\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01.0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01.0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01.0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument24402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01.:\0\0\0\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01.:\0\0\0\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01.:\0\0\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%lo");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%lo");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%lo", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nu");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nu");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%nu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument90401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%s");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%s");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%s", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument3801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tr");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tr");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%tr", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fo");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fo");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fo", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument27205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0\"\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0\"\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0\"\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0\"\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0\"\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0\"\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument86902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ne\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ne\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ne\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument5904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wh\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wh\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%wh\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument44505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nu\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nu\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%nu\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument46703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exten\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument30003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dele\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument30501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\010");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\010");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\010", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument46206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%re\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%re\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%re\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument8303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swit\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finall\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument120()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument38904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument37503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument87203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument24503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument78007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument64904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument27303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument13901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument75803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument65805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument12503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument11003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36712()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument20203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0==");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0==");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0==", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument28003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument99704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument30004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument50605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument20102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument2005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument15902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument18204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fina\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument7304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0\"\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0\"\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0\"\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0\"\\\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0\"\\\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0\"\\\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument12903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%th\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ex\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ex\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ex\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument66805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%cont\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%br\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%br\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%br\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%define\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01e", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument27603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01e\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57309()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01e-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01e0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument20504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e-\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e-\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01e-\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e-0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e-0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01e-0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument14001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e-0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e-0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01e-0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e-00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e-00");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01e-00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument44703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01E");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01E");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\01E", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tr\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tr\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%tr\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%final\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%de\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delet\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%us\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%us\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%us\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument5506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%sw\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%sw\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%sw\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument27802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument35204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%try[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%try[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%try[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument64703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ca\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ca\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ca\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26510()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument79103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fals\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defau\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%lo\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%lo\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%lo\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument30103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thro\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument47601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continu\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument90706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument99101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fo\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fo\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fo\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument44401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\'\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\'\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=\'\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument58306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\'\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\'\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=\'\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument4301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%el\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%el\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%el\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument67908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaul\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument2801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument23302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument24307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catc\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument51207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%co\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%co\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%co\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument21505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E-00\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E-00\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E-00\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument15402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conti\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exte\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument82201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%try");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%try");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%try", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\'\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\'\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=\'\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument46207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\'\\\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\'\\\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=\'\\\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument99002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%nea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument28603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ne{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ne{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ne{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument47303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defia");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exte0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument9502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%try\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%try\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%try\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument87801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%faA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%faA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%faA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument48001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brea0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument82602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%e\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument32202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%loa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%loa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%loa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument85107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%sw0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%sw0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%sw0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%false\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falseA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falseA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%falseA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument79206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%false[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument58404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%false0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%falsea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%false{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument9706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%false", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%false_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%coa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%coa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%coa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument16705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaua");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaua");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument95502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%u\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%u\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%u\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%f\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%f\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%f\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%b");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%b");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%b", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument61902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%bra");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%bra");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%bra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument59905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\010\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\010\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\010\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument78601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%break\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%break0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument39805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breakA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breakA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%breakA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%break[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument24403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaka");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaka");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%breaka", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument91603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%break{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%break", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%break_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument15502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%break\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument24308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wha");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wha");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%wha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument12202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extena");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extena");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extena", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whila");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whila");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whila", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tha");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tha");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%tha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finala");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finala");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finala", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%i");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%i");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%i", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%n");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%n");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%n", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument25303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%d");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%d");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%d", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument99305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swita");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swita");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swita", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%t");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%t");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%t", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument20204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument47204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%thA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finally\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallyA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallyA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finallyA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument38905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finally[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument3604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallya");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallya");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finallya", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument39605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finally{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finally0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument89003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finally", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument55805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finally_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument52906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%falsa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument99401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument96401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tra");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tra");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%tra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument38801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%caa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%caa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%caa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finally\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument12104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%l");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%l");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%l", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument48301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nua");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nua");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%nua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument840()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%trya");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%trya");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%trya", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument81101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%false\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finalla");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finalla");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finalla", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ca");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ca");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument23203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defineA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defineA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defineA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defi{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument46401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dele0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26309()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%using\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%using0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument12504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usinga");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usinga");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usinga", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument424()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%using{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument24309()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%using", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usingA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usingA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usingA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument11901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%using\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument61205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%using_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usinga");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usinga");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usinga", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usingA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usingA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usingA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument69003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ca{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ca{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ca{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument58802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dele<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument45801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument15701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallya");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallya");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finallya", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument39304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tr0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tr0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%tr0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument11402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catcA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catcA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catcA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument75204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%falsA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument25602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%faa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%faa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%faa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaula");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaula");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaula", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaka");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaka");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%breaka", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument25501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=_\0\0￿\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=_\0\0￿\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0=_\0\0￿\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extend\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extendA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extendA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extendA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument6806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extend[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument97601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extend0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument63302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extenda");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extenda");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extenda", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extend{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extend", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument66101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extend\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extend_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument26805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extendA\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extendA\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extendA\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument37302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%br0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%br0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%br0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument5605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extenA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extenA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%extenA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument58601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finall0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument49701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0!\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0!\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0!\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument40306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0!$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0!$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0!$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0!\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0!\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%0E\0!\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument68006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument18406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%do");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%do");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%do", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument90105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%swit0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ne");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ne");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ne", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%try{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%try{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%try{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument89501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defauA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defauA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defauA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument41801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%￿0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%￿0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%￿0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument47901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%brea<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument25203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument53503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%final0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaula\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaula\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaula\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument04()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delea\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%delea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument58103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%usina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument29202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%lA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%lA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%lA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument18703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%whil", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument9801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%co0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%co0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%co0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument72401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%for[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%for[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%for[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument93501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%for");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%for");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%for", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument62305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%for\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%for\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%for\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ca");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ca");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument33507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%coa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%coa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%coa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument37102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%defaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument43707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument83704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%na");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%na");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%na", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument48403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%definea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument31605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%throA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument60405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%switc0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument79207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%finally0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument127()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contina\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contina\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%contina\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument94103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conta");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%conta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument71905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ta");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%breaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument61703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleta");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%deleta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument76408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%try");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%try");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%try", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument12601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%dea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument42801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catca");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catca");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument67501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fia");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument54002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ela");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ela");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%ela", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument38101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%w\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument230()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%r0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%r0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%r0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument56403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define÷[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define÷[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%define÷[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument57801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%coA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%coA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%coA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument70001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%rea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%rea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%rea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument66303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%exA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument13802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%foa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%foa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%foa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument50606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%doa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%doa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%doa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument10706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fina0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument73503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fora");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fora");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%fora", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument36713()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catch\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument80001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catchA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catchA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catchA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument95402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catch0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument98005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catch[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument37303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catcha");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catcha");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catcha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument19004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catch{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument34401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument77605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catch_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument78008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catch\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument4101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%catch0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument83401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%s\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%s\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%s\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void TokenizeDocument88902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continua");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continua");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%continua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize22203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.Tokenize(aphidLexer, "");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize81604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\0");
            AphidLexerTests.Tokenize(aphidLexer, "\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize61008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("9");
            AphidLexerTests.Tokenize(aphidLexer, "9");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("9", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("Y");
            AphidLexerTests.Tokenize(aphidLexer, "Y");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("Y", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize54303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.Tokenize(aphidLexer, "");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize98605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\0");
            AphidLexerTests.Tokenize(aphidLexer, "\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize32204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`");
            AphidLexerTests.Tokenize(aphidLexer, "`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K\0");
            AphidLexerTests.Tokenize(aphidLexer, "K\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize32506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("@");
            AphidLexerTests.Tokenize(aphidLexer, "@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize20303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("@\0");
            AphidLexerTests.Tokenize(aphidLexer, "@\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("@\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize19904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.Tokenize(aphidLexer, "");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize68604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K0");
            AphidLexerTests.Tokenize(aphidLexer, "K0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("Ka");
            AphidLexerTests.Tokenize(aphidLexer, "Ka");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("Ka", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize39001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("KA");
            AphidLexerTests.Tokenize(aphidLexer, "KA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("KA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize85302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K{");
            AphidLexerTests.Tokenize(aphidLexer, "K{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize87504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("@>");
            AphidLexerTests.Tokenize(aphidLexer, "@>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("@>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K[");
            AphidLexerTests.Tokenize(aphidLexer, "K[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize94801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K");
            AphidLexerTests.Tokenize(aphidLexer, "K");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<");
            AphidLexerTests.Tokenize(aphidLexer, "K<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize968()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`\0");
            AphidLexerTests.Tokenize(aphidLexer, "`\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`:");
            AphidLexerTests.Tokenize(aphidLexer, "`:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize61403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`!");
            AphidLexerTests.Tokenize(aphidLexer, "`!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<\0");
            AphidLexerTests.Tokenize(aphidLexer, "K<\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`@");
            AphidLexerTests.Tokenize(aphidLexer, "`@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize57604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<@");
            AphidLexerTests.Tokenize(aphidLexer, "K<@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K<@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize5410()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("Q<`");
            AphidLexerTests.Tokenize(aphidLexer, "Q<`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("Q<`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize80905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<~");
            AphidLexerTests.Tokenize(aphidLexer, "K<~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K<~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize86804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`~");
            AphidLexerTests.Tokenize(aphidLexer, "`~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize8403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<|");
            AphidLexerTests.Tokenize(aphidLexer, "K<|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K<|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`|");
            AphidLexerTests.Tokenize(aphidLexer, "`|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<!");
            AphidLexerTests.Tokenize(aphidLexer, "K<!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K<!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<:");
            AphidLexerTests.Tokenize(aphidLexer, "K<:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K<:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("``");
            AphidLexerTests.Tokenize(aphidLexer, "``");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("``", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize14607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K</");
            AphidLexerTests.Tokenize(aphidLexer, "K</");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K</", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize78403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`/");
            AphidLexerTests.Tokenize(aphidLexer, "`/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize26006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(" ");
            AphidLexerTests.Tokenize(aphidLexer, " ");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(" ", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize95401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("h");
            AphidLexerTests.Tokenize(aphidLexer, "h");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("h", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=");
            AphidLexerTests.Tokenize(aphidLexer, "=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=\0");
            AphidLexerTests.Tokenize(aphidLexer, "=\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize74505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=@");
            AphidLexerTests.Tokenize(aphidLexer, "=@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize3501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=~");
            AphidLexerTests.Tokenize(aphidLexer, "=~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize643()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=|");
            AphidLexerTests.Tokenize(aphidLexer, "=|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=!");
            AphidLexerTests.Tokenize(aphidLexer, "=!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize7903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=`");
            AphidLexerTests.Tokenize(aphidLexer, "=`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=:");
            AphidLexerTests.Tokenize(aphidLexer, "=:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize77802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=/");
            AphidLexerTests.Tokenize(aphidLexer, "=/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize38205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=.");
            AphidLexerTests.Tokenize(aphidLexer, "=.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize98205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<.");
            AphidLexerTests.Tokenize(aphidLexer, "K<.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K<.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize45205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`.");
            AphidLexerTests.Tokenize(aphidLexer, "`.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("j");
            AphidLexerTests.Tokenize(aphidLexer, "j");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("j", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize61305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("$");
            AphidLexerTests.Tokenize(aphidLexer, "$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("$\0");
            AphidLexerTests.Tokenize(aphidLexer, "$\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("$\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("$_");
            AphidLexerTests.Tokenize(aphidLexer, "$_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("$_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("$a");
            AphidLexerTests.Tokenize(aphidLexer, "$a");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("$a", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize57605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("$!");
            AphidLexerTests.Tokenize(aphidLexer, "$!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("$!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("$a\0");
            AphidLexerTests.Tokenize(aphidLexer, "$a\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("$a\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize80805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("$args");
            AphidLexerTests.Tokenize(aphidLexer, "$args");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("$args", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize66608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=?");
            AphidLexerTests.Tokenize(aphidLexer, "=?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`?");
            AphidLexerTests.Tokenize(aphidLexer, "`?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<?");
            AphidLexerTests.Tokenize(aphidLexer, "K<?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K<?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=]");
            AphidLexerTests.Tokenize(aphidLexer, "=]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize5703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<]");
            AphidLexerTests.Tokenize(aphidLexer, "K<]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K<]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize86702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`]");
            AphidLexerTests.Tokenize(aphidLexer, "`]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize95504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("i");
            AphidLexerTests.Tokenize(aphidLexer, "i");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("i", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("i\0");
            AphidLexerTests.Tokenize(aphidLexer, "i\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("i\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("iA");
            AphidLexerTests.Tokenize(aphidLexer, "iA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("iA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize13103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in");
            AphidLexerTests.Tokenize(aphidLexer, "in");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("in", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize18803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("if");
            AphidLexerTests.Tokenize(aphidLexer, "if");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("if", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize82002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ia");
            AphidLexerTests.Tokenize(aphidLexer, "ia");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("i{");
            AphidLexerTests.Tokenize(aphidLexer, "i{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("i{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("i0");
            AphidLexerTests.Tokenize(aphidLexer, "i0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("i0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize93502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("i");
            AphidLexerTests.Tokenize(aphidLexer, "i");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("i", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize96902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<-");
            AphidLexerTests.Tokenize(aphidLexer, "K<-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K<-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0");
            AphidLexerTests.Tokenize(aphidLexer, "0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize17105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0\0");
            AphidLexerTests.Tokenize(aphidLexer, "0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize66405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0.");
            AphidLexerTests.Tokenize(aphidLexer, "0.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0b");
            AphidLexerTests.Tokenize(aphidLexer, "0b");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0b", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize14608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:");
            AphidLexerTests.Tokenize(aphidLexer, "0:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize33005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:\0");
            AphidLexerTests.Tokenize(aphidLexer, "0:\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0:\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0x");
            AphidLexerTests.Tokenize(aphidLexer, "0x");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0x", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75709()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0::");
            AphidLexerTests.Tokenize(aphidLexer, "0::");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0::", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize51508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:`");
            AphidLexerTests.Tokenize(aphidLexer, "0:`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0:`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize14106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:|");
            AphidLexerTests.Tokenize(aphidLexer, "0:|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0:|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize64003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:~");
            AphidLexerTests.Tokenize(aphidLexer, "0:~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0:~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:!");
            AphidLexerTests.Tokenize(aphidLexer, "0:!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0:!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:/");
            AphidLexerTests.Tokenize(aphidLexer, "0:/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0:/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:.");
            AphidLexerTests.Tokenize(aphidLexer, "0:.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0:.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:?");
            AphidLexerTests.Tokenize(aphidLexer, "0:?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0:?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize80208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:]");
            AphidLexerTests.Tokenize(aphidLexer, "0:]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0:]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize82606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:-");
            AphidLexerTests.Tokenize(aphidLexer, "0:-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0:-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`-");
            AphidLexerTests.Tokenize(aphidLexer, "`-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize7507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=-");
            AphidLexerTests.Tokenize(aphidLexer, "=-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize71005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`,");
            AphidLexerTests.Tokenize(aphidLexer, "`,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=,");
            AphidLexerTests.Tokenize(aphidLexer, "=,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(";");
            AphidLexerTests.Tokenize(aphidLexer, ";");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(";", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|");
            AphidLexerTests.Tokenize(aphidLexer, "|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize56703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|\0");
            AphidLexerTests.Tokenize(aphidLexer, "|\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|:");
            AphidLexerTests.Tokenize(aphidLexer, "|:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|@");
            AphidLexerTests.Tokenize(aphidLexer, "|@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize63303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("||");
            AphidLexerTests.Tokenize(aphidLexer, "||");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("||", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize27908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|~");
            AphidLexerTests.Tokenize(aphidLexer, "|~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|`");
            AphidLexerTests.Tokenize(aphidLexer, "|`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|!");
            AphidLexerTests.Tokenize(aphidLexer, "|!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize95805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|/");
            AphidLexerTests.Tokenize(aphidLexer, "|/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize89304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|.");
            AphidLexerTests.Tokenize(aphidLexer, "|.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|?");
            AphidLexerTests.Tokenize(aphidLexer, "|?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize38102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|]");
            AphidLexerTests.Tokenize(aphidLexer, "|]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|-");
            AphidLexerTests.Tokenize(aphidLexer, "|-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize32205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!");
            AphidLexerTests.Tokenize(aphidLexer, "!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize82205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!\0");
            AphidLexerTests.Tokenize(aphidLexer, "!\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!:");
            AphidLexerTests.Tokenize(aphidLexer, "!:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize7508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!@");
            AphidLexerTests.Tokenize(aphidLexer, "!@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!!");
            AphidLexerTests.Tokenize(aphidLexer, "!!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!`");
            AphidLexerTests.Tokenize(aphidLexer, "!`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!|");
            AphidLexerTests.Tokenize(aphidLexer, "!|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!~");
            AphidLexerTests.Tokenize(aphidLexer, "!~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize41301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!/");
            AphidLexerTests.Tokenize(aphidLexer, "!/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize19905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!.");
            AphidLexerTests.Tokenize(aphidLexer, "!.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize39907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!?");
            AphidLexerTests.Tokenize(aphidLexer, "!?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize56802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!]");
            AphidLexerTests.Tokenize(aphidLexer, "!]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!-");
            AphidLexerTests.Tokenize(aphidLexer, "!-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize53101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:,");
            AphidLexerTests.Tokenize(aphidLexer, "0:,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0:,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize63902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|,");
            AphidLexerTests.Tokenize(aphidLexer, "|,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize88306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("Y<,");
            AphidLexerTests.Tokenize(aphidLexer, "Y<,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("Y<,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize10705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!,");
            AphidLexerTests.Tokenize(aphidLexer, "!,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize59802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`>");
            AphidLexerTests.Tokenize(aphidLexer, "`>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize89406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!>");
            AphidLexerTests.Tokenize(aphidLexer, "!>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=>");
            AphidLexerTests.Tokenize(aphidLexer, "=>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<>");
            AphidLexerTests.Tokenize(aphidLexer, "K<>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K<>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|>");
            AphidLexerTests.Tokenize(aphidLexer, "|>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:>");
            AphidLexerTests.Tokenize(aphidLexer, "0:>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0:>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize33102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`)");
            AphidLexerTests.Tokenize(aphidLexer, "`)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=)");
            AphidLexerTests.Tokenize(aphidLexer, "=)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:(");
            AphidLexerTests.Tokenize(aphidLexer, "0:(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0:(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!)");
            AphidLexerTests.Tokenize(aphidLexer, "!)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize71402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|)");
            AphidLexerTests.Tokenize(aphidLexer, "|)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize30707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\"");
            AphidLexerTests.Tokenize(aphidLexer, "\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("Y<*");
            AphidLexerTests.Tokenize(aphidLexer, "Y<*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("Y<*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|\\");
            AphidLexerTests.Tokenize(aphidLexer, "|\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize1503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:^");
            AphidLexerTests.Tokenize(aphidLexer, "0:^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0:^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<^");
            AphidLexerTests.Tokenize(aphidLexer, "K<^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K<^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!\\");
            AphidLexerTests.Tokenize(aphidLexer, "!\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=\\");
            AphidLexerTests.Tokenize(aphidLexer, "=\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize56901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`\\");
            AphidLexerTests.Tokenize(aphidLexer, "`\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b");
            AphidLexerTests.Tokenize(aphidLexer, "b");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("b", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b\0");
            AphidLexerTests.Tokenize(aphidLexer, "b\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("b\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize33504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("br");
            AphidLexerTests.Tokenize(aphidLexer, "br");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("br", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize37303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ba");
            AphidLexerTests.Tokenize(aphidLexer, "ba");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ba", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b0");
            AphidLexerTests.Tokenize(aphidLexer, "b0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("b0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("br\0");
            AphidLexerTests.Tokenize(aphidLexer, "br\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("br\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b<");
            AphidLexerTests.Tokenize(aphidLexer, "b<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("b<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize89205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bra");
            AphidLexerTests.Tokenize(aphidLexer, "bra");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("bra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bA");
            AphidLexerTests.Tokenize(aphidLexer, "bA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("bA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize18505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("br{");
            AphidLexerTests.Tokenize(aphidLexer, "br{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("br{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("brý");
            AphidLexerTests.Tokenize(aphidLexer, "brý");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("brý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bre");
            AphidLexerTests.Tokenize(aphidLexer, "bre");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("bre", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b[");
            AphidLexerTests.Tokenize(aphidLexer, "b[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("b[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("brA");
            AphidLexerTests.Tokenize(aphidLexer, "brA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("brA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize89305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("br0");
            AphidLexerTests.Tokenize(aphidLexer, "br0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("br0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bre0");
            AphidLexerTests.Tokenize(aphidLexer, "bre0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("bre0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("brea");
            AphidLexerTests.Tokenize(aphidLexer, "brea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("brea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breA");
            AphidLexerTests.Tokenize(aphidLexer, "breA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("breA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize51803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bre[");
            AphidLexerTests.Tokenize(aphidLexer, "bre[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("bre[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize88706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breb");
            AphidLexerTests.Tokenize(aphidLexer, "breb");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("breb", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize34102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b{");
            AphidLexerTests.Tokenize(aphidLexer, "b{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("b{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize58405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b");
            AphidLexerTests.Tokenize(aphidLexer, "b");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("b", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bre{");
            AphidLexerTests.Tokenize(aphidLexer, "bre{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("bre{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize28101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breaa");
            AphidLexerTests.Tokenize(aphidLexer, "breaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("breaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize92302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("break");
            AphidLexerTests.Tokenize(aphidLexer, "break");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("break", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize59508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bre");
            AphidLexerTests.Tokenize(aphidLexer, "bre");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("bre", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize85902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:)");
            AphidLexerTests.Tokenize(aphidLexer, "0:)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0:)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("Q<)");
            AphidLexerTests.Tokenize(aphidLexer, "Q<)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("Q<)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize41702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!*");
            AphidLexerTests.Tokenize(aphidLexer, "!*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`*");
            AphidLexerTests.Tokenize(aphidLexer, "`*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize89703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#");
            AphidLexerTests.Tokenize(aphidLexer, "#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize95106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#\0");
            AphidLexerTests.Tokenize(aphidLexer, "#\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#!");
            AphidLexerTests.Tokenize(aphidLexer, "#!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize30102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#:");
            AphidLexerTests.Tokenize(aphidLexer, "#:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#@");
            AphidLexerTests.Tokenize(aphidLexer, "#@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#|");
            AphidLexerTests.Tokenize(aphidLexer, "#|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize14302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#~");
            AphidLexerTests.Tokenize(aphidLexer, "#~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize36702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#`");
            AphidLexerTests.Tokenize(aphidLexer, "#`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize50406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#/");
            AphidLexerTests.Tokenize(aphidLexer, "#/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize19002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#.");
            AphidLexerTests.Tokenize(aphidLexer, "#.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize51106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#?");
            AphidLexerTests.Tokenize(aphidLexer, "#?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize84401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#]");
            AphidLexerTests.Tokenize(aphidLexer, "#]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize3804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#-");
            AphidLexerTests.Tokenize(aphidLexer, "#-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize58502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#,");
            AphidLexerTests.Tokenize(aphidLexer, "#,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16709()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#>");
            AphidLexerTests.Tokenize(aphidLexer, "#>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize61009()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#)");
            AphidLexerTests.Tokenize(aphidLexer, "#)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize95604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#\\");
            AphidLexerTests.Tokenize(aphidLexer, "#\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize32302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#*");
            AphidLexerTests.Tokenize(aphidLexer, "#*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize57403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=*");
            AphidLexerTests.Tokenize(aphidLexer, "=*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|*");
            AphidLexerTests.Tokenize(aphidLexer, "|*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize39406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`<");
            AphidLexerTests.Tokenize(aphidLexer, "`<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<<");
            AphidLexerTests.Tokenize(aphidLexer, "K<<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K<<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize59509()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<<\0");
            AphidLexerTests.Tokenize(aphidLexer, "K<<\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K<<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<<=");
            AphidLexerTests.Tokenize(aphidLexer, "K<<=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K<<=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|<");
            AphidLexerTests.Tokenize(aphidLexer, "|<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize74203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!<");
            AphidLexerTests.Tokenize(aphidLexer, "!<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize92804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=<");
            AphidLexerTests.Tokenize(aphidLexer, "=<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize68906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:<");
            AphidLexerTests.Tokenize(aphidLexer, "0:<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0:<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize67507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#<");
            AphidLexerTests.Tokenize(aphidLexer, "#<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize82404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:*");
            AphidLexerTests.Tokenize(aphidLexer, "0:*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0:*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize53004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`+");
            AphidLexerTests.Tokenize(aphidLexer, "`+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&");
            AphidLexerTests.Tokenize(aphidLexer, "&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize59103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&\0");
            AphidLexerTests.Tokenize(aphidLexer, "&\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize82206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&@");
            AphidLexerTests.Tokenize(aphidLexer, "&@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91212()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&!");
            AphidLexerTests.Tokenize(aphidLexer, "&!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&~");
            AphidLexerTests.Tokenize(aphidLexer, "&~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize39704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&:");
            AphidLexerTests.Tokenize(aphidLexer, "&:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize28508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&|");
            AphidLexerTests.Tokenize(aphidLexer, "&|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&`");
            AphidLexerTests.Tokenize(aphidLexer, "&`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize77803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&/");
            AphidLexerTests.Tokenize(aphidLexer, "&/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&.");
            AphidLexerTests.Tokenize(aphidLexer, "&.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&?");
            AphidLexerTests.Tokenize(aphidLexer, "&?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize80806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&]");
            AphidLexerTests.Tokenize(aphidLexer, "&]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&-");
            AphidLexerTests.Tokenize(aphidLexer, "&-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize76603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&,");
            AphidLexerTests.Tokenize(aphidLexer, "&,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize33605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&>");
            AphidLexerTests.Tokenize(aphidLexer, "&>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize32402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&)");
            AphidLexerTests.Tokenize(aphidLexer, "&)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&\\");
            AphidLexerTests.Tokenize(aphidLexer, "&\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&*");
            AphidLexerTests.Tokenize(aphidLexer, "&*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91213()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&<");
            AphidLexerTests.Tokenize(aphidLexer, "&<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize80209()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("p");
            AphidLexerTests.Tokenize(aphidLexer, "p");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("p", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize57505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&+");
            AphidLexerTests.Tokenize(aphidLexer, "&+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|+");
            AphidLexerTests.Tokenize(aphidLexer, "|+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=+");
            AphidLexerTests.Tokenize(aphidLexer, "=+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("Q<+");
            AphidLexerTests.Tokenize(aphidLexer, "Q<+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("Q<+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize68907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#+");
            AphidLexerTests.Tokenize(aphidLexer, "#+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!+");
            AphidLexerTests.Tokenize(aphidLexer, "!+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|(");
            AphidLexerTests.Tokenize(aphidLexer, "|(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize93203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=(");
            AphidLexerTests.Tokenize(aphidLexer, "=(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("A<(");
            AphidLexerTests.Tokenize(aphidLexer, "A<(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("A<(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize82607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#^");
            AphidLexerTests.Tokenize(aphidLexer, "#^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize56103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<_");
            AphidLexerTests.Tokenize(aphidLexer, "K<_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K<_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize8804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#(");
            AphidLexerTests.Tokenize(aphidLexer, "#(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=^");
            AphidLexerTests.Tokenize(aphidLexer, "=^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:+");
            AphidLexerTests.Tokenize(aphidLexer, "0:+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0:+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize64204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`(");
            AphidLexerTests.Tokenize(aphidLexer, "`(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize51403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%");
            AphidLexerTests.Tokenize(aphidLexer, "%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize18506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%\0");
            AphidLexerTests.Tokenize(aphidLexer, "%\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize92303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%!");
            AphidLexerTests.Tokenize(aphidLexer, "%!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%:");
            AphidLexerTests.Tokenize(aphidLexer, "%:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize87306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%@");
            AphidLexerTests.Tokenize(aphidLexer, "%@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize93404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%`");
            AphidLexerTests.Tokenize(aphidLexer, "%`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%|");
            AphidLexerTests.Tokenize(aphidLexer, "%|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%~");
            AphidLexerTests.Tokenize(aphidLexer, "%~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%/");
            AphidLexerTests.Tokenize(aphidLexer, "%/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%.");
            AphidLexerTests.Tokenize(aphidLexer, "%.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize63006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%?");
            AphidLexerTests.Tokenize(aphidLexer, "%?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%]");
            AphidLexerTests.Tokenize(aphidLexer, "%]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize51107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%-");
            AphidLexerTests.Tokenize(aphidLexer, "%-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize45206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%,");
            AphidLexerTests.Tokenize(aphidLexer, "%,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35610()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%>");
            AphidLexerTests.Tokenize(aphidLexer, "%>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize74105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%)");
            AphidLexerTests.Tokenize(aphidLexer, "%)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%\\");
            AphidLexerTests.Tokenize(aphidLexer, "%\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%*");
            AphidLexerTests.Tokenize(aphidLexer, "%*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize57905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%<");
            AphidLexerTests.Tokenize(aphidLexer, "%<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize45504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%+");
            AphidLexerTests.Tokenize(aphidLexer, "%+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize53502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!(");
            AphidLexerTests.Tokenize(aphidLexer, "!(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("$ar");
            AphidLexerTests.Tokenize(aphidLexer, "$ar");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("$ar", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&(");
            AphidLexerTests.Tokenize(aphidLexer, "&(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize74106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%^");
            AphidLexerTests.Tokenize(aphidLexer, "%^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(":@");
            AphidLexerTests.Tokenize(aphidLexer, ":@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(":@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%(");
            AphidLexerTests.Tokenize(aphidLexer, "%(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize93106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|^");
            AphidLexerTests.Tokenize(aphidLexer, "|^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75310()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!^");
            AphidLexerTests.Tokenize(aphidLexer, "!^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize64004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`^");
            AphidLexerTests.Tokenize(aphidLexer, "`^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize7509()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("x");
            AphidLexerTests.Tokenize(aphidLexer, "x");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("x", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24109()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\"\0");
            AphidLexerTests.Tokenize(aphidLexer, "\"\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\"\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4309()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\"\"");
            AphidLexerTests.Tokenize(aphidLexer, "\"\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\"\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&^");
            AphidLexerTests.Tokenize(aphidLexer, "&^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize26203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("==");
            AphidLexerTests.Tokenize(aphidLexer, "==");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("==", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize3001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&=");
            AphidLexerTests.Tokenize(aphidLexer, "&=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize59510()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%=");
            AphidLexerTests.Tokenize(aphidLexer, "%=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize77703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#=");
            AphidLexerTests.Tokenize(aphidLexer, "#=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize28509()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`=");
            AphidLexerTests.Tokenize(aphidLexer, "`=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize92506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|=");
            AphidLexerTests.Tokenize(aphidLexer, "|=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize53202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!=");
            AphidLexerTests.Tokenize(aphidLexer, "!=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize71102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`\"");
            AphidLexerTests.Tokenize(aphidLexer, "`\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize50801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#\"");
            AphidLexerTests.Tokenize(aphidLexer, "#\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize5007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\'");
            AphidLexerTests.Tokenize(aphidLexer, "\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!\"");
            AphidLexerTests.Tokenize(aphidLexer, "!\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("z");
            AphidLexerTests.Tokenize(aphidLexer, "z");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("z", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=\"");
            AphidLexerTests.Tokenize(aphidLexer, "=\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize37503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%\"");
            AphidLexerTests.Tokenize(aphidLexer, "%\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&\"");
            AphidLexerTests.Tokenize(aphidLexer, "&\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize18703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|\"");
            AphidLexerTests.Tokenize(aphidLexer, "|\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize1407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`#");
            AphidLexerTests.Tokenize(aphidLexer, "`#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize71602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("##");
            AphidLexerTests.Tokenize(aphidLexer, "##");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("##", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("y");
            AphidLexerTests.Tokenize(aphidLexer, "y");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("y", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize1408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=#");
            AphidLexerTests.Tokenize(aphidLexer, "=#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize58007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!#");
            AphidLexerTests.Tokenize(aphidLexer, "!#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%#");
            AphidLexerTests.Tokenize(aphidLexer, "%#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize71504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&#");
            AphidLexerTests.Tokenize(aphidLexer, "&#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|#");
            AphidLexerTests.Tokenize(aphidLexer, "|#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">");
            AphidLexerTests.Tokenize(aphidLexer, ">");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize30307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">\0");
            AphidLexerTests.Tokenize(aphidLexer, ">\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">@");
            AphidLexerTests.Tokenize(aphidLexer, ">@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">:");
            AphidLexerTests.Tokenize(aphidLexer, ">:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize93002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">~");
            AphidLexerTests.Tokenize(aphidLexer, ">~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">`");
            AphidLexerTests.Tokenize(aphidLexer, ">`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">!");
            AphidLexerTests.Tokenize(aphidLexer, ">!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">|");
            AphidLexerTests.Tokenize(aphidLexer, ">|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize18006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">/");
            AphidLexerTests.Tokenize(aphidLexer, ">/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize68908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">.");
            AphidLexerTests.Tokenize(aphidLexer, ">.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">?");
            AphidLexerTests.Tokenize(aphidLexer, ">?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize3805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">]");
            AphidLexerTests.Tokenize(aphidLexer, ">]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">-");
            AphidLexerTests.Tokenize(aphidLexer, ">-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">,");
            AphidLexerTests.Tokenize(aphidLexer, ">,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75710()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">>");
            AphidLexerTests.Tokenize(aphidLexer, ">>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize88307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">>\0");
            AphidLexerTests.Tokenize(aphidLexer, ">>\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">>\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">>=");
            AphidLexerTests.Tokenize(aphidLexer, ">>=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">>=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">)");
            AphidLexerTests.Tokenize(aphidLexer, ">)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize58008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">\\");
            AphidLexerTests.Tokenize(aphidLexer, ">\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">*");
            AphidLexerTests.Tokenize(aphidLexer, ">*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("><");
            AphidLexerTests.Tokenize(aphidLexer, "><");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("><", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize39103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">+");
            AphidLexerTests.Tokenize(aphidLexer, ">+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">(");
            AphidLexerTests.Tokenize(aphidLexer, ">(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize33305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">^");
            AphidLexerTests.Tokenize(aphidLexer, ">^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize7802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">=");
            AphidLexerTests.Tokenize(aphidLexer, ">=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">\"");
            AphidLexerTests.Tokenize(aphidLexer, ">\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">#");
            AphidLexerTests.Tokenize(aphidLexer, ">#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|_");
            AphidLexerTests.Tokenize(aphidLexer, "|_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize3604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&_");
            AphidLexerTests.Tokenize(aphidLexer, "&_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize37201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=_");
            AphidLexerTests.Tokenize(aphidLexer, "=_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize74705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("I<\\");
            AphidLexerTests.Tokenize(aphidLexer, "I<\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("I<\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize96206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%_");
            AphidLexerTests.Tokenize(aphidLexer, "%_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize59803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`_");
            AphidLexerTests.Tokenize(aphidLexer, "`_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91410()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">_");
            AphidLexerTests.Tokenize(aphidLexer, ">_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#_");
            AphidLexerTests.Tokenize(aphidLexer, "#_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!_");
            AphidLexerTests.Tokenize(aphidLexer, "!_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&;");
            AphidLexerTests.Tokenize(aphidLexer, "&;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize31304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%;");
            AphidLexerTests.Tokenize(aphidLexer, "%;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize72401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#;");
            AphidLexerTests.Tokenize(aphidLexer, "#;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|;");
            AphidLexerTests.Tokenize(aphidLexer, "|;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!;");
            AphidLexerTests.Tokenize(aphidLexer, "!;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize1409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=;");
            AphidLexerTests.Tokenize(aphidLexer, "=;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24110()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`;");
            AphidLexerTests.Tokenize(aphidLexer, "`;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize57906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">;");
            AphidLexerTests.Tokenize(aphidLexer, ">;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize8704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=$");
            AphidLexerTests.Tokenize(aphidLexer, "=$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70509()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%$");
            AphidLexerTests.Tokenize(aphidLexer, "%$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!$");
            AphidLexerTests.Tokenize(aphidLexer, "!$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize87202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&$");
            AphidLexerTests.Tokenize(aphidLexer, "&$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize22802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.Tokenize(aphidLexer, "");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize28510()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("r");
            AphidLexerTests.Tokenize(aphidLexer, "r");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("r", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize5107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("r\0");
            AphidLexerTests.Tokenize(aphidLexer, "r\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("r\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize76804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("re");
            AphidLexerTests.Tokenize(aphidLexer, "re");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("re", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("re\0");
            AphidLexerTests.Tokenize(aphidLexer, "re\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("re\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("reA");
            AphidLexerTests.Tokenize(aphidLexer, "reA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("reA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("r0");
            AphidLexerTests.Tokenize(aphidLexer, "r0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("r0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize28703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("re[");
            AphidLexerTests.Tokenize(aphidLexer, "re[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("re[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize1005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("rea");
            AphidLexerTests.Tokenize(aphidLexer, "rea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("rea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize94602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ret");
            AphidLexerTests.Tokenize(aphidLexer, "ret");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ret", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("re{");
            AphidLexerTests.Tokenize(aphidLexer, "re{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("re{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize27403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ra");
            AphidLexerTests.Tokenize(aphidLexer, "ra");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize85602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("re0");
            AphidLexerTests.Tokenize(aphidLexer, "re0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("re0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("r<");
            AphidLexerTests.Tokenize(aphidLexer, "r<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("r<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("reý");
            AphidLexerTests.Tokenize(aphidLexer, "reý");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("reý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("rA");
            AphidLexerTests.Tokenize(aphidLexer, "rA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("rA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("r{");
            AphidLexerTests.Tokenize(aphidLexer, "r{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("r{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("r");
            AphidLexerTests.Tokenize(aphidLexer, "r");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("r", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize93805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">$");
            AphidLexerTests.Tokenize(aphidLexer, ">$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize88406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`$");
            AphidLexerTests.Tokenize(aphidLexer, "`$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize88902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|$");
            AphidLexerTests.Tokenize(aphidLexer, "|$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97209()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#$");
            AphidLexerTests.Tokenize(aphidLexer, "#$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=&");
            AphidLexerTests.Tokenize(aphidLexer, "=&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#&");
            AphidLexerTests.Tokenize(aphidLexer, "#&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize18608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">&");
            AphidLexerTests.Tokenize(aphidLexer, ">&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize28603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?\0");
            AphidLexerTests.Tokenize(aphidLexer, "?\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize52902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?:");
            AphidLexerTests.Tokenize(aphidLexer, "?:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize57205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?@");
            AphidLexerTests.Tokenize(aphidLexer, "?@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?`");
            AphidLexerTests.Tokenize(aphidLexer, "?`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize96508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?~");
            AphidLexerTests.Tokenize(aphidLexer, "?~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize52802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?!");
            AphidLexerTests.Tokenize(aphidLexer, "?!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize94702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?|");
            AphidLexerTests.Tokenize(aphidLexer, "?|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize26905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?/");
            AphidLexerTests.Tokenize(aphidLexer, "?/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize28803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?.");
            AphidLexerTests.Tokenize(aphidLexer, "?.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize56205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("??");
            AphidLexerTests.Tokenize(aphidLexer, "??");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("??", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?]");
            AphidLexerTests.Tokenize(aphidLexer, "?]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?-");
            AphidLexerTests.Tokenize(aphidLexer, "?-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?,");
            AphidLexerTests.Tokenize(aphidLexer, "?,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?>");
            AphidLexerTests.Tokenize(aphidLexer, "?>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?)");
            AphidLexerTests.Tokenize(aphidLexer, "?)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize183()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?\\");
            AphidLexerTests.Tokenize(aphidLexer, "?\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?*");
            AphidLexerTests.Tokenize(aphidLexer, "?*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?<");
            AphidLexerTests.Tokenize(aphidLexer, "?<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?+");
            AphidLexerTests.Tokenize(aphidLexer, "?+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize59912()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?^");
            AphidLexerTests.Tokenize(aphidLexer, "?^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize45505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?(");
            AphidLexerTests.Tokenize(aphidLexer, "?(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize41606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?=");
            AphidLexerTests.Tokenize(aphidLexer, "?=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize27501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?\"");
            AphidLexerTests.Tokenize(aphidLexer, "?\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize27909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?#");
            AphidLexerTests.Tokenize(aphidLexer, "?#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize56608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?_");
            AphidLexerTests.Tokenize(aphidLexer, "?_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize93601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?;");
            AphidLexerTests.Tokenize(aphidLexer, "?;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize5411()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?$");
            AphidLexerTests.Tokenize(aphidLexer, "?$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize88308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.Tokenize(aphidLexer, "");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!&");
            AphidLexerTests.Tokenize(aphidLexer, "!&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`&");
            AphidLexerTests.Tokenize(aphidLexer, "`&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|&");
            AphidLexerTests.Tokenize(aphidLexer, "|&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize31502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&&");
            AphidLexerTests.Tokenize(aphidLexer, "&&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("q");
            AphidLexerTests.Tokenize(aphidLexer, "q");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("q", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize41102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?&");
            AphidLexerTests.Tokenize(aphidLexer, "?&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize14201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%&");
            AphidLexerTests.Tokenize(aphidLexer, "%&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize10109()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d");
            AphidLexerTests.Tokenize(aphidLexer, "d");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("d", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize98606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d\0");
            AphidLexerTests.Tokenize(aphidLexer, "d\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("d\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d0");
            AphidLexerTests.Tokenize(aphidLexer, "d0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("d0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("dA");
            AphidLexerTests.Tokenize(aphidLexer, "dA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("dA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d<");
            AphidLexerTests.Tokenize(aphidLexer, "d<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("d<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize79403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("do");
            AphidLexerTests.Tokenize(aphidLexer, "do");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("do", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize56403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d[");
            AphidLexerTests.Tokenize(aphidLexer, "d[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("d[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("de");
            AphidLexerTests.Tokenize(aphidLexer, "de");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("de", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize85005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("de\0");
            AphidLexerTests.Tokenize(aphidLexer, "de\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("de\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("de0");
            AphidLexerTests.Tokenize(aphidLexer, "de0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("de0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deA");
            AphidLexerTests.Tokenize(aphidLexer, "deA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("deA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("da");
            AphidLexerTests.Tokenize(aphidLexer, "da");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("da", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize96107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("def");
            AphidLexerTests.Tokenize(aphidLexer, "def");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("def", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d{");
            AphidLexerTests.Tokenize(aphidLexer, "d{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("d{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize98607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("de[");
            AphidLexerTests.Tokenize(aphidLexer, "de[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("de[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize85406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defb");
            AphidLexerTests.Tokenize(aphidLexer, "defb");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defb", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize33606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("def{");
            AphidLexerTests.Tokenize(aphidLexer, "def{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("def{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize36201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defA");
            AphidLexerTests.Tokenize(aphidLexer, "defA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize39303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d");
            AphidLexerTests.Tokenize(aphidLexer, "d");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("d", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize95505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("def");
            AphidLexerTests.Tokenize(aphidLexer, "def");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("def", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("del");
            AphidLexerTests.Tokenize(aphidLexer, "del");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("del", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize81201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defa");
            AphidLexerTests.Tokenize(aphidLexer, "defa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize51804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("dela");
            AphidLexerTests.Tokenize(aphidLexer, "dela");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("dela", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize81902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("del{");
            AphidLexerTests.Tokenize(aphidLexer, "del{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("del{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("del");
            AphidLexerTests.Tokenize(aphidLexer, "del");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("del", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize34702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("def0");
            AphidLexerTests.Tokenize(aphidLexer, "def0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("def0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defau");
            AphidLexerTests.Tokenize(aphidLexer, "defau");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defau", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize3806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delA");
            AphidLexerTests.Tokenize(aphidLexer, "delA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("delA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("dea");
            AphidLexerTests.Tokenize(aphidLexer, "dea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("dea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("dele");
            AphidLexerTests.Tokenize(aphidLexer, "dele");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("dele", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("de{");
            AphidLexerTests.Tokenize(aphidLexer, "de{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("de{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize50704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delea");
            AphidLexerTests.Tokenize(aphidLexer, "delea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("delea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize92103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defaa");
            AphidLexerTests.Tokenize(aphidLexer, "defaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize66609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("del0");
            AphidLexerTests.Tokenize(aphidLexer, "del0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("del0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize26204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("de");
            AphidLexerTests.Tokenize(aphidLexer, "de");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("de", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize95806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defi");
            AphidLexerTests.Tokenize(aphidLexer, "defi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize86703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delet");
            AphidLexerTests.Tokenize(aphidLexer, "delet");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("delet", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize94502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defin");
            AphidLexerTests.Tokenize(aphidLexer, "defin");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize37003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delete");
            AphidLexerTests.Tokenize(aphidLexer, "delete");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("delete", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize30004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defia");
            AphidLexerTests.Tokenize(aphidLexer, "defia");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize18007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`%");
            AphidLexerTests.Tokenize(aphidLexer, "`%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=%");
            AphidLexerTests.Tokenize(aphidLexer, "=%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#%");
            AphidLexerTests.Tokenize(aphidLexer, "#%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?%");
            AphidLexerTests.Tokenize(aphidLexer, "?%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize68802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|%");
            AphidLexerTests.Tokenize(aphidLexer, "|%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize88505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">%");
            AphidLexerTests.Tokenize(aphidLexer, ">%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize82003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!%");
            AphidLexerTests.Tokenize(aphidLexer, "!%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize33703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.Tokenize(aphidLexer, "");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize89206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&%");
            AphidLexerTests.Tokenize(aphidLexer, "&%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize61404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%%");
            AphidLexerTests.Tokenize(aphidLexer, "%%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize81504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(":\\");
            AphidLexerTests.Tokenize(aphidLexer, ":\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(":\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize56609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|\'");
            AphidLexerTests.Tokenize(aphidLexer, "|\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("|\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize30904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">\'");
            AphidLexerTests.Tokenize(aphidLexer, ">\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(">\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6109()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!\'");
            AphidLexerTests.Tokenize(aphidLexer, "!\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize85202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.Tokenize(aphidLexer, "");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize88407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?\'");
            AphidLexerTests.Tokenize(aphidLexer, "?\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("?\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize66406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%\'");
            AphidLexerTests.Tokenize(aphidLexer, "%\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize19706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#\'");
            AphidLexerTests.Tokenize(aphidLexer, "#\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("#\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70009()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`\'");
            AphidLexerTests.Tokenize(aphidLexer, "`\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("`\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("c");
            AphidLexerTests.Tokenize(aphidLexer, "c");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("c", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize95909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("c\0");
            AphidLexerTests.Tokenize(aphidLexer, "c\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("c\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize39304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cA");
            AphidLexerTests.Tokenize(aphidLexer, "cA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize22502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cb");
            AphidLexerTests.Tokenize(aphidLexer, "cb");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cb", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize14804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ca");
            AphidLexerTests.Tokenize(aphidLexer, "ca");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ca\0");
            AphidLexerTests.Tokenize(aphidLexer, "ca\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ca\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize37804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("c[");
            AphidLexerTests.Tokenize(aphidLexer, "c[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("c[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("co");
            AphidLexerTests.Tokenize(aphidLexer, "co");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("co", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat");
            AphidLexerTests.Tokenize(aphidLexer, "cat");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cat", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize39407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("c0");
            AphidLexerTests.Tokenize(aphidLexer, "c0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("c0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("co\0");
            AphidLexerTests.Tokenize(aphidLexer, "co\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("co\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("c{");
            AphidLexerTests.Tokenize(aphidLexer, "c{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("c{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize74904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("caA");
            AphidLexerTests.Tokenize(aphidLexer, "caA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("caA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize66610()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("caa");
            AphidLexerTests.Tokenize(aphidLexer, "caa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("caa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize85105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("coa");
            AphidLexerTests.Tokenize(aphidLexer, "coa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("coa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize26803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("c");
            AphidLexerTests.Tokenize(aphidLexer, "c");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("c", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("co{");
            AphidLexerTests.Tokenize(aphidLexer, "co{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("co{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("coý");
            AphidLexerTests.Tokenize(aphidLexer, "coý");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("coý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ca{");
            AphidLexerTests.Tokenize(aphidLexer, "ca{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ca{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize93303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("caý");
            AphidLexerTests.Tokenize(aphidLexer, "caý");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("caý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97210()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("con");
            AphidLexerTests.Tokenize(aphidLexer, "con");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("con", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("co0");
            AphidLexerTests.Tokenize(aphidLexer, "co0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("co0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("con0");
            AphidLexerTests.Tokenize(aphidLexer, "con0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("con0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize3107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ca0");
            AphidLexerTests.Tokenize(aphidLexer, "ca0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ca0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize14408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("coA");
            AphidLexerTests.Tokenize(aphidLexer, "coA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("coA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize72903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conA");
            AphidLexerTests.Tokenize(aphidLexer, "conA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("conA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize27604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("con[");
            AphidLexerTests.Tokenize(aphidLexer, "con[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("con[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize79602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cona");
            AphidLexerTests.Tokenize(aphidLexer, "cona");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cona", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize96108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cont");
            AphidLexerTests.Tokenize(aphidLexer, "cont");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cont", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("con{");
            AphidLexerTests.Tokenize(aphidLexer, "con{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("con{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conta");
            AphidLexerTests.Tokenize(aphidLexer, "conta");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("conta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conti");
            AphidLexerTests.Tokenize(aphidLexer, "conti");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("conti", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize13002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cata");
            AphidLexerTests.Tokenize(aphidLexer, "cata");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cata", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catc");
            AphidLexerTests.Tokenize(aphidLexer, "catc");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75711()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat0");
            AphidLexerTests.Tokenize(aphidLexer, "cat0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cat0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize84204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{");
            AphidLexerTests.Tokenize(aphidLexer, "cat{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cat{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize41901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat");
            AphidLexerTests.Tokenize(aphidLexer, "cat");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cat", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catA");
            AphidLexerTests.Tokenize(aphidLexer, "catA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize86207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("con");
            AphidLexerTests.Tokenize(aphidLexer, "con");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("con", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catch");
            AphidLexerTests.Tokenize(aphidLexer, "catch");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize32706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catca");
            AphidLexerTests.Tokenize(aphidLexer, "catca");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize63205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=\'");
            AphidLexerTests.Tokenize(aphidLexer, "=\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("=\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&\'");
            AphidLexerTests.Tokenize(aphidLexer, "&\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("&\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.Tokenize(aphidLexer, "");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize64104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("s");
            AphidLexerTests.Tokenize(aphidLexer, "s");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("s", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize88408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("s\0");
            AphidLexerTests.Tokenize(aphidLexer, "s\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("s\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sA");
            AphidLexerTests.Tokenize(aphidLexer, "sA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("sA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize38005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sa");
            AphidLexerTests.Tokenize(aphidLexer, "sa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("sa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("s{");
            AphidLexerTests.Tokenize(aphidLexer, "s{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("s{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("s0");
            AphidLexerTests.Tokenize(aphidLexer, "s0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("s0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize59401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sw");
            AphidLexerTests.Tokenize(aphidLexer, "sw");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("sw", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize32707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("s");
            AphidLexerTests.Tokenize(aphidLexer, "s");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("s", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sw\0");
            AphidLexerTests.Tokenize(aphidLexer, "sw\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("sw\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sw0");
            AphidLexerTests.Tokenize(aphidLexer, "sw0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("sw0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize8805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swa");
            AphidLexerTests.Tokenize(aphidLexer, "swa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swA");
            AphidLexerTests.Tokenize(aphidLexer, "swA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sw{");
            AphidLexerTests.Tokenize(aphidLexer, "sw{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("sw{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swý");
            AphidLexerTests.Tokenize(aphidLexer, "swý");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swi");
            AphidLexerTests.Tokenize(aphidLexer, "swi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize3605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swia");
            AphidLexerTests.Tokenize(aphidLexer, "swia");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize28304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swi{");
            AphidLexerTests.Tokenize(aphidLexer, "swi{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swi{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize80506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swi0");
            AphidLexerTests.Tokenize(aphidLexer, "swi0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swi0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize27605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swit");
            AphidLexerTests.Tokenize(aphidLexer, "swit");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swit", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize64205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switc");
            AphidLexerTests.Tokenize(aphidLexer, "switc");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swi");
            AphidLexerTests.Tokenize(aphidLexer, "swi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize41103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swiA");
            AphidLexerTests.Tokenize(aphidLexer, "swiA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91411()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swita");
            AphidLexerTests.Tokenize(aphidLexer, "swita");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swita", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize32801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switch");
            AphidLexerTests.Tokenize(aphidLexer, "switch");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize92206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.Tokenize(aphidLexer, "");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("e");
            AphidLexerTests.Tokenize(aphidLexer, "e");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("e", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75311()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("e\0");
            AphidLexerTests.Tokenize(aphidLexer, "e\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("e\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize78802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("e0");
            AphidLexerTests.Tokenize(aphidLexer, "e0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("e0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize61903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("el");
            AphidLexerTests.Tokenize(aphidLexer, "el");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("el", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize56803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("el\0");
            AphidLexerTests.Tokenize(aphidLexer, "el\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("el\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("eA");
            AphidLexerTests.Tokenize(aphidLexer, "eA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("eA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("e[");
            AphidLexerTests.Tokenize(aphidLexer, "e[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("e[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ea");
            AphidLexerTests.Tokenize(aphidLexer, "ea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elA");
            AphidLexerTests.Tokenize(aphidLexer, "elA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("elA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize81102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("els");
            AphidLexerTests.Tokenize(aphidLexer, "els");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("els", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize95107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("el[");
            AphidLexerTests.Tokenize(aphidLexer, "el[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("el[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75312()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ela");
            AphidLexerTests.Tokenize(aphidLexer, "ela");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ela", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize87505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("el0");
            AphidLexerTests.Tokenize(aphidLexer, "el0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("el0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize64707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ex");
            AphidLexerTests.Tokenize(aphidLexer, "ex");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ex", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("e{");
            AphidLexerTests.Tokenize(aphidLexer, "e{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("e{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70510()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ex\0");
            AphidLexerTests.Tokenize(aphidLexer, "ex\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ex\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exa");
            AphidLexerTests.Tokenize(aphidLexer, "exa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("exa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize74506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ex0");
            AphidLexerTests.Tokenize(aphidLexer, "ex0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ex0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize3606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("el{");
            AphidLexerTests.Tokenize(aphidLexer, "el{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("el{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize56704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("e");
            AphidLexerTests.Tokenize(aphidLexer, "e");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("e", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4310()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("else");
            AphidLexerTests.Tokenize(aphidLexer, "else");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("else", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize87703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elý");
            AphidLexerTests.Tokenize(aphidLexer, "elý");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("elý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("els0");
            AphidLexerTests.Tokenize(aphidLexer, "els0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("els0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65710()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elsa");
            AphidLexerTests.Tokenize(aphidLexer, "elsa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("elsa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ex<");
            AphidLexerTests.Tokenize(aphidLexer, "ex<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ex<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize79702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("els{");
            AphidLexerTests.Tokenize(aphidLexer, "els{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("els{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize95108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext");
            AphidLexerTests.Tokenize(aphidLexer, "ext");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ext", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elsA");
            AphidLexerTests.Tokenize(aphidLexer, "elsA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("elsA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize38702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exA");
            AphidLexerTests.Tokenize(aphidLexer, "exA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("exA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize58406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exta");
            AphidLexerTests.Tokenize(aphidLexer, "exta");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("exta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize26302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext0");
            AphidLexerTests.Tokenize(aphidLexer, "ext0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ext0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize87805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext{");
            AphidLexerTests.Tokenize(aphidLexer, "ext{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ext{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize1904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext");
            AphidLexerTests.Tokenize(aphidLexer, "ext");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ext", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize79001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exte");
            AphidLexerTests.Tokenize(aphidLexer, "exte");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("exte", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize20205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("els");
            AphidLexerTests.Tokenize(aphidLexer, "els");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("els", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exten");
            AphidLexerTests.Tokenize(aphidLexer, "exten");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("exten", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize84902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extA");
            AphidLexerTests.Tokenize(aphidLexer, "extA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("extA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extea");
            AphidLexerTests.Tokenize(aphidLexer, "extea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("extea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize22004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ex{");
            AphidLexerTests.Tokenize(aphidLexer, "ex{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ex{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize26605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exý");
            AphidLexerTests.Tokenize(aphidLexer, "exý");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("exý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extend");
            AphidLexerTests.Tokenize(aphidLexer, "extend");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("extend", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.Tokenize(aphidLexer, "");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("f");
            AphidLexerTests.Tokenize(aphidLexer, "f");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("f", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize3901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("f\0");
            AphidLexerTests.Tokenize(aphidLexer, "f\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("f\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fi");
            AphidLexerTests.Tokenize(aphidLexer, "fi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize76805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fo");
            AphidLexerTests.Tokenize(aphidLexer, "fo");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fo", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize58102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fo\0");
            AphidLexerTests.Tokenize(aphidLexer, "fo\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fo\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize14107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fi\0");
            AphidLexerTests.Tokenize(aphidLexer, "fi\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize98902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("f0");
            AphidLexerTests.Tokenize(aphidLexer, "f0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("f0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fiA");
            AphidLexerTests.Tokenize(aphidLexer, "fiA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize41203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("foA");
            AphidLexerTests.Tokenize(aphidLexer, "foA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("foA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize17402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fin");
            AphidLexerTests.Tokenize(aphidLexer, "fin");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize80507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("for");
            AphidLexerTests.Tokenize(aphidLexer, "for");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("for", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("foa");
            AphidLexerTests.Tokenize(aphidLexer, "foa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("foa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize8601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fo0");
            AphidLexerTests.Tokenize(aphidLexer, "fo0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fo0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize31305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fia");
            AphidLexerTests.Tokenize(aphidLexer, "fia");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finb");
            AphidLexerTests.Tokenize(aphidLexer, "finb");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("finb", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fA");
            AphidLexerTests.Tokenize(aphidLexer, "fA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize93806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finA");
            AphidLexerTests.Tokenize(aphidLexer, "finA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("finA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fo{");
            AphidLexerTests.Tokenize(aphidLexer, "fo{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fo{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fin0");
            AphidLexerTests.Tokenize(aphidLexer, "fin0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fin0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fi0");
            AphidLexerTests.Tokenize(aphidLexer, "fi0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fi0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize39803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fi{");
            AphidLexerTests.Tokenize(aphidLexer, "fi{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fi{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize51004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fin[");
            AphidLexerTests.Tokenize(aphidLexer, "fin[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fin[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fa");
            AphidLexerTests.Tokenize(aphidLexer, "fa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fina");
            AphidLexerTests.Tokenize(aphidLexer, "fina");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize14303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fa\0");
            AphidLexerTests.Tokenize(aphidLexer, "fa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize67907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("f[");
            AphidLexerTests.Tokenize(aphidLexer, "f[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("f[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize98102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fb");
            AphidLexerTests.Tokenize(aphidLexer, "fb");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fb", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("faa");
            AphidLexerTests.Tokenize(aphidLexer, "faa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("faa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fin{");
            AphidLexerTests.Tokenize(aphidLexer, "fin{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fin{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("faA");
            AphidLexerTests.Tokenize(aphidLexer, "faA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("faA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize33401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fin");
            AphidLexerTests.Tokenize(aphidLexer, "fin");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize20002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fa0");
            AphidLexerTests.Tokenize(aphidLexer, "fa0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fa0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize82608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fa[");
            AphidLexerTests.Tokenize(aphidLexer, "fa[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fa[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize96109()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fal");
            AphidLexerTests.Tokenize(aphidLexer, "fal");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fal", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize50906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("foý");
            AphidLexerTests.Tokenize(aphidLexer, "foý");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("foý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fa{");
            AphidLexerTests.Tokenize(aphidLexer, "fa{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fa{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize68605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finaa");
            AphidLexerTests.Tokenize(aphidLexer, "finaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("finaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize36004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("final");
            AphidLexerTests.Tokenize(aphidLexer, "final");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("final", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize85502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("faý");
            AphidLexerTests.Tokenize(aphidLexer, "faý");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("faý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize14706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("f{");
            AphidLexerTests.Tokenize(aphidLexer, "f{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("f{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize10706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falA");
            AphidLexerTests.Tokenize(aphidLexer, "falA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("falA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("f");
            AphidLexerTests.Tokenize(aphidLexer, "f");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("f", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize20907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fal[");
            AphidLexerTests.Tokenize(aphidLexer, "fal[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fal[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize974()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fiý");
            AphidLexerTests.Tokenize(aphidLexer, "fiý");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fiý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fal0");
            AphidLexerTests.Tokenize(aphidLexer, "fal0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fal0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize67002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fala");
            AphidLexerTests.Tokenize(aphidLexer, "fala");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fala", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fals");
            AphidLexerTests.Tokenize(aphidLexer, "fals");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fals", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fal{");
            AphidLexerTests.Tokenize(aphidLexer, "fal{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fal{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize38505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("false");
            AphidLexerTests.Tokenize(aphidLexer, "false");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("false", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize80603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fal");
            AphidLexerTests.Tokenize(aphidLexer, "fal");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fal", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize95002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falsa");
            AphidLexerTests.Tokenize(aphidLexer, "falsa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("falsa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize54801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(":=");
            AphidLexerTests.Tokenize(aphidLexer, ":=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(":=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize898()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<=");
            AphidLexerTests.Tokenize(aphidLexer, "<=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize26501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<\"");
            AphidLexerTests.Tokenize(aphidLexer, "<\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize51303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\");
            AphidLexerTests.Tokenize(aphidLexer, "\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\\0");
            AphidLexerTests.Tokenize(aphidLexer, "\\\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\:");
            AphidLexerTests.Tokenize(aphidLexer, "\\:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize18405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\@");
            AphidLexerTests.Tokenize(aphidLexer, "\\@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize38909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\|");
            AphidLexerTests.Tokenize(aphidLexer, "\\|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize36807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\~");
            AphidLexerTests.Tokenize(aphidLexer, "\\~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize85303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\!");
            AphidLexerTests.Tokenize(aphidLexer, "\\!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize7303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\`");
            AphidLexerTests.Tokenize(aphidLexer, "\\`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11410()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\/");
            AphidLexerTests.Tokenize(aphidLexer, "\\/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\.");
            AphidLexerTests.Tokenize(aphidLexer, "\\.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\?");
            AphidLexerTests.Tokenize(aphidLexer, "\\?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize61306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\]");
            AphidLexerTests.Tokenize(aphidLexer, "\\]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize82207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\-");
            AphidLexerTests.Tokenize(aphidLexer, "\\-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\,");
            AphidLexerTests.Tokenize(aphidLexer, "\\,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\>");
            AphidLexerTests.Tokenize(aphidLexer, "\\>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize92805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\)");
            AphidLexerTests.Tokenize(aphidLexer, "\\)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\\\");
            AphidLexerTests.Tokenize(aphidLexer, "\\\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize61705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\*");
            AphidLexerTests.Tokenize(aphidLexer, "\\*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\<");
            AphidLexerTests.Tokenize(aphidLexer, "\\<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize5503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\+");
            AphidLexerTests.Tokenize(aphidLexer, "\\+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize713()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\(");
            AphidLexerTests.Tokenize(aphidLexer, "\\(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\^");
            AphidLexerTests.Tokenize(aphidLexer, "\\^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize78601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\=");
            AphidLexerTests.Tokenize(aphidLexer, "\\=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\\"");
            AphidLexerTests.Tokenize(aphidLexer, "\\\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize41802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\#");
            AphidLexerTests.Tokenize(aphidLexer, "\\#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\_");
            AphidLexerTests.Tokenize(aphidLexer, "\\_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\;");
            AphidLexerTests.Tokenize(aphidLexer, "\\;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize27806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\$");
            AphidLexerTests.Tokenize(aphidLexer, "\\$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\&");
            AphidLexerTests.Tokenize(aphidLexer, "\\&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize92902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\%");
            AphidLexerTests.Tokenize(aphidLexer, "\\%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\\'");
            AphidLexerTests.Tokenize(aphidLexer, "\\\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\\\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize14002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\t");
            AphidLexerTests.Tokenize(aphidLexer, "\t");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\t", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(":\"");
            AphidLexerTests.Tokenize(aphidLexer, ":\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(":\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize13701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(":_");
            AphidLexerTests.Tokenize(aphidLexer, ":_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(":_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("t");
            AphidLexerTests.Tokenize(aphidLexer, "t");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("t", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize26205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("t\0");
            AphidLexerTests.Tokenize(aphidLexer, "t\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("t\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize39305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tr");
            AphidLexerTests.Tokenize(aphidLexer, "tr");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tr", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize84003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("t0");
            AphidLexerTests.Tokenize(aphidLexer, "t0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("t0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tr\0");
            AphidLexerTests.Tokenize(aphidLexer, "tr\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tr\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("try");
            AphidLexerTests.Tokenize(aphidLexer, "try");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("try", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize51701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ta");
            AphidLexerTests.Tokenize(aphidLexer, "ta");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize32303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("t{");
            AphidLexerTests.Tokenize(aphidLexer, "t{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("t{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize10603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tr0");
            AphidLexerTests.Tokenize(aphidLexer, "tr0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tr0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize64501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("trA");
            AphidLexerTests.Tokenize(aphidLexer, "trA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("trA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize87401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tA");
            AphidLexerTests.Tokenize(aphidLexer, "tA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tra");
            AphidLexerTests.Tokenize(aphidLexer, "tra");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tru");
            AphidLexerTests.Tokenize(aphidLexer, "tru");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tru", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize68106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tr[");
            AphidLexerTests.Tokenize(aphidLexer, "tr[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tr[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("th");
            AphidLexerTests.Tokenize(aphidLexer, "th");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("th", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize31201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("t");
            AphidLexerTests.Tokenize(aphidLexer, "t");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("t", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("true");
            AphidLexerTests.Tokenize(aphidLexer, "true");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("true", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize92405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tru0");
            AphidLexerTests.Tokenize(aphidLexer, "tru0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tru0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize67508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("trua");
            AphidLexerTests.Tokenize(aphidLexer, "trua");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("trua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize96207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tru{");
            AphidLexerTests.Tokenize(aphidLexer, "tru{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tru{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize20504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tr{");
            AphidLexerTests.Tokenize(aphidLexer, "tr{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tr{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize896()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("truA");
            AphidLexerTests.Tokenize(aphidLexer, "truA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("truA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize64301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tru");
            AphidLexerTests.Tokenize(aphidLexer, "tru");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tru", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75313()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("th\0");
            AphidLexerTests.Tokenize(aphidLexer, "th\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("th\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize63507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thA");
            AphidLexerTests.Tokenize(aphidLexer, "thA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thr");
            AphidLexerTests.Tokenize(aphidLexer, "thr");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thr", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize57802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("th0");
            AphidLexerTests.Tokenize(aphidLexer, "th0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("th0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize39602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tha");
            AphidLexerTests.Tokenize(aphidLexer, "tha");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tr");
            AphidLexerTests.Tokenize(aphidLexer, "tr");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tr", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize5205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("th{");
            AphidLexerTests.Tokenize(aphidLexer, "th{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("th{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83209()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thra");
            AphidLexerTests.Tokenize(aphidLexer, "thra");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thrA");
            AphidLexerTests.Tokenize(aphidLexer, "thrA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thrA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize211()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thi");
            AphidLexerTests.Tokenize(aphidLexer, "thi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6110()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thro");
            AphidLexerTests.Tokenize(aphidLexer, "thro");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thro", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize1905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("th");
            AphidLexerTests.Tokenize(aphidLexer, "th");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("th", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize68502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thr[");
            AphidLexerTests.Tokenize(aphidLexer, "thr[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thr[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize92806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thia");
            AphidLexerTests.Tokenize(aphidLexer, "thia");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thr0");
            AphidLexerTests.Tokenize(aphidLexer, "thr0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thr0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("this");
            AphidLexerTests.Tokenize(aphidLexer, "this");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("this", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize683()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thi{");
            AphidLexerTests.Tokenize(aphidLexer, "thi{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thi{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thiA");
            AphidLexerTests.Tokenize(aphidLexer, "thiA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thr{");
            AphidLexerTests.Tokenize(aphidLexer, "thr{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thr{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thr");
            AphidLexerTests.Tokenize(aphidLexer, "thr");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thr", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9100()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thi");
            AphidLexerTests.Tokenize(aphidLexer, "thi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thi0");
            AphidLexerTests.Tokenize(aphidLexer, "thi0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thi0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throa");
            AphidLexerTests.Tokenize(aphidLexer, "throa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize26906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throw");
            AphidLexerTests.Tokenize(aphidLexer, "throw");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throw", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(":#");
            AphidLexerTests.Tokenize(aphidLexer, ":#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(":#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize18609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<#");
            AphidLexerTests.Tokenize(aphidLexer, "<#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize7803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.Tokenize(aphidLexer, "");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize376()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(":;");
            AphidLexerTests.Tokenize(aphidLexer, ":;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(":;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<;");
            AphidLexerTests.Tokenize(aphidLexer, "<;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize58503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<$");
            AphidLexerTests.Tokenize(aphidLexer, "<$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\n");
            AphidLexerTests.Tokenize(aphidLexer, "\n");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\n", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("g");
            AphidLexerTests.Tokenize(aphidLexer, "g");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("g", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(":$");
            AphidLexerTests.Tokenize(aphidLexer, ":$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(":$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize61405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(":&");
            AphidLexerTests.Tokenize(aphidLexer, ":&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(":&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize95402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("v");
            AphidLexerTests.Tokenize(aphidLexer, "v");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("v", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<&");
            AphidLexerTests.Tokenize(aphidLexer, "<&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize17002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.Tokenize(aphidLexer, "");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\f");
            AphidLexerTests.Tokenize(aphidLexer, "\f");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\f", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(":%");
            AphidLexerTests.Tokenize(aphidLexer, ":%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(":%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("u");
            AphidLexerTests.Tokenize(aphidLexer, "u");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("u", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize28704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("u\0");
            AphidLexerTests.Tokenize(aphidLexer, "u\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("u\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("u0");
            AphidLexerTests.Tokenize(aphidLexer, "u0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("u0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize31503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("uA");
            AphidLexerTests.Tokenize(aphidLexer, "uA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("uA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize84502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("us");
            AphidLexerTests.Tokenize(aphidLexer, "us");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("us", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize79603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("us\0");
            AphidLexerTests.Tokenize(aphidLexer, "us\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("us\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize59603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("us0");
            AphidLexerTests.Tokenize(aphidLexer, "us0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("us0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usi");
            AphidLexerTests.Tokenize(aphidLexer, "usi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize59402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usa");
            AphidLexerTests.Tokenize(aphidLexer, "usa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize94703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("us<");
            AphidLexerTests.Tokenize(aphidLexer, "us<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("us<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize66102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("u[");
            AphidLexerTests.Tokenize(aphidLexer, "u[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("u[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize88707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("us{");
            AphidLexerTests.Tokenize(aphidLexer, "us{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("us{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize20304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usiA");
            AphidLexerTests.Tokenize(aphidLexer, "usiA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usý");
            AphidLexerTests.Tokenize(aphidLexer, "usý");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize410()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usA");
            AphidLexerTests.Tokenize(aphidLexer, "usA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize26007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usin");
            AphidLexerTests.Tokenize(aphidLexer, "usin");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usi[");
            AphidLexerTests.Tokenize(aphidLexer, "usi[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usi[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize41902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ua");
            AphidLexerTests.Tokenize(aphidLexer, "ua");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usia");
            AphidLexerTests.Tokenize(aphidLexer, "usia");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize58009()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usi{");
            AphidLexerTests.Tokenize(aphidLexer, "usi{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usi{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("u{");
            AphidLexerTests.Tokenize(aphidLexer, "u{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("u{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize92602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("u");
            AphidLexerTests.Tokenize(aphidLexer, "u");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("u", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize63804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usina");
            AphidLexerTests.Tokenize(aphidLexer, "usina");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usi");
            AphidLexerTests.Tokenize(aphidLexer, "usi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize34301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("using");
            AphidLexerTests.Tokenize(aphidLexer, "using");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("using", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usi0");
            AphidLexerTests.Tokenize(aphidLexer, "usi0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usi0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize34502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.Tokenize(aphidLexer, "<%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.Tokenize(aphidLexer, "");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize693()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l");
            AphidLexerTests.Tokenize(aphidLexer, "l");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("l", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize89104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l\0");
            AphidLexerTests.Tokenize(aphidLexer, "l\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("l\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize725()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l0");
            AphidLexerTests.Tokenize(aphidLexer, "l0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("l0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("la");
            AphidLexerTests.Tokenize(aphidLexer, "la");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("la", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize10707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lA");
            AphidLexerTests.Tokenize(aphidLexer, "lA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize773()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l<");
            AphidLexerTests.Tokenize(aphidLexer, "l<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("l<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l[");
            AphidLexerTests.Tokenize(aphidLexer, "l[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("l[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize229()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lo");
            AphidLexerTests.Tokenize(aphidLexer, "lo");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lo", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize19707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l{");
            AphidLexerTests.Tokenize(aphidLexer, "l{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("l{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize270()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lo\0");
            AphidLexerTests.Tokenize(aphidLexer, "lo\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lo\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize71301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loc");
            AphidLexerTests.Tokenize(aphidLexer, "loc");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loA");
            AphidLexerTests.Tokenize(aphidLexer, "loA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lo0");
            AphidLexerTests.Tokenize(aphidLexer, "lo0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lo0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize61010()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lo<");
            AphidLexerTests.Tokenize(aphidLexer, "lo<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lo<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l");
            AphidLexerTests.Tokenize(aphidLexer, "l");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("l", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lob");
            AphidLexerTests.Tokenize(aphidLexer, "lob");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lob", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize89704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loa");
            AphidLexerTests.Tokenize(aphidLexer, "loa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize59804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lo[");
            AphidLexerTests.Tokenize(aphidLexer, "lo[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lo[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize27502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lo{");
            AphidLexerTests.Tokenize(aphidLexer, "lo{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lo{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loca");
            AphidLexerTests.Tokenize(aphidLexer, "loca");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lo");
            AphidLexerTests.Tokenize(aphidLexer, "lo");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lo", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loaA");
            AphidLexerTests.Tokenize(aphidLexer, "loaA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loa[");
            AphidLexerTests.Tokenize(aphidLexer, "loa[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loa[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize37202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lock");
            AphidLexerTests.Tokenize(aphidLexer, "lock");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lock", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize98701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("load");
            AphidLexerTests.Tokenize(aphidLexer, "load");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("load", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize74301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loc{");
            AphidLexerTests.Tokenize(aphidLexer, "loc{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loc{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize52002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loa0");
            AphidLexerTests.Tokenize(aphidLexer, "loa0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loa0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize88506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loc");
            AphidLexerTests.Tokenize(aphidLexer, "loc");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65711()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loaa");
            AphidLexerTests.Tokenize(aphidLexer, "loaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize72705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loa{");
            AphidLexerTests.Tokenize(aphidLexer, "loa{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loa{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize74302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loa");
            AphidLexerTests.Tokenize(aphidLexer, "loa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize61503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("locA");
            AphidLexerTests.Tokenize(aphidLexer, "locA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("locA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize77704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loc0");
            AphidLexerTests.Tokenize(aphidLexer, "loc0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loc0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(":\'");
            AphidLexerTests.Tokenize(aphidLexer, ":\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(":\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize20101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<\'");
            AphidLexerTests.Tokenize(aphidLexer, "<\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\'\0");
            AphidLexerTests.Tokenize(aphidLexer, "\'\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\'\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\'\'");
            AphidLexerTests.Tokenize(aphidLexer, "\'\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\'\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize20908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\r");
            AphidLexerTests.Tokenize(aphidLexer, "\r");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\r", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize98608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("k");
            AphidLexerTests.Tokenize(aphidLexer, "k");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("k", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize45302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w");
            AphidLexerTests.Tokenize(aphidLexer, "w");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("w", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w\0");
            AphidLexerTests.Tokenize(aphidLexer, "w\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("w\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize92001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wh");
            AphidLexerTests.Tokenize(aphidLexer, "wh");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("wh", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize52803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wa");
            AphidLexerTests.Tokenize(aphidLexer, "wa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("wa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize18507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wh\0");
            AphidLexerTests.Tokenize(aphidLexer, "wh\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("wh\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize77301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whi");
            AphidLexerTests.Tokenize(aphidLexer, "whi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize94704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w0");
            AphidLexerTests.Tokenize(aphidLexer, "w0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("w0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize79101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wh0");
            AphidLexerTests.Tokenize(aphidLexer, "wh0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("wh0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize33704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w<");
            AphidLexerTests.Tokenize(aphidLexer, "w<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("w<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize8004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whiA");
            AphidLexerTests.Tokenize(aphidLexer, "whiA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wha");
            AphidLexerTests.Tokenize(aphidLexer, "wha");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("wha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize720()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w{");
            AphidLexerTests.Tokenize(aphidLexer, "w{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("w{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize95403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wA");
            AphidLexerTests.Tokenize(aphidLexer, "wA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("wA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize80404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whi0");
            AphidLexerTests.Tokenize(aphidLexer, "whi0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whi0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize10903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whA");
            AphidLexerTests.Tokenize(aphidLexer, "whA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75314()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wh[");
            AphidLexerTests.Tokenize(aphidLexer, "wh[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("wh[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wh{");
            AphidLexerTests.Tokenize(aphidLexer, "wh{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("wh{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize67509()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whý");
            AphidLexerTests.Tokenize(aphidLexer, "whý");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize26703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whil");
            AphidLexerTests.Tokenize(aphidLexer, "whil");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whil", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w");
            AphidLexerTests.Tokenize(aphidLexer, "w");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("w", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize45002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whia");
            AphidLexerTests.Tokenize(aphidLexer, "whia");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize17()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("while");
            AphidLexerTests.Tokenize(aphidLexer, "while");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("while", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whi[");
            AphidLexerTests.Tokenize(aphidLexer, "whi[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whi[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize84701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whi{");
            AphidLexerTests.Tokenize(aphidLexer, "whi{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whi{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whi");
            AphidLexerTests.Tokenize(aphidLexer, "whi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize58301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whila");
            AphidLexerTests.Tokenize(aphidLexer, "whila");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whila", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize58302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("n");
            AphidLexerTests.Tokenize(aphidLexer, "n");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("n", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize45003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("n\0");
            AphidLexerTests.Tokenize(aphidLexer, "n\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("n\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize87704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ne");
            AphidLexerTests.Tokenize(aphidLexer, "ne");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ne", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize94802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nA");
            AphidLexerTests.Tokenize(aphidLexer, "nA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize34103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("na");
            AphidLexerTests.Tokenize(aphidLexer, "na");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("na", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ne\0");
            AphidLexerTests.Tokenize(aphidLexer, "ne\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ne\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize18102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ne0");
            AphidLexerTests.Tokenize(aphidLexer, "ne0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ne0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize828()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nea");
            AphidLexerTests.Tokenize(aphidLexer, "nea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize95404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("n0");
            AphidLexerTests.Tokenize(aphidLexer, "n0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("n0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize1504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("n[");
            AphidLexerTests.Tokenize(aphidLexer, "n[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("n[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize80301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("new");
            AphidLexerTests.Tokenize(aphidLexer, "new");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("new", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize50802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ne{");
            AphidLexerTests.Tokenize(aphidLexer, "ne{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ne{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("neý");
            AphidLexerTests.Tokenize(aphidLexer, "neý");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("neý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("neA");
            AphidLexerTests.Tokenize(aphidLexer, "neA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("neA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu");
            AphidLexerTests.Tokenize(aphidLexer, "nu");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize712()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu\0");
            AphidLexerTests.Tokenize(aphidLexer, "nu\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nu\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nuA");
            AphidLexerTests.Tokenize(aphidLexer, "nuA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nuA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize79802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu0");
            AphidLexerTests.Tokenize(aphidLexer, "nu0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nu0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize540()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("n{");
            AphidLexerTests.Tokenize(aphidLexer, "n{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("n{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu<");
            AphidLexerTests.Tokenize(aphidLexer, "nu<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nu<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize31202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nua");
            AphidLexerTests.Tokenize(aphidLexer, "nua");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nul");
            AphidLexerTests.Tokenize(aphidLexer, "nul");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nul", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("n");
            AphidLexerTests.Tokenize(aphidLexer, "n");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("n", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize7510()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu[");
            AphidLexerTests.Tokenize(aphidLexer, "nu[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nu[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize63007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nul0");
            AphidLexerTests.Tokenize(aphidLexer, "nul0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nul0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize64708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nulA");
            AphidLexerTests.Tokenize(aphidLexer, "nulA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nulA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6111()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nula");
            AphidLexerTests.Tokenize(aphidLexer, "nula");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nula", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nul{");
            AphidLexerTests.Tokenize(aphidLexer, "nul{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nul{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize10804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("null");
            AphidLexerTests.Tokenize(aphidLexer, "null");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("null", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu{");
            AphidLexerTests.Tokenize(aphidLexer, "nu{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nu{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize86502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nul");
            AphidLexerTests.Tokenize(aphidLexer, "nul");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nul", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize59913()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nuý");
            AphidLexerTests.Tokenize(aphidLexer, "nuý");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nuý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\v");
            AphidLexerTests.Tokenize(aphidLexer, "\v");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\v", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24410()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.Tokenize(aphidLexer, "");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize673()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("m");
            AphidLexerTests.Tokenize(aphidLexer, "m");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("m", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("o");
            AphidLexerTests.Tokenize(aphidLexer, "o");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("o", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize235()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.Tokenize(aphidLexer, "");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.Tokenize(aphidLexer, "");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.Tokenize(aphidLexer, "");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize8602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^");
            AphidLexerTests.Tokenize(aphidLexer, "^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^\0");
            AphidLexerTests.Tokenize(aphidLexer, "^\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize26502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^!");
            AphidLexerTests.Tokenize(aphidLexer, "^!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize5412()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^@");
            AphidLexerTests.Tokenize(aphidLexer, "^@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^`");
            AphidLexerTests.Tokenize(aphidLexer, "^`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^|");
            AphidLexerTests.Tokenize(aphidLexer, "^|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^~");
            AphidLexerTests.Tokenize(aphidLexer, "^~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^:");
            AphidLexerTests.Tokenize(aphidLexer, "^:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^/");
            AphidLexerTests.Tokenize(aphidLexer, "^/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize96110()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^.");
            AphidLexerTests.Tokenize(aphidLexer, "^.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^?");
            AphidLexerTests.Tokenize(aphidLexer, "^?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^]");
            AphidLexerTests.Tokenize(aphidLexer, "^]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize19806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^-");
            AphidLexerTests.Tokenize(aphidLexer, "^-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^,");
            AphidLexerTests.Tokenize(aphidLexer, "^,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize72203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^>");
            AphidLexerTests.Tokenize(aphidLexer, "^>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75712()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^)");
            AphidLexerTests.Tokenize(aphidLexer, "^)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^\\");
            AphidLexerTests.Tokenize(aphidLexer, "^\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^*");
            AphidLexerTests.Tokenize(aphidLexer, "^*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize26105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^<");
            AphidLexerTests.Tokenize(aphidLexer, "^<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^+");
            AphidLexerTests.Tokenize(aphidLexer, "^+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^^");
            AphidLexerTests.Tokenize(aphidLexer, "^^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize50502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^(");
            AphidLexerTests.Tokenize(aphidLexer, "^(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize10401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^=");
            AphidLexerTests.Tokenize(aphidLexer, "^=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^\"");
            AphidLexerTests.Tokenize(aphidLexer, "^\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^#");
            AphidLexerTests.Tokenize(aphidLexer, "^#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^_");
            AphidLexerTests.Tokenize(aphidLexer, "^_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize82704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^;");
            AphidLexerTests.Tokenize(aphidLexer, "^;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize61104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^$");
            AphidLexerTests.Tokenize(aphidLexer, "^$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize64302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^&");
            AphidLexerTests.Tokenize(aphidLexer, "^&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^%");
            AphidLexerTests.Tokenize(aphidLexer, "^%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize54304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^\'");
            AphidLexerTests.Tokenize(aphidLexer, "^\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("^\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize17603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.Tokenize(aphidLexer, "");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.Tokenize(aphidLexer, "");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.Tokenize(aphidLexer, "");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~");
            AphidLexerTests.Tokenize(aphidLexer, "~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~\0");
            AphidLexerTests.Tokenize(aphidLexer, "~\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~:");
            AphidLexerTests.Tokenize(aphidLexer, "~:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~@");
            AphidLexerTests.Tokenize(aphidLexer, "~@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~`");
            AphidLexerTests.Tokenize(aphidLexer, "~`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~|");
            AphidLexerTests.Tokenize(aphidLexer, "~|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize72001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~!");
            AphidLexerTests.Tokenize(aphidLexer, "~!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize1505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~~");
            AphidLexerTests.Tokenize(aphidLexer, "~~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize89407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~/");
            AphidLexerTests.Tokenize(aphidLexer, "~/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize41503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~.");
            AphidLexerTests.Tokenize(aphidLexer, "~.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize19003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~?");
            AphidLexerTests.Tokenize(aphidLexer, "~?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize7705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~]");
            AphidLexerTests.Tokenize(aphidLexer, "~]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~-");
            AphidLexerTests.Tokenize(aphidLexer, "~-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~,");
            AphidLexerTests.Tokenize(aphidLexer, "~,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize50101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~>");
            AphidLexerTests.Tokenize(aphidLexer, "~>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~)");
            AphidLexerTests.Tokenize(aphidLexer, "~)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~\\");
            AphidLexerTests.Tokenize(aphidLexer, "~\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize93503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~*");
            AphidLexerTests.Tokenize(aphidLexer, "~*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize81402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~<");
            AphidLexerTests.Tokenize(aphidLexer, "~<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize41504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~+");
            AphidLexerTests.Tokenize(aphidLexer, "~+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~^");
            AphidLexerTests.Tokenize(aphidLexer, "~^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~(");
            AphidLexerTests.Tokenize(aphidLexer, "~(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29809()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~=");
            AphidLexerTests.Tokenize(aphidLexer, "~=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize78002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~\"");
            AphidLexerTests.Tokenize(aphidLexer, "~\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize66407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~#");
            AphidLexerTests.Tokenize(aphidLexer, "~#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize57803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~_");
            AphidLexerTests.Tokenize(aphidLexer, "~_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize68606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~;");
            AphidLexerTests.Tokenize(aphidLexer, "~;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~$");
            AphidLexerTests.Tokenize(aphidLexer, "~$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize88903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~&");
            AphidLexerTests.Tokenize(aphidLexer, "~&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize89105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~%");
            AphidLexerTests.Tokenize(aphidLexer, "~%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize1801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~\'");
            AphidLexerTests.Tokenize(aphidLexer, "~\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("~\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize53102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*");
            AphidLexerTests.Tokenize(aphidLexer, "*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize78903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*\0");
            AphidLexerTests.Tokenize(aphidLexer, "*\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize13104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*@");
            AphidLexerTests.Tokenize(aphidLexer, "*@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize81303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*~");
            AphidLexerTests.Tokenize(aphidLexer, "*~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*`");
            AphidLexerTests.Tokenize(aphidLexer, "*`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize32507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*!");
            AphidLexerTests.Tokenize(aphidLexer, "*!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*:");
            AphidLexerTests.Tokenize(aphidLexer, "*:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize96307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*|");
            AphidLexerTests.Tokenize(aphidLexer, "*|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*/");
            AphidLexerTests.Tokenize(aphidLexer, "*/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize18902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*.");
            AphidLexerTests.Tokenize(aphidLexer, "*.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize59301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*?");
            AphidLexerTests.Tokenize(aphidLexer, "*?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*]");
            AphidLexerTests.Tokenize(aphidLexer, "*]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize19402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*-");
            AphidLexerTests.Tokenize(aphidLexer, "*-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*,");
            AphidLexerTests.Tokenize(aphidLexer, "*,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize71505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*>");
            AphidLexerTests.Tokenize(aphidLexer, "*>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize81903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*)");
            AphidLexerTests.Tokenize(aphidLexer, "*)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize895()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*\\");
            AphidLexerTests.Tokenize(aphidLexer, "*\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("**");
            AphidLexerTests.Tokenize(aphidLexer, "**");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("**", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize58103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*<");
            AphidLexerTests.Tokenize(aphidLexer, "*<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize84402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*+");
            AphidLexerTests.Tokenize(aphidLexer, "*+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize870()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*^");
            AphidLexerTests.Tokenize(aphidLexer, "*^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*(");
            AphidLexerTests.Tokenize(aphidLexer, "*(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize92903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*=");
            AphidLexerTests.Tokenize(aphidLexer, "*=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize58()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*\"");
            AphidLexerTests.Tokenize(aphidLexer, "*\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*#");
            AphidLexerTests.Tokenize(aphidLexer, "*#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize95706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*_");
            AphidLexerTests.Tokenize(aphidLexer, "*_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize54908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*;");
            AphidLexerTests.Tokenize(aphidLexer, "*;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize58901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*$");
            AphidLexerTests.Tokenize(aphidLexer, "*$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*&");
            AphidLexerTests.Tokenize(aphidLexer, "*&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize26206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*%");
            AphidLexerTests.Tokenize(aphidLexer, "*%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize76101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*\'");
            AphidLexerTests.Tokenize(aphidLexer, "*\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("*\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize74401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("}");
            AphidLexerTests.Tokenize(aphidLexer, "}");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("}", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".");
            AphidLexerTests.Tokenize(aphidLexer, ".");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize72304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".\0");
            AphidLexerTests.Tokenize(aphidLexer, ".\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize13403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".@");
            AphidLexerTests.Tokenize(aphidLexer, ".@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".`");
            AphidLexerTests.Tokenize(aphidLexer, ".`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize96407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".|");
            AphidLexerTests.Tokenize(aphidLexer, ".|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize71201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".!");
            AphidLexerTests.Tokenize(aphidLexer, ".!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize32508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".~");
            AphidLexerTests.Tokenize(aphidLexer, ".~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize67301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".:");
            AphidLexerTests.Tokenize(aphidLexer, ".:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize41302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("./");
            AphidLexerTests.Tokenize(aphidLexer, "./");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("./", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("..");
            AphidLexerTests.Tokenize(aphidLexer, "..");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("..", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".?");
            AphidLexerTests.Tokenize(aphidLexer, ".?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".]");
            AphidLexerTests.Tokenize(aphidLexer, ".]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".-");
            AphidLexerTests.Tokenize(aphidLexer, ".-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize736()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".,");
            AphidLexerTests.Tokenize(aphidLexer, ".,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".>");
            AphidLexerTests.Tokenize(aphidLexer, ".>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".)");
            AphidLexerTests.Tokenize(aphidLexer, ".)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".\\");
            AphidLexerTests.Tokenize(aphidLexer, ".\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".*");
            AphidLexerTests.Tokenize(aphidLexer, ".*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".<");
            AphidLexerTests.Tokenize(aphidLexer, ".<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize68607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".+");
            AphidLexerTests.Tokenize(aphidLexer, ".+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize61105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".^");
            AphidLexerTests.Tokenize(aphidLexer, ".^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize71006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".(");
            AphidLexerTests.Tokenize(aphidLexer, ".(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".=");
            AphidLexerTests.Tokenize(aphidLexer, ".=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".\"");
            AphidLexerTests.Tokenize(aphidLexer, ".\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize95201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".#");
            AphidLexerTests.Tokenize(aphidLexer, ".#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("._");
            AphidLexerTests.Tokenize(aphidLexer, "._");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("._", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".;");
            AphidLexerTests.Tokenize(aphidLexer, ".;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize5903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".$");
            AphidLexerTests.Tokenize(aphidLexer, ".$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize37805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".&");
            AphidLexerTests.Tokenize(aphidLexer, ".&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".%");
            AphidLexerTests.Tokenize(aphidLexer, ".%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize41607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".\'");
            AphidLexerTests.Tokenize(aphidLexer, ".\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>(".\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+");
            AphidLexerTests.Tokenize(aphidLexer, "+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+\0");
            AphidLexerTests.Tokenize(aphidLexer, "+\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+@");
            AphidLexerTests.Tokenize(aphidLexer, "+@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+`");
            AphidLexerTests.Tokenize(aphidLexer, "+`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize96801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+~");
            AphidLexerTests.Tokenize(aphidLexer, "+~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize74204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+!");
            AphidLexerTests.Tokenize(aphidLexer, "+!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize37402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+:");
            AphidLexerTests.Tokenize(aphidLexer, "+:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize76701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+|");
            AphidLexerTests.Tokenize(aphidLexer, "+|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize45103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+/");
            AphidLexerTests.Tokenize(aphidLexer, "+/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize50301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+.");
            AphidLexerTests.Tokenize(aphidLexer, "+.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize74402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+?");
            AphidLexerTests.Tokenize(aphidLexer, "+?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize79002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+]");
            AphidLexerTests.Tokenize(aphidLexer, "+]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize96308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+-");
            AphidLexerTests.Tokenize(aphidLexer, "+-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize71802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+,");
            AphidLexerTests.Tokenize(aphidLexer, "+,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+>");
            AphidLexerTests.Tokenize(aphidLexer, "+>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize30905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+)");
            AphidLexerTests.Tokenize(aphidLexer, "+)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize67003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+\\");
            AphidLexerTests.Tokenize(aphidLexer, "+\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+*");
            AphidLexerTests.Tokenize(aphidLexer, "+*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+<");
            AphidLexerTests.Tokenize(aphidLexer, "+<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize86805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("++");
            AphidLexerTests.Tokenize(aphidLexer, "++");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("++", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+(");
            AphidLexerTests.Tokenize(aphidLexer, "+(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize51903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+^");
            AphidLexerTests.Tokenize(aphidLexer, "+^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+=");
            AphidLexerTests.Tokenize(aphidLexer, "+=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize7706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+\"");
            AphidLexerTests.Tokenize(aphidLexer, "+\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+#");
            AphidLexerTests.Tokenize(aphidLexer, "+#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+_");
            AphidLexerTests.Tokenize(aphidLexer, "+_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize67102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+;");
            AphidLexerTests.Tokenize(aphidLexer, "+;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize30503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+$");
            AphidLexerTests.Tokenize(aphidLexer, "+$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize3201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+&");
            AphidLexerTests.Tokenize(aphidLexer, "+&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize284()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+%");
            AphidLexerTests.Tokenize(aphidLexer, "+%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+\'");
            AphidLexerTests.Tokenize(aphidLexer, "+\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("+\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-");
            AphidLexerTests.Tokenize(aphidLexer, "-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-\0");
            AphidLexerTests.Tokenize(aphidLexer, "-\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-@");
            AphidLexerTests.Tokenize(aphidLexer, "-@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize454()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-~");
            AphidLexerTests.Tokenize(aphidLexer, "-~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize59403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-|");
            AphidLexerTests.Tokenize(aphidLexer, "-|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize87705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-`");
            AphidLexerTests.Tokenize(aphidLexer, "-`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize61706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-:");
            AphidLexerTests.Tokenize(aphidLexer, "-:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize50503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-!");
            AphidLexerTests.Tokenize(aphidLexer, "-!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize20505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-/");
            AphidLexerTests.Tokenize(aphidLexer, "-/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69910()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-.");
            AphidLexerTests.Tokenize(aphidLexer, "-.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize80807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-?");
            AphidLexerTests.Tokenize(aphidLexer, "-?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-]");
            AphidLexerTests.Tokenize(aphidLexer, "-]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize14409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("--");
            AphidLexerTests.Tokenize(aphidLexer, "--");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("--", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-,");
            AphidLexerTests.Tokenize(aphidLexer, "-,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("->");
            AphidLexerTests.Tokenize(aphidLexer, "->");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("->", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize841()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-)");
            AphidLexerTests.Tokenize(aphidLexer, "-)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize5904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-\\");
            AphidLexerTests.Tokenize(aphidLexer, "-\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize66204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-*");
            AphidLexerTests.Tokenize(aphidLexer, "-*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-<");
            AphidLexerTests.Tokenize(aphidLexer, "-<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize79204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-+");
            AphidLexerTests.Tokenize(aphidLexer, "-+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize41303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-^");
            AphidLexerTests.Tokenize(aphidLexer, "-^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-(");
            AphidLexerTests.Tokenize(aphidLexer, "-(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize66002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-=");
            AphidLexerTests.Tokenize(aphidLexer, "-=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize30801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-\"");
            AphidLexerTests.Tokenize(aphidLexer, "-\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize41402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-#");
            AphidLexerTests.Tokenize(aphidLexer, "-#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4910()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-_");
            AphidLexerTests.Tokenize(aphidLexer, "-_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize68301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-;");
            AphidLexerTests.Tokenize(aphidLexer, "-;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-$");
            AphidLexerTests.Tokenize(aphidLexer, "-$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-&");
            AphidLexerTests.Tokenize(aphidLexer, "-&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-%");
            AphidLexerTests.Tokenize(aphidLexer, "-%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize890()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-\'");
            AphidLexerTests.Tokenize(aphidLexer, "-\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("-\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/");
            AphidLexerTests.Tokenize(aphidLexer, "/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize20506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/\0");
            AphidLexerTests.Tokenize(aphidLexer, "/\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70010()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/@");
            AphidLexerTests.Tokenize(aphidLexer, "/@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize82801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/~");
            AphidLexerTests.Tokenize(aphidLexer, "/~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize84004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/|");
            AphidLexerTests.Tokenize(aphidLexer, "/|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/`");
            AphidLexerTests.Tokenize(aphidLexer, "/`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75713()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/:");
            AphidLexerTests.Tokenize(aphidLexer, "/:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize74007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/!");
            AphidLexerTests.Tokenize(aphidLexer, "/!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize8202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("//");
            AphidLexerTests.Tokenize(aphidLexer, "//");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("//", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize8502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/.");
            AphidLexerTests.Tokenize(aphidLexer, "/.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize71704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/?");
            AphidLexerTests.Tokenize(aphidLexer, "/?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize22302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/]");
            AphidLexerTests.Tokenize(aphidLexer, "/]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/-");
            AphidLexerTests.Tokenize(aphidLexer, "/-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/,");
            AphidLexerTests.Tokenize(aphidLexer, "/,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/>");
            AphidLexerTests.Tokenize(aphidLexer, "/>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4911()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/)");
            AphidLexerTests.Tokenize(aphidLexer, "/)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/\\");
            AphidLexerTests.Tokenize(aphidLexer, "/\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize56003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/*");
            AphidLexerTests.Tokenize(aphidLexer, "/*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/<");
            AphidLexerTests.Tokenize(aphidLexer, "/<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/+");
            AphidLexerTests.Tokenize(aphidLexer, "/+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize84205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/^");
            AphidLexerTests.Tokenize(aphidLexer, "/^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize53103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/(");
            AphidLexerTests.Tokenize(aphidLexer, "/(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/=");
            AphidLexerTests.Tokenize(aphidLexer, "/=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize86503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/\"");
            AphidLexerTests.Tokenize(aphidLexer, "/\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize89207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/#");
            AphidLexerTests.Tokenize(aphidLexer, "/#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/_");
            AphidLexerTests.Tokenize(aphidLexer, "/_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize817()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/;");
            AphidLexerTests.Tokenize(aphidLexer, "/;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize39908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/$");
            AphidLexerTests.Tokenize(aphidLexer, "/$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize31702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/&");
            AphidLexerTests.Tokenize(aphidLexer, "/&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/%");
            AphidLexerTests.Tokenize(aphidLexer, "/%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize54909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/\'");
            AphidLexerTests.Tokenize(aphidLexer, "/\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize45104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loc_");
            AphidLexerTests.Tokenize(aphidLexer, "loc_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loc_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize774()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("this\0");
            AphidLexerTests.Tokenize(aphidLexer, "this\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("this\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize63102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thisa");
            AphidLexerTests.Tokenize(aphidLexer, "thisa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thisa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize51601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("this[");
            AphidLexerTests.Tokenize(aphidLexer, "this[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("this[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("this{");
            AphidLexerTests.Tokenize(aphidLexer, "this{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("this{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize54403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nul_");
            AphidLexerTests.Tokenize(aphidLexer, "nul_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nul_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize19102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thro_");
            AphidLexerTests.Tokenize(aphidLexer, "thro_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thro_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defi_");
            AphidLexerTests.Tokenize(aphidLexer, "defi_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defi_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize77602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("dele[");
            AphidLexerTests.Tokenize(aphidLexer, "dele[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("dele[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize41903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whi_");
            AphidLexerTests.Tokenize(aphidLexer, "whi_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whi_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("us_");
            AphidLexerTests.Tokenize(aphidLexer, "us_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("us_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext_");
            AphidLexerTests.Tokenize(aphidLexer, "ext_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ext_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("r_");
            AphidLexerTests.Tokenize(aphidLexer, "r_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("r_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize92507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("del_");
            AphidLexerTests.Tokenize(aphidLexer, "del_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("del_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("def_");
            AphidLexerTests.Tokenize(aphidLexer, "def_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("def_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize54001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exte_");
            AphidLexerTests.Tokenize(aphidLexer, "exte_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("exte_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tru_");
            AphidLexerTests.Tokenize(aphidLexer, "tru_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tru_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize10508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ex_");
            AphidLexerTests.Tokenize(aphidLexer, "ex_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ex_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize96408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thi_");
            AphidLexerTests.Tokenize(aphidLexer, "thi_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thi_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize10302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w_");
            AphidLexerTests.Tokenize(aphidLexer, "w_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("w_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("els_");
            AphidLexerTests.Tokenize(aphidLexer, "els_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("els_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defa_");
            AphidLexerTests.Tokenize(aphidLexer, "defa_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defa_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swit_");
            AphidLexerTests.Tokenize(aphidLexer, "swit_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swit_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize8503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swi_");
            AphidLexerTests.Tokenize(aphidLexer, "swi_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swi_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize8203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat_");
            AphidLexerTests.Tokenize(aphidLexer, "cat_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cat_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize76303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("con_");
            AphidLexerTests.Tokenize(aphidLexer, "con_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("con_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize38804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exten[");
            AphidLexerTests.Tokenize(aphidLexer, "exten[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("exten[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize50407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K÷\0");
            AphidLexerTests.Tokenize(aphidLexer, "K÷\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K÷\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize319()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usi_");
            AphidLexerTests.Tokenize(aphidLexer, "usi_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usi_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("t_");
            AphidLexerTests.Tokenize(aphidLexer, "t_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("t_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b_");
            AphidLexerTests.Tokenize(aphidLexer, "b_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("b_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fi_");
            AphidLexerTests.Tokenize(aphidLexer, "fi_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fi_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize20507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ca_");
            AphidLexerTests.Tokenize(aphidLexer, "ca_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ca_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("co_");
            AphidLexerTests.Tokenize(aphidLexer, "co_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("co_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize58201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catc_");
            AphidLexerTests.Tokenize(aphidLexer, "catc_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catc_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize92703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fal_");
            AphidLexerTests.Tokenize(aphidLexer, "fal_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fal_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("s_");
            AphidLexerTests.Tokenize(aphidLexer, "s_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("s_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize85203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conti[");
            AphidLexerTests.Tokenize(aphidLexer, "conti[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("conti[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whil[");
            AphidLexerTests.Tokenize(aphidLexer, "whil[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whil[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize33201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fo_");
            AphidLexerTests.Tokenize(aphidLexer, "fo_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fo_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sw_");
            AphidLexerTests.Tokenize(aphidLexer, "sw_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("sw_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize793()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("brea[");
            AphidLexerTests.Tokenize(aphidLexer, "brea[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("brea[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("i_");
            AphidLexerTests.Tokenize(aphidLexer, "i_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("i_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize33103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lo_");
            AphidLexerTests.Tokenize(aphidLexer, "lo_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lo_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize22803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bre_");
            AphidLexerTests.Tokenize(aphidLexer, "bre_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("bre_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize56303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("br_");
            AphidLexerTests.Tokenize(aphidLexer, "br_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("br_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize94902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cont[");
            AphidLexerTests.Tokenize(aphidLexer, "cont[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cont[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize41304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l_");
            AphidLexerTests.Tokenize(aphidLexer, "l_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("l_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fina[");
            AphidLexerTests.Tokenize(aphidLexer, "fina[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fina[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d_");
            AphidLexerTests.Tokenize(aphidLexer, "d_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("d_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75714()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usin_");
            AphidLexerTests.Tokenize(aphidLexer, "usin_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usin_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu_");
            AphidLexerTests.Tokenize(aphidLexer, "nu_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nu_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize27807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("th_");
            AphidLexerTests.Tokenize(aphidLexer, "th_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("th_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize96903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thr_");
            AphidLexerTests.Tokenize(aphidLexer, "thr_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thr_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loa_");
            AphidLexerTests.Tokenize(aphidLexer, "loa_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loa_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize50004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ne_");
            AphidLexerTests.Tokenize(aphidLexer, "ne_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ne_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize51805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fin_");
            AphidLexerTests.Tokenize(aphidLexer, "fin_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fin_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fals_");
            AphidLexerTests.Tokenize(aphidLexer, "fals_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fals_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize50408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tr_");
            AphidLexerTests.Tokenize(aphidLexer, "tr_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tr_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("c_");
            AphidLexerTests.Tokenize(aphidLexer, "c_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("c_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thro");
            AphidLexerTests.Tokenize(aphidLexer, "thro");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thro", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fina\0");
            AphidLexerTests.Tokenize(aphidLexer, "fina\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fina\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize8005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0e");
            AphidLexerTests.Tokenize(aphidLexer, "0e");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0e", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("de_");
            AphidLexerTests.Tokenize(aphidLexer, "de_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("de_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize88507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continu");
            AphidLexerTests.Tokenize(aphidLexer, "continu");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize8705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continu\0");
            AphidLexerTests.Tokenize(aphidLexer, "continu\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continu\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize19906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continu0");
            AphidLexerTests.Tokenize(aphidLexer, "continu0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continu0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize84005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continub");
            AphidLexerTests.Tokenize(aphidLexer, "continub");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continub", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97211()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continuA");
            AphidLexerTests.Tokenize(aphidLexer, "continuA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continuA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize78904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continu{");
            AphidLexerTests.Tokenize(aphidLexer, "continu{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continu{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continu");
            AphidLexerTests.Tokenize(aphidLexer, "continu");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize37304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continue");
            AphidLexerTests.Tokenize(aphidLexer, "continue");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continue", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40809()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continu_");
            AphidLexerTests.Tokenize(aphidLexer, "continu_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continu_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4311()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usin");
            AphidLexerTests.Tokenize(aphidLexer, "usin");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize54002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("re_");
            AphidLexerTests.Tokenize(aphidLexer, "re_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("re_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize93903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whil");
            AphidLexerTests.Tokenize(aphidLexer, "whil");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whil", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defau");
            AphidLexerTests.Tokenize(aphidLexer, "defau");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defau", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65712()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("this_");
            AphidLexerTests.Tokenize(aphidLexer, "this_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("this_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize93107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wh_");
            AphidLexerTests.Tokenize(aphidLexer, "wh_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("wh_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("el_");
            AphidLexerTests.Tokenize(aphidLexer, "el_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("el_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("dele_");
            AphidLexerTests.Tokenize(aphidLexer, "dele_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("dele_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize66505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fa_");
            AphidLexerTests.Tokenize(aphidLexer, "fa_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fa_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("final");
            AphidLexerTests.Tokenize(aphidLexer, "final");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("final", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16710()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whil_");
            AphidLexerTests.Tokenize(aphidLexer, "whil_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whil_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("f_");
            AphidLexerTests.Tokenize(aphidLexer, "f_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("f_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delet");
            AphidLexerTests.Tokenize(aphidLexer, "delet");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("delet", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switc");
            AphidLexerTests.Tokenize(aphidLexer, "switc");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize10110()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swit");
            AphidLexerTests.Tokenize(aphidLexer, "swit");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swit", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize19004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conti");
            AphidLexerTests.Tokenize(aphidLexer, "conti");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("conti", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cont_");
            AphidLexerTests.Tokenize(aphidLexer, "cont_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cont_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize92304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("u_");
            AphidLexerTests.Tokenize(aphidLexer, "u_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("u_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize86504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("n_");
            AphidLexerTests.Tokenize(aphidLexer, "n_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("n_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize250()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defin");
            AphidLexerTests.Tokenize(aphidLexer, "defin");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize79905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E");
            AphidLexerTests.Tokenize(aphidLexer, "0E");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0E", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize63402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defi");
            AphidLexerTests.Tokenize(aphidLexer, "defi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize64502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fina_");
            AphidLexerTests.Tokenize(aphidLexer, "fina_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fina_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("brea_");
            AphidLexerTests.Tokenize(aphidLexer, "brea_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("brea_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize67701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exten");
            AphidLexerTests.Tokenize(aphidLexer, "exten");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("exten", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize74205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("this\0");
            AphidLexerTests.Tokenize(aphidLexer, "this\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("this\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defa");
            AphidLexerTests.Tokenize(aphidLexer, "defa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize13702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("dele\0");
            AphidLexerTests.Tokenize(aphidLexer, "dele\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("dele\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize7204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exte\0");
            AphidLexerTests.Tokenize(aphidLexer, "exte\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("exte\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("e_");
            AphidLexerTests.Tokenize(aphidLexer, "e_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("e_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defi\0");
            AphidLexerTests.Tokenize(aphidLexer, "defi\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35309()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defau\0");
            AphidLexerTests.Tokenize(aphidLexer, "defau\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defau\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize39306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K_");
            AphidLexerTests.Tokenize(aphidLexer, "K_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("K_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize37601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("e\0");
            AphidLexerTests.Tokenize(aphidLexer, "e\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("e\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize61307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continu\0");
            AphidLexerTests.Tokenize(aphidLexer, "continu\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continu\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("t\0");
            AphidLexerTests.Tokenize(aphidLexer, "t\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("t\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize45207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delet\0");
            AphidLexerTests.Tokenize(aphidLexer, "delet\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("delet\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize30201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!\'\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "!\'\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!\'\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!\'\\\0");
            AphidLexerTests.Tokenize(aphidLexer, "!\'\\\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("!\'\\\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("f\0");
            AphidLexerTests.Tokenize(aphidLexer, "f\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("f\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%>\0");
            AphidLexerTests.Tokenize(aphidLexer, "%>\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%>\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6112()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%><");
            AphidLexerTests.Tokenize(aphidLexer, "%><");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%><", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize310()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%><%");
            AphidLexerTests.Tokenize(aphidLexer, "%><%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%><%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%><%\0");
            AphidLexerTests.Tokenize(aphidLexer, "%><%\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%><%\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%><%=");
            AphidLexerTests.Tokenize(aphidLexer, "%><%=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%><%=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thisa");
            AphidLexerTests.Tokenize(aphidLexer, "thisa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thisa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize31203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("i\0");
            AphidLexerTests.Tokenize(aphidLexer, "i\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("i\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize34602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defin\0");
            AphidLexerTests.Tokenize(aphidLexer, "defin\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize10303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%>\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "%>\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%>\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w\0");
            AphidLexerTests.Tokenize(aphidLexer, "w\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("w\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("s\0");
            AphidLexerTests.Tokenize(aphidLexer, "s\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("s\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catc");
            AphidLexerTests.Tokenize(aphidLexer, "catc");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11309()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("c\0");
            AphidLexerTests.Tokenize(aphidLexer, "c\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("c\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize19907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exte");
            AphidLexerTests.Tokenize(aphidLexer, "exte");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("exte", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize54003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exten\0");
            AphidLexerTests.Tokenize(aphidLexer, "exten\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("exten\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize66702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switc\0");
            AphidLexerTests.Tokenize(aphidLexer, "switc\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switc\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wA");
            AphidLexerTests.Tokenize(aphidLexer, "wA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("wA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize94903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("brea");
            AphidLexerTests.Tokenize(aphidLexer, "brea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("brea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize98003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("Ka");
            AphidLexerTests.Tokenize(aphidLexer, "Ka");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("Ka", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("u\0");
            AphidLexerTests.Tokenize(aphidLexer, "u\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("u\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize27910()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ca");
            AphidLexerTests.Tokenize(aphidLexer, "ca");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize14903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("dea\0");
            AphidLexerTests.Tokenize(aphidLexer, "dea\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("dea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cont");
            AphidLexerTests.Tokenize(aphidLexer, "cont");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cont", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize61904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("definA");
            AphidLexerTests.Tokenize(aphidLexer, "definA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("definA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize475()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("foa\0");
            AphidLexerTests.Tokenize(aphidLexer, "foa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("foa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("neA");
            AphidLexerTests.Tokenize(aphidLexer, "neA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("neA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ne0");
            AphidLexerTests.Tokenize(aphidLexer, "ne0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ne0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize76206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("if\0");
            AphidLexerTests.Tokenize(aphidLexer, "if\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("if\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ifA");
            AphidLexerTests.Tokenize(aphidLexer, "ifA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ifA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize58407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ifa");
            AphidLexerTests.Tokenize(aphidLexer, "ifa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ifa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize66205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("if{");
            AphidLexerTests.Tokenize(aphidLexer, "if{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("if{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize19403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("if");
            AphidLexerTests.Tokenize(aphidLexer, "if");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("if", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("if0");
            AphidLexerTests.Tokenize(aphidLexer, "if0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("if0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize74601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("if\0");
            AphidLexerTests.Tokenize(aphidLexer, "if\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("if\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize27503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("if_");
            AphidLexerTests.Tokenize(aphidLexer, "if_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("if_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ifa");
            AphidLexerTests.Tokenize(aphidLexer, "ifa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ifa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("final\0");
            AphidLexerTests.Tokenize(aphidLexer, "final\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("final\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize19807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defa\0");
            AphidLexerTests.Tokenize(aphidLexer, "defa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize53503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conti\0");
            AphidLexerTests.Tokenize(aphidLexer, "conti\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("conti\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nul\0");
            AphidLexerTests.Tokenize(aphidLexer, "nul\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nul\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize31901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defauA");
            AphidLexerTests.Tokenize(aphidLexer, "defauA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defauA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\"\0\"");
            AphidLexerTests.Tokenize(aphidLexer, "\"\0\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\"\0\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize93710()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\"\\\"");
            AphidLexerTests.Tokenize(aphidLexer, "\"\\\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\"\\\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize19908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tA");
            AphidLexerTests.Tokenize(aphidLexer, "tA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize14202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("1\0");
            AphidLexerTests.Tokenize(aphidLexer, "1\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("1\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize5905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("1.");
            AphidLexerTests.Tokenize(aphidLexer, "1.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("1.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("10");
            AphidLexerTests.Tokenize(aphidLexer, "10");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("10", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize54404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d\0");
            AphidLexerTests.Tokenize(aphidLexer, "d\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("d\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usinA");
            AphidLexerTests.Tokenize(aphidLexer, "usinA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usinA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("r\0");
            AphidLexerTests.Tokenize(aphidLexer, "r\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("r\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize764()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thro\0");
            AphidLexerTests.Tokenize(aphidLexer, "thro\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thro\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize92002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("1E");
            AphidLexerTests.Tokenize(aphidLexer, "1E");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("1E", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defau[");
            AphidLexerTests.Tokenize(aphidLexer, "defau[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defau[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0x\0");
            AphidLexerTests.Tokenize(aphidLexer, "0x\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0x\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24411()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0x0");
            AphidLexerTests.Tokenize(aphidLexer, "0x0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0x0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0x:");
            AphidLexerTests.Tokenize(aphidLexer, "0x:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0x:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4100()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0xz");
            AphidLexerTests.Tokenize(aphidLexer, "0xz");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0xz", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize41305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0xA");
            AphidLexerTests.Tokenize(aphidLexer, "0xA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0xA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize84503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catca");
            AphidLexerTests.Tokenize(aphidLexer, "catca");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize06()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("else");
            AphidLexerTests.Tokenize(aphidLexer, "else");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("else", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize85503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l\0");
            AphidLexerTests.Tokenize(aphidLexer, "l\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("l\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize95112()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b\0");
            AphidLexerTests.Tokenize(aphidLexer, "b\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("b\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize84602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loa");
            AphidLexerTests.Tokenize(aphidLexer, "loa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize59514()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switcý0");
            AphidLexerTests.Tokenize(aphidLexer, "switcý0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switcý0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lock\0");
            AphidLexerTests.Tokenize(aphidLexer, "lock\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lock\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("locka");
            AphidLexerTests.Tokenize(aphidLexer, "locka");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("locka", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize80510()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lock{");
            AphidLexerTests.Tokenize(aphidLexer, "lock{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lock{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lock_");
            AphidLexerTests.Tokenize(aphidLexer, "lock_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lock_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lock");
            AphidLexerTests.Tokenize(aphidLexer, "lock");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lock", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize39805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("n\0");
            AphidLexerTests.Tokenize(aphidLexer, "n\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("n\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize66411()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continua");
            AphidLexerTests.Tokenize(aphidLexer, "continua");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize82804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defin[");
            AphidLexerTests.Tokenize(aphidLexer, "defin[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defin[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lock\0");
            AphidLexerTests.Tokenize(aphidLexer, "lock\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lock\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize34802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tra");
            AphidLexerTests.Tokenize(aphidLexer, "tra");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize98904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ifa\0");
            AphidLexerTests.Tokenize(aphidLexer, "ifa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ifa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize94002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat\0");
            AphidLexerTests.Tokenize(aphidLexer, "cat\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cat\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize74906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extena");
            AphidLexerTests.Tokenize(aphidLexer, "extena");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("extena", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize17708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lo\0");
            AphidLexerTests.Tokenize(aphidLexer, "lo\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lo\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loca");
            AphidLexerTests.Tokenize(aphidLexer, "loca");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize57806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E\0");
            AphidLexerTests.Tokenize(aphidLexer, "0E\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0E\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize8605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E-");
            AphidLexerTests.Tokenize(aphidLexer, "0E-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0E-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize66301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E0");
            AphidLexerTests.Tokenize(aphidLexer, "0E0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0E0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize74405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E-0");
            AphidLexerTests.Tokenize(aphidLexer, "0E-0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0E-0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E-:");
            AphidLexerTests.Tokenize(aphidLexer, "0E-:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0E-:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize59916()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("dela");
            AphidLexerTests.Tokenize(aphidLexer, "dela");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("dela", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize80907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usi\0");
            AphidLexerTests.Tokenize(aphidLexer, "usi\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize36501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swit\0");
            AphidLexerTests.Tokenize(aphidLexer, "swit\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swit\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize882()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whi\0");
            AphidLexerTests.Tokenize(aphidLexer, "whi\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("la");
            AphidLexerTests.Tokenize(aphidLexer, "la");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("la", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize32803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switc<");
            AphidLexerTests.Tokenize(aphidLexer, "switc<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switc<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize58013()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falsa");
            AphidLexerTests.Tokenize(aphidLexer, "falsa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("falsa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E0\0");
            AphidLexerTests.Tokenize(aphidLexer, "0E0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0E0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize81104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E00");
            AphidLexerTests.Tokenize(aphidLexer, "0E00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0E00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fin\0");
            AphidLexerTests.Tokenize(aphidLexer, "fin\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize77503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loa\0");
            AphidLexerTests.Tokenize(aphidLexer, "loa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize3903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finala");
            AphidLexerTests.Tokenize(aphidLexer, "finala");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("finala", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35312()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("da");
            AphidLexerTests.Tokenize(aphidLexer, "da");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("da", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("final{");
            AphidLexerTests.Tokenize(aphidLexer, "final{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("final{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91009()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("load\0");
            AphidLexerTests.Tokenize(aphidLexer, "load\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("load\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize59201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loada");
            AphidLexerTests.Tokenize(aphidLexer, "loada");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loada", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("load{");
            AphidLexerTests.Tokenize(aphidLexer, "load{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("load{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize64305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("load_");
            AphidLexerTests.Tokenize(aphidLexer, "load_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("load_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24709()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("load");
            AphidLexerTests.Tokenize(aphidLexer, "load");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("load", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15509()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("load0");
            AphidLexerTests.Tokenize(aphidLexer, "load0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("load0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sa");
            AphidLexerTests.Tokenize(aphidLexer, "sa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("sa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize72205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ba");
            AphidLexerTests.Tokenize(aphidLexer, "ba");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ba", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize88806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tha");
            AphidLexerTests.Tokenize(aphidLexer, "tha");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69915()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bre\0");
            AphidLexerTests.Tokenize(aphidLexer, "bre\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("bre\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thraa");
            AphidLexerTests.Tokenize(aphidLexer, "thraa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thraa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exten{");
            AphidLexerTests.Tokenize(aphidLexer, "exten{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("exten{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize67603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("do\0");
            AphidLexerTests.Tokenize(aphidLexer, "do\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("do\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44310()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("doA");
            AphidLexerTests.Tokenize(aphidLexer, "doA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("doA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize1509()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("doa");
            AphidLexerTests.Tokenize(aphidLexer, "doa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("doa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize570()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("do[");
            AphidLexerTests.Tokenize(aphidLexer, "do[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("do[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("do{");
            AphidLexerTests.Tokenize(aphidLexer, "do{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("do{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize63305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("do");
            AphidLexerTests.Tokenize(aphidLexer, "do");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("do", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("do0");
            AphidLexerTests.Tokenize(aphidLexer, "do0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("do0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize80908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("do_");
            AphidLexerTests.Tokenize(aphidLexer, "do_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("do_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24011()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("dea");
            AphidLexerTests.Tokenize(aphidLexer, "dea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("dea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("do\0");
            AphidLexerTests.Tokenize(aphidLexer, "do\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("do\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize14708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fia");
            AphidLexerTests.Tokenize(aphidLexer, "fia");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("load\0");
            AphidLexerTests.Tokenize(aphidLexer, "load\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("load\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize86706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("rea");
            AphidLexerTests.Tokenize(aphidLexer, "rea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("rea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize14905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thûA");
            AphidLexerTests.Tokenize(aphidLexer, "thûA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thûA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize28103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falseA");
            AphidLexerTests.Tokenize(aphidLexer, "falseA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("falseA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize85306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falsea");
            AphidLexerTests.Tokenize(aphidLexer, "falsea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("falsea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("false0");
            AphidLexerTests.Tokenize(aphidLexer, "false0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("false0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize17605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("false");
            AphidLexerTests.Tokenize(aphidLexer, "false");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("false", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize87902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("false_");
            AphidLexerTests.Tokenize(aphidLexer, "false_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("false_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falseýa");
            AphidLexerTests.Tokenize(aphidLexer, "falseýa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("falseýa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize38304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falsea\0");
            AphidLexerTests.Tokenize(aphidLexer, "falsea\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("falsea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62611()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("th[");
            AphidLexerTests.Tokenize(aphidLexer, "th[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("th[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize866()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fo\0");
            AphidLexerTests.Tokenize(aphidLexer, "fo\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fo\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize51202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defa0");
            AphidLexerTests.Tokenize(aphidLexer, "defa0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defa0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize32804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wha");
            AphidLexerTests.Tokenize(aphidLexer, "wha");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("wha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize19604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("final");
            AphidLexerTests.Tokenize(aphidLexer, "final");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("final", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47109()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("t[");
            AphidLexerTests.Tokenize(aphidLexer, "t[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("t[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize52205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("el\0");
            AphidLexerTests.Tokenize(aphidLexer, "el\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("el\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize64106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ea");
            AphidLexerTests.Tokenize(aphidLexer, "ea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defau_");
            AphidLexerTests.Tokenize(aphidLexer, "defau_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defau_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("us\0");
            AphidLexerTests.Tokenize(aphidLexer, "us\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("us\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swit0");
            AphidLexerTests.Tokenize(aphidLexer, "swit0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swit0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("c0");
            AphidLexerTests.Tokenize(aphidLexer, "c0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("c0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize74209()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("br\0");
            AphidLexerTests.Tokenize(aphidLexer, "br\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("br\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize13504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usia");
            AphidLexerTests.Tokenize(aphidLexer, "usia");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize58203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("faa");
            AphidLexerTests.Tokenize(aphidLexer, "faa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("faa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize5009()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("if{");
            AphidLexerTests.Tokenize(aphidLexer, "if{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("if{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finalý0");
            AphidLexerTests.Tokenize(aphidLexer, "finalý0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("finalý0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize68504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loûA");
            AphidLexerTests.Tokenize(aphidLexer, "loûA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loûA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize33905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("reta");
            AphidLexerTests.Tokenize(aphidLexer, "reta");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("reta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize5109()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ret0");
            AphidLexerTests.Tokenize(aphidLexer, "ret0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ret0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize26909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ret:");
            AphidLexerTests.Tokenize(aphidLexer, "ret:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ret:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize30709()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ret{");
            AphidLexerTests.Tokenize(aphidLexer, "ret{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ret{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99509()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ret");
            AphidLexerTests.Tokenize(aphidLexer, "ret");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ret", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("retA");
            AphidLexerTests.Tokenize(aphidLexer, "retA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("retA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ret\0");
            AphidLexerTests.Tokenize(aphidLexer, "ret\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ret\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize320()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ret_");
            AphidLexerTests.Tokenize(aphidLexer, "ret_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ret_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lo[");
            AphidLexerTests.Tokenize(aphidLexer, "lo[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lo[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("reta");
            AphidLexerTests.Tokenize(aphidLexer, "reta");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("reta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize71009()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whila");
            AphidLexerTests.Tokenize(aphidLexer, "whila");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whila", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29511()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ne\0");
            AphidLexerTests.Tokenize(aphidLexer, "ne\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ne\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize5505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat");
            AphidLexerTests.Tokenize(aphidLexer, "cat");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cat", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize8708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("co\0");
            AphidLexerTests.Tokenize(aphidLexer, "co\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("co\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize56105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exa");
            AphidLexerTests.Tokenize(aphidLexer, "exa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("exa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize67402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu\0");
            AphidLexerTests.Tokenize(aphidLexer, "nu\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nu\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize71104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exten");
            AphidLexerTests.Tokenize(aphidLexer, "exten");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("exten", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize38601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ca\0");
            AphidLexerTests.Tokenize(aphidLexer, "ca\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ca\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fal\0");
            AphidLexerTests.Tokenize(aphidLexer, "fal\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fal\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swa");
            AphidLexerTests.Tokenize(aphidLexer, "swa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize14412()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("true\0");
            AphidLexerTests.Tokenize(aphidLexer, "true\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("true\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("true[");
            AphidLexerTests.Tokenize(aphidLexer, "true[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("true[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("truea");
            AphidLexerTests.Tokenize(aphidLexer, "truea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("truea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize13705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("true{");
            AphidLexerTests.Tokenize(aphidLexer, "true{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("true{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("true_");
            AphidLexerTests.Tokenize(aphidLexer, "true_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("true_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize28202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("truea");
            AphidLexerTests.Tokenize(aphidLexer, "truea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("truea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize36903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("if");
            AphidLexerTests.Tokenize(aphidLexer, "if");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("if", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tr\0");
            AphidLexerTests.Tokenize(aphidLexer, "tr\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tr\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize98703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nea");
            AphidLexerTests.Tokenize(aphidLexer, "nea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize13805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("de\0");
            AphidLexerTests.Tokenize(aphidLexer, "de\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("de\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize93506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continue\0");
            AphidLexerTests.Tokenize(aphidLexer, "continue\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continue\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize34204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continue0");
            AphidLexerTests.Tokenize(aphidLexer, "continue0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continue0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2100()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continuea\0");
            AphidLexerTests.Tokenize(aphidLexer, "continuea\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continuea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize34803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continue<\0");
            AphidLexerTests.Tokenize(aphidLexer, "continue<\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continue<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize28514()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continue{");
            AphidLexerTests.Tokenize(aphidLexer, "continue{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continue{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize87807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continueA\0\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "continueA\0\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continueA\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continue");
            AphidLexerTests.Tokenize(aphidLexer, "continue");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continue", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize45211()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continue\0");
            AphidLexerTests.Tokenize(aphidLexer, "continue\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continue\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize82106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continue_");
            AphidLexerTests.Tokenize(aphidLexer, "continue_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continue_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize52402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("contia");
            AphidLexerTests.Tokenize(aphidLexer, "contia");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("contia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize13204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thr\0");
            AphidLexerTests.Tokenize(aphidLexer, "thr\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thr\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize78603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swi\0");
            AphidLexerTests.Tokenize(aphidLexer, "swi\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize13706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switca");
            AphidLexerTests.Tokenize(aphidLexer, "switca");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize61907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ua");
            AphidLexerTests.Tokenize(aphidLexer, "ua");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nuA");
            AphidLexerTests.Tokenize(aphidLexer, "nuA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nuA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fi0");
            AphidLexerTests.Tokenize(aphidLexer, "fi0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fi0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize81002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continuea\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "continuea\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continuea\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize92604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ex\0");
            AphidLexerTests.Tokenize(aphidLexer, "ex\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ex\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize81203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finalA");
            AphidLexerTests.Tokenize(aphidLexer, "finalA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("finalA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nula");
            AphidLexerTests.Tokenize(aphidLexer, "nula");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nula", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize98104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("dA");
            AphidLexerTests.Tokenize(aphidLexer, "dA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("dA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73311()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switch");
            AphidLexerTests.Tokenize(aphidLexer, "switch");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40814()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switch\0\0\0\0\0\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "switch\0\0\0\0\0\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switch\0\0\0\0\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize58804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switcha");
            AphidLexerTests.Tokenize(aphidLexer, "switcha");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switcha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize10403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switchA");
            AphidLexerTests.Tokenize(aphidLexer, "switchA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switchA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switch0");
            AphidLexerTests.Tokenize(aphidLexer, "switch0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switch0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switch{");
            AphidLexerTests.Tokenize(aphidLexer, "switch{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switch{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize5416()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switch");
            AphidLexerTests.Tokenize(aphidLexer, "switch");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("del");
            AphidLexerTests.Tokenize(aphidLexer, "del");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("del", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize51405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fala");
            AphidLexerTests.Tokenize(aphidLexer, "fala");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fala", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize10510()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("def");
            AphidLexerTests.Tokenize(aphidLexer, "def");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("def", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext");
            AphidLexerTests.Tokenize(aphidLexer, "ext");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ext", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize96703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("con[");
            AphidLexerTests.Tokenize(aphidLexer, "con[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("con[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize88710()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nul[");
            AphidLexerTests.Tokenize(aphidLexer, "nul[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nul[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tr{");
            AphidLexerTests.Tokenize(aphidLexer, "tr{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tr{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize34604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lo{");
            AphidLexerTests.Tokenize(aphidLexer, "lo{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lo{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize84405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("re0");
            AphidLexerTests.Tokenize(aphidLexer, "re0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("re0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("//\0");
            AphidLexerTests.Tokenize(aphidLexer, "//\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("//\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("//\r");
            AphidLexerTests.Tokenize(aphidLexer, "//\r");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("//\r", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize66208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("el0");
            AphidLexerTests.Tokenize(aphidLexer, "el0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("el0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44011()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("while0");
            AphidLexerTests.Tokenize(aphidLexer, "while0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("while0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize71604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whileA");
            AphidLexerTests.Tokenize(aphidLexer, "whileA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whileA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whilea");
            AphidLexerTests.Tokenize(aphidLexer, "whilea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whilea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize66302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("while");
            AphidLexerTests.Tokenize(aphidLexer, "while");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("while", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize96602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("while[");
            AphidLexerTests.Tokenize(aphidLexer, "while[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("while[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize82505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("while_");
            AphidLexerTests.Tokenize(aphidLexer, "while_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("while_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize1413()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("while\0");
            AphidLexerTests.Tokenize(aphidLexer, "while\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("while\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize72803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loaa");
            AphidLexerTests.Tokenize(aphidLexer, "loaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize86601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sw");
            AphidLexerTests.Tokenize(aphidLexer, "sw");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("sw", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize86901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("na");
            AphidLexerTests.Tokenize(aphidLexer, "na");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("na", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24810()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("brea");
            AphidLexerTests.Tokenize(aphidLexer, "brea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("brea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thi\0");
            AphidLexerTests.Tokenize(aphidLexer, "thi\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tru\0");
            AphidLexerTests.Tokenize(aphidLexer, "tru\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tru\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48912()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whia");
            AphidLexerTests.Tokenize(aphidLexer, "whia");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("brA");
            AphidLexerTests.Tokenize(aphidLexer, "brA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("brA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize82612()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switch\01.\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "switch\01.\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switch\01.\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize36404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switch\01.0");
            AphidLexerTests.Tokenize(aphidLexer, "switch\01.0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switch\01.0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize50602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switch\01.0\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "switch\01.0\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switch\01.0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21910()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ret");
            AphidLexerTests.Tokenize(aphidLexer, "ret");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ret", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21911()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ia");
            AphidLexerTests.Tokenize(aphidLexer, "ia");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70015()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in\0");
            AphidLexerTests.Tokenize(aphidLexer, "in\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("in\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in0");
            AphidLexerTests.Tokenize(aphidLexer, "in0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("in0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in<");
            AphidLexerTests.Tokenize(aphidLexer, "in<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("in<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("inA");
            AphidLexerTests.Tokenize(aphidLexer, "inA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("inA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize573()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in[");
            AphidLexerTests.Tokenize(aphidLexer, "in[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("in[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize20512()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ina");
            AphidLexerTests.Tokenize(aphidLexer, "ina");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97215()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in{");
            AphidLexerTests.Tokenize(aphidLexer, "in{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("in{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in");
            AphidLexerTests.Tokenize(aphidLexer, "in");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("in", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize76808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in\0");
            AphidLexerTests.Tokenize(aphidLexer, "in\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("in\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize28005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in_");
            AphidLexerTests.Tokenize(aphidLexer, "in_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("in_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize79302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("inA");
            AphidLexerTests.Tokenize(aphidLexer, "inA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("inA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29512()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("inA\0");
            AphidLexerTests.Tokenize(aphidLexer, "inA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("inA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fina");
            AphidLexerTests.Tokenize(aphidLexer, "fina");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize59704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ra");
            AphidLexerTests.Tokenize(aphidLexer, "ra");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize94604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loc\0");
            AphidLexerTests.Tokenize(aphidLexer, "loc\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loc\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize66004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wh0");
            AphidLexerTests.Tokenize(aphidLexer, "wh0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("wh0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usa");
            AphidLexerTests.Tokenize(aphidLexer, "usa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defauý0");
            AphidLexerTests.Tokenize(aphidLexer, "defauý0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defauý0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize28707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defaua");
            AphidLexerTests.Tokenize(aphidLexer, "defaua");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defaua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15310()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("coa");
            AphidLexerTests.Tokenize(aphidLexer, "coa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("coa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize86602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("foa");
            AphidLexerTests.Tokenize(aphidLexer, "foa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("foa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize82006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("rA");
            AphidLexerTests.Tokenize(aphidLexer, "rA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("rA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize79206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in0");
            AphidLexerTests.Tokenize(aphidLexer, "in0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("in0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switchø\01.zA\0");
            AphidLexerTests.Tokenize(aphidLexer, "switchø\01.zA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switchø\01.zA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize58106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wh\0");
            AphidLexerTests.Tokenize(aphidLexer, "wh\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("wh\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("final0\0");
            AphidLexerTests.Tokenize(aphidLexer, "final0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("final0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize84703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("u{");
            AphidLexerTests.Tokenize(aphidLexer, "u{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("u{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize18612()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continueA");
            AphidLexerTests.Tokenize(aphidLexer, "continueA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continueA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("caa");
            AphidLexerTests.Tokenize(aphidLexer, "caa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("caa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize52004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defia");
            AphidLexerTests.Tokenize(aphidLexer, "defia");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24012()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throa");
            AphidLexerTests.Tokenize(aphidLexer, "throa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switcA");
            AphidLexerTests.Tokenize(aphidLexer, "switcA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switcA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize85408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("this");
            AphidLexerTests.Tokenize(aphidLexer, "this");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("this", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0x0\0");
            AphidLexerTests.Tokenize(aphidLexer, "0x0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0x0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize67909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finA");
            AphidLexerTests.Tokenize(aphidLexer, "finA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("finA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize67703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conta");
            AphidLexerTests.Tokenize(aphidLexer, "conta");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("conta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize32404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ela");
            AphidLexerTests.Tokenize(aphidLexer, "ela");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ela", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize3904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fa");
            AphidLexerTests.Tokenize(aphidLexer, "fa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize72602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deletý0");
            AphidLexerTests.Tokenize(aphidLexer, "deletý0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("deletý0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("true00");
            AphidLexerTests.Tokenize(aphidLexer, "true00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("true00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize848()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catcha");
            AphidLexerTests.Tokenize(aphidLexer, "catcha");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catcha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6311()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catchA");
            AphidLexerTests.Tokenize(aphidLexer, "catchA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catchA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize80605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catch0");
            AphidLexerTests.Tokenize(aphidLexer, "catch0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catch0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catch");
            AphidLexerTests.Tokenize(aphidLexer, "catch");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catch_");
            AphidLexerTests.Tokenize(aphidLexer, "catch_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catch_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize18805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catch\0");
            AphidLexerTests.Tokenize(aphidLexer, "catch\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catch\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize27810()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catch0");
            AphidLexerTests.Tokenize(aphidLexer, "catch0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catch0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4317()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deleta");
            AphidLexerTests.Tokenize(aphidLexer, "deleta");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("deleta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize5417()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fin÷A");
            AphidLexerTests.Tokenize(aphidLexer, "fin÷A");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fin÷A", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize17203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finA\0");
            AphidLexerTests.Tokenize(aphidLexer, "finA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("finA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exA");
            AphidLexerTests.Tokenize(aphidLexer, "exA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("exA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize56612()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delet0\0");
            AphidLexerTests.Tokenize(aphidLexer, "delet0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("delet0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46011()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lo");
            AphidLexerTests.Tokenize(aphidLexer, "lo");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lo", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize45801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext{");
            AphidLexerTests.Tokenize(aphidLexer, "ext{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ext{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize71105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("re\0");
            AphidLexerTests.Tokenize(aphidLexer, "re\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("re\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usin_");
            AphidLexerTests.Tokenize(aphidLexer, "usin_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usin_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bra");
            AphidLexerTests.Tokenize(aphidLexer, "bra");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("bra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize1702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thia");
            AphidLexerTests.Tokenize(aphidLexer, "thia");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize45508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tr");
            AphidLexerTests.Tokenize(aphidLexer, "tr");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tr", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24013()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("break0");
            AphidLexerTests.Tokenize(aphidLexer, "break0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("break0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breakA");
            AphidLexerTests.Tokenize(aphidLexer, "breakA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("breakA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35313()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breaka");
            AphidLexerTests.Tokenize(aphidLexer, "breaka");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("breaka", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize86902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("break");
            AphidLexerTests.Tokenize(aphidLexer, "break");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("break", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize26010()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("break_");
            AphidLexerTests.Tokenize(aphidLexer, "break_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("break_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44510()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("break\0");
            AphidLexerTests.Tokenize(aphidLexer, "break\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("break\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize74603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d[");
            AphidLexerTests.Tokenize(aphidLexer, "d[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("d[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delet<");
            AphidLexerTests.Tokenize(aphidLexer, "delet<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("delet<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exteA");
            AphidLexerTests.Tokenize(aphidLexer, "exteA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("exteA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize31103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swia");
            AphidLexerTests.Tokenize(aphidLexer, "swia");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize19914()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("locka");
            AphidLexerTests.Tokenize(aphidLexer, "locka");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("locka", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize68612()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defina");
            AphidLexerTests.Tokenize(aphidLexer, "defina");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("del{");
            AphidLexerTests.Tokenize(aphidLexer, "del{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("del{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ta");
            AphidLexerTests.Tokenize(aphidLexer, "ta");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize860()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w0");
            AphidLexerTests.Tokenize(aphidLexer, "w0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("w0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize39706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catcA");
            AphidLexerTests.Tokenize(aphidLexer, "catcA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catcA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize857()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fi\0");
            AphidLexerTests.Tokenize(aphidLexer, "fi\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize66704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nA");
            AphidLexerTests.Tokenize(aphidLexer, "nA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44109()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("e{");
            AphidLexerTests.Tokenize(aphidLexer, "e{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("e{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29813()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throwa");
            AphidLexerTests.Tokenize(aphidLexer, "throwa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throwa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize17204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throw0");
            AphidLexerTests.Tokenize(aphidLexer, "throw0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throw0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throwA");
            AphidLexerTests.Tokenize(aphidLexer, "throwA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throwA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize86603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throw");
            AphidLexerTests.Tokenize(aphidLexer, "throw");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throw", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize08()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throw_");
            AphidLexerTests.Tokenize(aphidLexer, "throw_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throw_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize28805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throwýa");
            AphidLexerTests.Tokenize(aphidLexer, "throwýa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throwýa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throwa\0");
            AphidLexerTests.Tokenize(aphidLexer, "throwa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throwa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize19205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deleA");
            AphidLexerTests.Tokenize(aphidLexer, "deleA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("deleA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("doa");
            AphidLexerTests.Tokenize(aphidLexer, "doa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("doa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35314()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switc0\0");
            AphidLexerTests.Tokenize(aphidLexer, "switc0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switc0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize20402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nua");
            AphidLexerTests.Tokenize(aphidLexer, "nua");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize94504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fa\0");
            AphidLexerTests.Tokenize(aphidLexer, "fa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize32805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thi[");
            AphidLexerTests.Tokenize(aphidLexer, "thi[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thi[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize79405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whileýA");
            AphidLexerTests.Tokenize(aphidLexer, "whileýA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whileýA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize10002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swi[");
            AphidLexerTests.Tokenize(aphidLexer, "swi[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swi[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize84406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thr÷A\0");
            AphidLexerTests.Tokenize(aphidLexer, "thr÷A\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thr÷A\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize76903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fo0");
            AphidLexerTests.Tokenize(aphidLexer, "fo0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fo0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize98502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("true0A");
            AphidLexerTests.Tokenize(aphidLexer, "true0A");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("true0A", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize51510()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delete[");
            AphidLexerTests.Tokenize(aphidLexer, "delete[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("delete[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize45607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delete");
            AphidLexerTests.Tokenize(aphidLexer, "delete");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("delete", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delete\0\0\0\0\0\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "delete\0\0\0\0\0\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("delete\0\0\0\0\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deletea");
            AphidLexerTests.Tokenize(aphidLexer, "deletea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("deletea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delete{");
            AphidLexerTests.Tokenize(aphidLexer, "delete{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("delete{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize67403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delete");
            AphidLexerTests.Tokenize(aphidLexer, "delete");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("delete", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize87508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("e");
            AphidLexerTests.Tokenize(aphidLexer, "e");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("e", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83011()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("con\0");
            AphidLexerTests.Tokenize(aphidLexer, "con\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("con\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize63306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("contA");
            AphidLexerTests.Tokenize(aphidLexer, "contA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("contA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("els\0");
            AphidLexerTests.Tokenize(aphidLexer, "els\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("els\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize33707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elA");
            AphidLexerTests.Tokenize(aphidLexer, "elA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("elA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switc00");
            AphidLexerTests.Tokenize(aphidLexer, "switc00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switc00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breaa");
            AphidLexerTests.Tokenize(aphidLexer, "breaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("breaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize13806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("u");
            AphidLexerTests.Tokenize(aphidLexer, "u");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("u", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15011()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whil0");
            AphidLexerTests.Tokenize(aphidLexer, "whil0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whil0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize18104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breakýa");
            AphidLexerTests.Tokenize(aphidLexer, "breakýa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("breakýa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97216()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defau0\0");
            AphidLexerTests.Tokenize(aphidLexer, "defau0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defau0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize95911()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E-0:");
            AphidLexerTests.Tokenize(aphidLexer, "0E-0:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0E-0:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("final00");
            AphidLexerTests.Tokenize(aphidLexer, "final00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("final00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize19406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nul");
            AphidLexerTests.Tokenize(aphidLexer, "nul");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nul", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext{e");
            AphidLexerTests.Tokenize(aphidLexer, "ext{e");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ext{e", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize34205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E-00\0");
            AphidLexerTests.Tokenize(aphidLexer, "0E-00\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0E-00\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize34401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0b\0");
            AphidLexerTests.Tokenize(aphidLexer, "0b\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0b\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62910()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0b0");
            AphidLexerTests.Tokenize(aphidLexer, "0b0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0b0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69712()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bA");
            AphidLexerTests.Tokenize(aphidLexer, "bA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("bA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize79406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loada");
            AphidLexerTests.Tokenize(aphidLexer, "loada");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loada", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize45006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("contiý0");
            AphidLexerTests.Tokenize(aphidLexer, "contiý0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("contiý0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize92407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("else\0");
            AphidLexerTests.Tokenize(aphidLexer, "else\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("else\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize34704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elsea");
            AphidLexerTests.Tokenize(aphidLexer, "elsea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("elsea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("else{");
            AphidLexerTests.Tokenize(aphidLexer, "else{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("else{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize71()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("else_");
            AphidLexerTests.Tokenize(aphidLexer, "else_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("else_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize36704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elseA");
            AphidLexerTests.Tokenize(aphidLexer, "elseA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("elseA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("else\0");
            AphidLexerTests.Tokenize(aphidLexer, "else\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("else\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elsea");
            AphidLexerTests.Tokenize(aphidLexer, "elsea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("elsea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize33708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conti0\0");
            AphidLexerTests.Tokenize(aphidLexer, "conti0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("conti0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swita");
            AphidLexerTests.Tokenize(aphidLexer, "swita");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swita", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize34902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switchø\01.\"\0\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "switchø\01.\"\0\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switchø\01.\"\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize93406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breaka\0");
            AphidLexerTests.Tokenize(aphidLexer, "breaka\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("breaka\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catch0\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "catch0\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catch0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90510()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thAA");
            AphidLexerTests.Tokenize(aphidLexer, "thAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47210()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wh{");
            AphidLexerTests.Tokenize(aphidLexer, "wh{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("wh{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize33804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delete0");
            AphidLexerTests.Tokenize(aphidLexer, "delete0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("delete0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%><\0");
            AphidLexerTests.Tokenize(aphidLexer, "%><\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%><\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ne[");
            AphidLexerTests.Tokenize(aphidLexer, "ne[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ne[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize3203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extend");
            AphidLexerTests.Tokenize(aphidLexer, "extend");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("extend", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize77304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extend\0\0\0\0\0\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "extend\0\0\0\0\0\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("extend\0\0\0\0\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize45007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extenda");
            AphidLexerTests.Tokenize(aphidLexer, "extenda");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("extenda", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize13107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loc");
            AphidLexerTests.Tokenize(aphidLexer, "loc");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("co0");
            AphidLexerTests.Tokenize(aphidLexer, "co0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("co0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize53204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swA");
            AphidLexerTests.Tokenize(aphidLexer, "swA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whileA\0");
            AphidLexerTests.Tokenize(aphidLexer, "whileA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whileA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext\0");
            AphidLexerTests.Tokenize(aphidLexer, "ext\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ext\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize13505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conti<");
            AphidLexerTests.Tokenize(aphidLexer, "conti<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("conti<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize88312()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("else");
            AphidLexerTests.Tokenize(aphidLexer, "else");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("else", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize57001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("br0");
            AphidLexerTests.Tokenize(aphidLexer, "br0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("br0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11209()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extea");
            AphidLexerTests.Tokenize(aphidLexer, "extea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("extea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize17004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catAa");
            AphidLexerTests.Tokenize(aphidLexer, "catAa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catAa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in<");
            AphidLexerTests.Tokenize(aphidLexer, "in<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("in<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11809()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cA");
            AphidLexerTests.Tokenize(aphidLexer, "cA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize77707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fora");
            AphidLexerTests.Tokenize(aphidLexer, "fora");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fora", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("for{");
            AphidLexerTests.Tokenize(aphidLexer, "for{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("for{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize32306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("for0");
            AphidLexerTests.Tokenize(aphidLexer, "for0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("for0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75721()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("for");
            AphidLexerTests.Tokenize(aphidLexer, "for");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("for", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("forA");
            AphidLexerTests.Tokenize(aphidLexer, "forA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("forA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("for\0");
            AphidLexerTests.Tokenize(aphidLexer, "for\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("for\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("for_");
            AphidLexerTests.Tokenize(aphidLexer, "for_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("for_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fora");
            AphidLexerTests.Tokenize(aphidLexer, "fora");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fora", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("forA");
            AphidLexerTests.Tokenize(aphidLexer, "forA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("forA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize39707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("for0");
            AphidLexerTests.Tokenize(aphidLexer, "for0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("for0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize85206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sw0");
            AphidLexerTests.Tokenize(aphidLexer, "sw0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("sw0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize76103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in[");
            AphidLexerTests.Tokenize(aphidLexer, "in[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("in[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize79804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extenda\0");
            AphidLexerTests.Tokenize(aphidLexer, "extenda\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("extenda\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize5909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("reA");
            AphidLexerTests.Tokenize(aphidLexer, "reA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("reA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("faA");
            AphidLexerTests.Tokenize(aphidLexer, "faA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("faA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize22103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l0");
            AphidLexerTests.Tokenize(aphidLexer, "l0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("l0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize33906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("for[");
            AphidLexerTests.Tokenize(aphidLexer, "for[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("for[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize59202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("null\0");
            AphidLexerTests.Tokenize(aphidLexer, "null\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("null\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73511()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nulla");
            AphidLexerTests.Tokenize(aphidLexer, "nulla");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nulla", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("null{");
            AphidLexerTests.Tokenize(aphidLexer, "null{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("null{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize765()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("null_");
            AphidLexerTests.Tokenize(aphidLexer, "null_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("null_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35315()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("null\0");
            AphidLexerTests.Tokenize(aphidLexer, "null\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("null\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize3905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nulla");
            AphidLexerTests.Tokenize(aphidLexer, "nulla");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nulla", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("true");
            AphidLexerTests.Tokenize(aphidLexer, "true");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("true", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize56903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loAA");
            AphidLexerTests.Tokenize(aphidLexer, "loAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize34705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deletA");
            AphidLexerTests.Tokenize(aphidLexer, "deletA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("deletA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize95409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("reta\0");
            AphidLexerTests.Tokenize(aphidLexer, "reta\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("reta\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fiA");
            AphidLexerTests.Tokenize(aphidLexer, "fiA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wh");
            AphidLexerTests.Tokenize(aphidLexer, "wh");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("wh", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize76402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defa<");
            AphidLexerTests.Tokenize(aphidLexer, "defa<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defa<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize17005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continue{");
            AphidLexerTests.Tokenize(aphidLexer, "continue{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continue{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize45008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d{");
            AphidLexerTests.Tokenize(aphidLexer, "d{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("d{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize5910()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("r0");
            AphidLexerTests.Tokenize(aphidLexer, "r0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("r0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize38911()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continuea0\0");
            AphidLexerTests.Tokenize(aphidLexer, "continuea0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continuea0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize58204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/*\0");
            AphidLexerTests.Tokenize(aphidLexer, "/*\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/*\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize57507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/**");
            AphidLexerTests.Tokenize(aphidLexer, "/**");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/**", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize31704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("caA");
            AphidLexerTests.Tokenize(aphidLexer, "caA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("caA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize38305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d");
            AphidLexerTests.Tokenize(aphidLexer, "d");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("d", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize89502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("trya");
            AphidLexerTests.Tokenize(aphidLexer, "trya");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("trya", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize31001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("try0");
            AphidLexerTests.Tokenize(aphidLexer, "try0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("try0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("try{");
            AphidLexerTests.Tokenize(aphidLexer, "try{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("try{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35712()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tryA");
            AphidLexerTests.Tokenize(aphidLexer, "tryA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tryA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize7206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("try");
            AphidLexerTests.Tokenize(aphidLexer, "try");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("try", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("try\0");
            AphidLexerTests.Tokenize(aphidLexer, "try\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("try\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize37906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("try_");
            AphidLexerTests.Tokenize(aphidLexer, "try_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("try_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize61205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("trya");
            AphidLexerTests.Tokenize(aphidLexer, "trya");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("trya", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize93205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tryA");
            AphidLexerTests.Tokenize(aphidLexer, "tryA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tryA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("coA");
            AphidLexerTests.Tokenize(aphidLexer, "coA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("coA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("iA");
            AphidLexerTests.Tokenize(aphidLexer, "iA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("iA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ex0");
            AphidLexerTests.Tokenize(aphidLexer, "ex0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ex0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize58506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usA");
            AphidLexerTests.Tokenize(aphidLexer, "usA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize84303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usina");
            AphidLexerTests.Tokenize(aphidLexer, "usina");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize81003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ca0");
            AphidLexerTests.Tokenize(aphidLexer, "ca0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ca0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize41404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("s0");
            AphidLexerTests.Tokenize(aphidLexer, "s0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("s0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize64007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continue\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "continue\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continue\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize94906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usingA");
            AphidLexerTests.Tokenize(aphidLexer, "usingA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usingA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("using0");
            AphidLexerTests.Tokenize(aphidLexer, "using0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("using0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usinga");
            AphidLexerTests.Tokenize(aphidLexer, "usinga");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usinga", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize27204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("using");
            AphidLexerTests.Tokenize(aphidLexer, "using");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("using", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46012()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("using_");
            AphidLexerTests.Tokenize(aphidLexer, "using_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("using_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize30803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("using\0");
            AphidLexerTests.Tokenize(aphidLexer, "using\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("using\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defau00");
            AphidLexerTests.Tokenize(aphidLexer, "defau00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defau00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize45402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continu0\0\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "continu0\0\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continu0\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("try0");
            AphidLexerTests.Tokenize(aphidLexer, "try0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("try0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21710()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu0");
            AphidLexerTests.Tokenize(aphidLexer, "nu0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nu0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60209()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w[");
            AphidLexerTests.Tokenize(aphidLexer, "w[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("w[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize53305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extend{");
            AphidLexerTests.Tokenize(aphidLexer, "extend{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("extend{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bre");
            AphidLexerTests.Tokenize(aphidLexer, "bre");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("bre", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize64901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extend");
            AphidLexerTests.Tokenize(aphidLexer, "extend");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("extend", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("r{");
            AphidLexerTests.Tokenize(aphidLexer, "r{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("r{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24509()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("new0");
            AphidLexerTests.Tokenize(aphidLexer, "new0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("new0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("new:");
            AphidLexerTests.Tokenize(aphidLexer, "new:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("new:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("newA");
            AphidLexerTests.Tokenize(aphidLexer, "newA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("newA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("new[");
            AphidLexerTests.Tokenize(aphidLexer, "new[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("new[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize96115()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("newa");
            AphidLexerTests.Tokenize(aphidLexer, "newa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("newa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15813()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("new{");
            AphidLexerTests.Tokenize(aphidLexer, "new{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("new{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21711()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("new");
            AphidLexerTests.Tokenize(aphidLexer, "new");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("new", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("new\0");
            AphidLexerTests.Tokenize(aphidLexer, "new\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("new\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24417()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("new_");
            AphidLexerTests.Tokenize(aphidLexer, "new_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("new_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize33403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("newa");
            AphidLexerTests.Tokenize(aphidLexer, "newa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("newa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6210()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("newA");
            AphidLexerTests.Tokenize(aphidLexer, "newA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("newA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swi÷A\0");
            AphidLexerTests.Tokenize(aphidLexer, "swi÷A\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swi÷A\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("foA");
            AphidLexerTests.Tokenize(aphidLexer, "foA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("foA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62810()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breaA");
            AphidLexerTests.Tokenize(aphidLexer, "breaA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("breaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize1803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whilA");
            AphidLexerTests.Tokenize(aphidLexer, "whilA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whilA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falsA");
            AphidLexerTests.Tokenize(aphidLexer, "falsA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("falsA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catc\0");
            AphidLexerTests.Tokenize(aphidLexer, "catc\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catc\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sA");
            AphidLexerTests.Tokenize(aphidLexer, "sA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("sA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize89002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cona");
            AphidLexerTests.Tokenize(aphidLexer, "cona");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cona", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44311()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("s[");
            AphidLexerTests.Tokenize(aphidLexer, "s[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("s[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize64107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("taa");
            AphidLexerTests.Tokenize(aphidLexer, "taa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("taa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize27101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cont\0");
            AphidLexerTests.Tokenize(aphidLexer, "cont\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cont\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11810()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sw{");
            AphidLexerTests.Tokenize(aphidLexer, "sw{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("sw{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize61108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("el{");
            AphidLexerTests.Tokenize(aphidLexer, "el{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("el{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62911()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fo[");
            AphidLexerTests.Tokenize(aphidLexer, "fo[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fo[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extae");
            AphidLexerTests.Tokenize(aphidLexer, "extae");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("extae", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize58014()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fa0");
            AphidLexerTests.Tokenize(aphidLexer, "fa0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fa0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b0");
            AphidLexerTests.Tokenize(aphidLexer, "b0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("b0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize59605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tru÷A\0");
            AphidLexerTests.Tokenize(aphidLexer, "tru÷A\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tru÷A\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("br[");
            AphidLexerTests.Tokenize(aphidLexer, "br[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("br[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breakaA");
            AphidLexerTests.Tokenize(aphidLexer, "breakaA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("breakaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize7305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("br{");
            AphidLexerTests.Tokenize(aphidLexer, "br{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("br{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44511()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("da\0");
            AphidLexerTests.Tokenize(aphidLexer, "da\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("da\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize20307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conti{");
            AphidLexerTests.Tokenize(aphidLexer, "conti{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("conti{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sw");
            AphidLexerTests.Tokenize(aphidLexer, "sw");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("sw", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize17305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conti");
            AphidLexerTests.Tokenize(aphidLexer, "conti");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("conti", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize45403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("newa\0");
            AphidLexerTests.Tokenize(aphidLexer, "newa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("newa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6119()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continu<");
            AphidLexerTests.Tokenize(aphidLexer, "continu<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continu<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29814()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ca[");
            AphidLexerTests.Tokenize(aphidLexer, "ca[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ca[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize17404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extený0");
            AphidLexerTests.Tokenize(aphidLexer, "extený0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("extený0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("eaa");
            AphidLexerTests.Tokenize(aphidLexer, "eaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("eaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize39708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("null0");
            AphidLexerTests.Tokenize(aphidLexer, "null0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("null0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize26211()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throwaA");
            AphidLexerTests.Tokenize(aphidLexer, "throwaA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throwaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loadAA");
            AphidLexerTests.Tokenize(aphidLexer, "loadAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loadAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize19206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breaka0");
            AphidLexerTests.Tokenize(aphidLexer, "breaka0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("breaka0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize26805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defba");
            AphidLexerTests.Tokenize(aphidLexer, "defba");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defba", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("co[");
            AphidLexerTests.Tokenize(aphidLexer, "co[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("co[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize41907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ne{");
            AphidLexerTests.Tokenize(aphidLexer, "ne{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ne{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("definý0");
            AphidLexerTests.Tokenize(aphidLexer, "definý0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("definý0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falaa");
            AphidLexerTests.Tokenize(aphidLexer, "falaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("falaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4114()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fûa\0");
            AphidLexerTests.Tokenize(aphidLexer, "fûa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fûa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize51006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("f{");
            AphidLexerTests.Tokenize(aphidLexer, "f{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("f{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("f");
            AphidLexerTests.Tokenize(aphidLexer, "f");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("f", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9612()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("els");
            AphidLexerTests.Tokenize(aphidLexer, "els");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("els", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switc{");
            AphidLexerTests.Tokenize(aphidLexer, "switc{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switc{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize39410()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catac");
            AphidLexerTests.Tokenize(aphidLexer, "catac");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catac", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99510()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loa[");
            AphidLexerTests.Tokenize(aphidLexer, "loa[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loa[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91111()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throwa[");
            AphidLexerTests.Tokenize(aphidLexer, "throwa[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throwa[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("i0");
            AphidLexerTests.Tokenize(aphidLexer, "i0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("i0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21712()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("new0");
            AphidLexerTests.Tokenize(aphidLexer, "new0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("new0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("else0");
            AphidLexerTests.Tokenize(aphidLexer, "else0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("else0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("new[");
            AphidLexerTests.Tokenize(aphidLexer, "new[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("new[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize57002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delet[");
            AphidLexerTests.Tokenize(aphidLexer, "delet[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("delet[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize3204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("trua");
            AphidLexerTests.Tokenize(aphidLexer, "trua");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("trua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize8506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("iaa");
            AphidLexerTests.Tokenize(aphidLexer, "iaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("iaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize34504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ne");
            AphidLexerTests.Tokenize(aphidLexer, "ne");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ne", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize38406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("co{");
            AphidLexerTests.Tokenize(aphidLexer, "co{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("co{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize81305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delaa");
            AphidLexerTests.Tokenize(aphidLexer, "delaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("delaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize52005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("c{");
            AphidLexerTests.Tokenize(aphidLexer, "c{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("c{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nullaA");
            AphidLexerTests.Tokenize(aphidLexer, "nullaA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nullaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize93905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b<");
            AphidLexerTests.Tokenize(aphidLexer, "b<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("b<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize5010()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switA");
            AphidLexerTests.Tokenize(aphidLexer, "switA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize27301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ex{");
            AphidLexerTests.Tokenize(aphidLexer, "ex{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ex{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b[");
            AphidLexerTests.Tokenize(aphidLexer, "b[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("b[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("us0");
            AphidLexerTests.Tokenize(aphidLexer, "us0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("us0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47211()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lA");
            AphidLexerTests.Tokenize(aphidLexer, "lA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97217()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("reaa");
            AphidLexerTests.Tokenize(aphidLexer, "reaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("reaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize64711()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deleteA");
            AphidLexerTests.Tokenize(aphidLexer, "deleteA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("deleteA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62713()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switchA\0");
            AphidLexerTests.Tokenize(aphidLexer, "switchA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switchA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize37808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extenA");
            AphidLexerTests.Tokenize(aphidLexer, "extenA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("extenA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize779()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l{");
            AphidLexerTests.Tokenize(aphidLexer, "l{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("l{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize50103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tryaa");
            AphidLexerTests.Tokenize(aphidLexer, "tryaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tryaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("contiA");
            AphidLexerTests.Tokenize(aphidLexer, "contiA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("contiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("n0");
            AphidLexerTests.Tokenize(aphidLexer, "n0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("n0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize577()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("locaa");
            AphidLexerTests.Tokenize(aphidLexer, "locaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("locaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whaa");
            AphidLexerTests.Tokenize(aphidLexer, "whaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu[");
            AphidLexerTests.Tokenize(aphidLexer, "nu[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nu[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize5110()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("br");
            AphidLexerTests.Tokenize(aphidLexer, "br");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("br", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continu{");
            AphidLexerTests.Tokenize(aphidLexer, "continu{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continu{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("th{");
            AphidLexerTests.Tokenize(aphidLexer, "th{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("th{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize79407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usaa");
            AphidLexerTests.Tokenize(aphidLexer, "usaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35012()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lockA");
            AphidLexerTests.Tokenize(aphidLexer, "lockA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lockA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize3109()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swi");
            AphidLexerTests.Tokenize(aphidLexer, "swi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize53402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fa[");
            AphidLexerTests.Tokenize(aphidLexer, "fa[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fa[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize51007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("foraa");
            AphidLexerTests.Tokenize(aphidLexer, "foraa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("foraa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usingO\0\0\b\b\0");
            AphidLexerTests.Tokenize(aphidLexer, "usingO\0\0\b\b\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usingO\0\0\b\b\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize18105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extend0");
            AphidLexerTests.Tokenize(aphidLexer, "extend0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("extend0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize66104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("doaa");
            AphidLexerTests.Tokenize(aphidLexer, "doaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("doaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60210()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defau{");
            AphidLexerTests.Tokenize(aphidLexer, "defau{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defau{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0b01");
            AphidLexerTests.Tokenize(aphidLexer, "0b01");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0b01", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("con");
            AphidLexerTests.Tokenize(aphidLexer, "con");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("con", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize54704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switc");
            AphidLexerTests.Tokenize(aphidLexer, "switc");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize38207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0b00");
            AphidLexerTests.Tokenize(aphidLexer, "0b00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0b00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize85904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("saa");
            AphidLexerTests.Tokenize(aphidLexer, "saa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("saa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continu");
            AphidLexerTests.Tokenize(aphidLexer, "continu");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize52102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fi[");
            AphidLexerTests.Tokenize(aphidLexer, "fi[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fi[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25209()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exaa");
            AphidLexerTests.Tokenize(aphidLexer, "exaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("exaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize86402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("de{");
            AphidLexerTests.Tokenize(aphidLexer, "de{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("de{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elaa");
            AphidLexerTests.Tokenize(aphidLexer, "elaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("elaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize76809()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("c");
            AphidLexerTests.Tokenize(aphidLexer, "c");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("c", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize56904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whiaa");
            AphidLexerTests.Tokenize(aphidLexer, "whiaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whiaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conti00");
            AphidLexerTests.Tokenize(aphidLexer, "conti00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("conti00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0xA\0");
            AphidLexerTests.Tokenize(aphidLexer, "0xA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0xA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("new");
            AphidLexerTests.Tokenize(aphidLexer, "new");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("new", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4115()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loa");
            AphidLexerTests.Tokenize(aphidLexer, "loa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b{");
            AphidLexerTests.Tokenize(aphidLexer, "b{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("b{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize98503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extenA\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "extenA\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("extenA\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize71905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("th");
            AphidLexerTests.Tokenize(aphidLexer, "th");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("th", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize8008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("n{");
            AphidLexerTests.Tokenize(aphidLexer, "n{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("n{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize57701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deletea\0");
            AphidLexerTests.Tokenize(aphidLexer, "deletea\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("deletea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91112()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("de");
            AphidLexerTests.Tokenize(aphidLexer, "de");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("de", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize57003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0x00");
            AphidLexerTests.Tokenize(aphidLexer, "0x00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0x00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize1804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breaka[");
            AphidLexerTests.Tokenize(aphidLexer, "breaka[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("breaka[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fiaa");
            AphidLexerTests.Tokenize(aphidLexer, "fiaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fiaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("waa");
            AphidLexerTests.Tokenize(aphidLexer, "waa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("waa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ex");
            AphidLexerTests.Tokenize(aphidLexer, "ex");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ex", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize20801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("naa");
            AphidLexerTests.Tokenize(aphidLexer, "naa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("naa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize98905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("raa");
            AphidLexerTests.Tokenize(aphidLexer, "raa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("raa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize66804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu{");
            AphidLexerTests.Tokenize(aphidLexer, "nu{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nu{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize50603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cba");
            AphidLexerTests.Tokenize(aphidLexer, "cba");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cba", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thi");
            AphidLexerTests.Tokenize(aphidLexer, "thi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize61109()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switch\01.00");
            AphidLexerTests.Tokenize(aphidLexer, "switch\01.00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switch\01.00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6211()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swaa");
            AphidLexerTests.Tokenize(aphidLexer, "swaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize54206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("s{");
            AphidLexerTests.Tokenize(aphidLexer, "s{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("s{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65309()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("el");
            AphidLexerTests.Tokenize(aphidLexer, "el");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("el", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("coaa");
            AphidLexerTests.Tokenize(aphidLexer, "coaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("coaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("uaa");
            AphidLexerTests.Tokenize(aphidLexer, "uaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("uaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize78502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/*\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "/*\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/*\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize38104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("co");
            AphidLexerTests.Tokenize(aphidLexer, "co");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("co", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("false");
            AphidLexerTests.Tokenize(aphidLexer, "false");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("false", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize59606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defin0\0");
            AphidLexerTests.Tokenize(aphidLexer, "defin0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defin0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize32001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usi");
            AphidLexerTests.Tokenize(aphidLexer, "usi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fo{");
            AphidLexerTests.Tokenize(aphidLexer, "fo{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fo{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize30203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("laa");
            AphidLexerTests.Tokenize(aphidLexer, "laa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("laa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize53006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("//\0\n");
            AphidLexerTests.Tokenize(aphidLexer, "//\0\n");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("//\0\n", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nul÷A\0");
            AphidLexerTests.Tokenize(aphidLexer, "nul÷A\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nul÷A\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ina");
            AphidLexerTests.Tokenize(aphidLexer, "ina");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize57301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("traa");
            AphidLexerTests.Tokenize(aphidLexer, "traa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("traa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize77806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("load");
            AphidLexerTests.Tokenize(aphidLexer, "load");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("load", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize13301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("caaa");
            AphidLexerTests.Tokenize(aphidLexer, "caaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("caaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loaaa");
            AphidLexerTests.Tokenize(aphidLexer, "loaaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loaaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize18511()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defau");
            AphidLexerTests.Tokenize(aphidLexer, "defau");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defau", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize32512()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("faaa");
            AphidLexerTests.Tokenize(aphidLexer, "faaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("faaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize31506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("baa");
            AphidLexerTests.Tokenize(aphidLexer, "baa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("baa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("s");
            AphidLexerTests.Tokenize(aphidLexer, "s");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("s", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize56305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("try[");
            AphidLexerTests.Tokenize(aphidLexer, "try[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("try[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70016()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("neaa");
            AphidLexerTests.Tokenize(aphidLexer, "neaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("neaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize80909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elsae");
            AphidLexerTests.Tokenize(aphidLexer, "elsae");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("elsae", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize5705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thisa0");
            AphidLexerTests.Tokenize(aphidLexer, "thisa0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thisa0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize57909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nuaa");
            AphidLexerTests.Tokenize(aphidLexer, "nuaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nuaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize8009()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elsAa");
            AphidLexerTests.Tokenize(aphidLexer, "elsAa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("elsAa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize27608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("braa");
            AphidLexerTests.Tokenize(aphidLexer, "braa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("braa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize71404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exten0\0");
            AphidLexerTests.Tokenize(aphidLexer, "exten0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("exten0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize8903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext{ee");
            AphidLexerTests.Tokenize(aphidLexer, "ext{ee");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ext{ee", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize10404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lock0");
            AphidLexerTests.Tokenize(aphidLexer, "lock0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lock0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("retaa");
            AphidLexerTests.Tokenize(aphidLexer, "retaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("retaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize13405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defin{");
            AphidLexerTests.Tokenize(aphidLexer, "defin{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defin{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize85307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("true");
            AphidLexerTests.Tokenize(aphidLexer, "true");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("true", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize74907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thisAA");
            AphidLexerTests.Tokenize(aphidLexer, "thisAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thisAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40815()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extendaA");
            AphidLexerTests.Tokenize(aphidLexer, "extendaA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("extendaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize22806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("for");
            AphidLexerTests.Tokenize(aphidLexer, "for");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("for", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delet{");
            AphidLexerTests.Tokenize(aphidLexer, "delet{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("delet{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize98207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usiaa");
            AphidLexerTests.Tokenize(aphidLexer, "usiaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usiaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize39709()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bre÷a\0");
            AphidLexerTests.Tokenize(aphidLexer, "bre÷a\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("bre÷a\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize77402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usin");
            AphidLexerTests.Tokenize(aphidLexer, "usin");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defaA");
            AphidLexerTests.Tokenize(aphidLexer, "defaA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize79606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tru");
            AphidLexerTests.Tokenize(aphidLexer, "tru");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tru", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l");
            AphidLexerTests.Tokenize(aphidLexer, "l");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("l", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize41507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("i<");
            AphidLexerTests.Tokenize(aphidLexer, "i<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("i<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize50104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext{ex");
            AphidLexerTests.Tokenize(aphidLexer, "ext{ex");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ext{ex", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize20601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throa\0");
            AphidLexerTests.Tokenize(aphidLexer, "throa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("del\0");
            AphidLexerTests.Tokenize(aphidLexer, "del\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("del\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lock");
            AphidLexerTests.Tokenize(aphidLexer, "lock");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lock", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delet");
            AphidLexerTests.Tokenize(aphidLexer, "delet");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("delet", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize27405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("null");
            AphidLexerTests.Tokenize(aphidLexer, "null");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("null", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defin");
            AphidLexerTests.Tokenize(aphidLexer, "defin");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("r");
            AphidLexerTests.Tokenize(aphidLexer, "r");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("r", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swita\0");
            AphidLexerTests.Tokenize(aphidLexer, "swita\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swita\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65613()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deleA\0");
            AphidLexerTests.Tokenize(aphidLexer, "deleA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("deleA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fo");
            AphidLexerTests.Tokenize(aphidLexer, "fo");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fo", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize3205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("daa");
            AphidLexerTests.Tokenize(aphidLexer, "daa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("daa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("try");
            AphidLexerTests.Tokenize(aphidLexer, "try");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("try", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in{");
            AphidLexerTests.Tokenize(aphidLexer, "in{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("in{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finaa");
            AphidLexerTests.Tokenize(aphidLexer, "finaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("finaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext{exe");
            AphidLexerTests.Tokenize(aphidLexer, "ext{exe");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ext{exe", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize63104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in");
            AphidLexerTests.Tokenize(aphidLexer, "in");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("in", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize57608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext{ext");
            AphidLexerTests.Tokenize(aphidLexer, "ext{ext");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ext{ext", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize96603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext{exte");
            AphidLexerTests.Tokenize(aphidLexer, "ext{exte");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ext{exte", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize51305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext{ext\0");
            AphidLexerTests.Tokenize(aphidLexer, "ext{ext\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ext{ext\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize56405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breba");
            AphidLexerTests.Tokenize(aphidLexer, "breba");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("breba", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext{extenee");
            AphidLexerTests.Tokenize(aphidLexer, "ext{extenee");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ext{extenee", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize85905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switchø\01.~1\0");
            AphidLexerTests.Tokenize(aphidLexer, "switchø\01.~1\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switchø\01.~1\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99709()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elseaa");
            AphidLexerTests.Tokenize(aphidLexer, "elseaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("elseaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nullA0");
            AphidLexerTests.Tokenize(aphidLexer, "nullA0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nullA0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40816()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lock00");
            AphidLexerTests.Tokenize(aphidLexer, "lock00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lock00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize65505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu");
            AphidLexerTests.Tokenize(aphidLexer, "nu");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deaa");
            AphidLexerTests.Tokenize(aphidLexer, "deaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("deaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize28806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b");
            AphidLexerTests.Tokenize(aphidLexer, "b");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("b", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize39311()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continuea00");
            AphidLexerTests.Tokenize(aphidLexer, "continuea00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continuea00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize28605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fal");
            AphidLexerTests.Tokenize(aphidLexer, "fal");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fal", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize52103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("newaa");
            AphidLexerTests.Tokenize(aphidLexer, "newaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("newaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9114()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throaA");
            AphidLexerTests.Tokenize(aphidLexer, "throaA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("contA\0");
            AphidLexerTests.Tokenize(aphidLexer, "contA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("contA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47110()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delet00");
            AphidLexerTests.Tokenize(aphidLexer, "delet00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("delet00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("n");
            AphidLexerTests.Tokenize(aphidLexer, "n");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("n", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize74305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("iA\0");
            AphidLexerTests.Tokenize(aphidLexer, "iA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("iA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize41002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deleAa");
            AphidLexerTests.Tokenize(aphidLexer, "deleAa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("deleAa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize98005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lockaa");
            AphidLexerTests.Tokenize(aphidLexer, "lockaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lockaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize31308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loadaa");
            AphidLexerTests.Tokenize(aphidLexer, "loadaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loadaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deleAA");
            AphidLexerTests.Tokenize(aphidLexer, "deleAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("deleAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize81906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defin00");
            AphidLexerTests.Tokenize(aphidLexer, "defin00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defin00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize56306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("inaa");
            AphidLexerTests.Tokenize(aphidLexer, "inaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("inaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize34804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breaA\0");
            AphidLexerTests.Tokenize(aphidLexer, "breaA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("breaA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize54207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falsa\0");
            AphidLexerTests.Tokenize(aphidLexer, "falsa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("falsa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize38507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("foaa");
            AphidLexerTests.Tokenize(aphidLexer, "foaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("foaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize71804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ifaa");
            AphidLexerTests.Tokenize(aphidLexer, "ifaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ifaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize87204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fûaa");
            AphidLexerTests.Tokenize(aphidLexer, "fûaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fûaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize79303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switch\01.\'\\\0\\\0");
            AphidLexerTests.Tokenize(aphidLexer, "switch\01.\'\\\0\\\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switch\01.\'\\\0\\\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("trueaa");
            AphidLexerTests.Tokenize(aphidLexer, "trueaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("trueaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91415()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deleA[");
            AphidLexerTests.Tokenize(aphidLexer, "deleA[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("deleA[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2810()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext{exten{");
            AphidLexerTests.Tokenize(aphidLexer, "ext{exten{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ext{exten{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize17306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whil[");
            AphidLexerTests.Tokenize(aphidLexer, "whil[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whil[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext{extAe");
            AphidLexerTests.Tokenize(aphidLexer, "ext{extAe");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ext{extAe", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continuaa");
            AphidLexerTests.Tokenize(aphidLexer, "continuaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continuaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catca\0");
            AphidLexerTests.Tokenize(aphidLexer, "catca\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catca\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deleteþaa\0\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "deleteþaa\0\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("deleteþaa\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62811()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deletaa");
            AphidLexerTests.Tokenize(aphidLexer, "deletaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("deletaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize18613()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("t_\0");
            AphidLexerTests.Tokenize(aphidLexer, "t_\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("t_\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ca{");
            AphidLexerTests.Tokenize(aphidLexer, "ca{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ca{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize35316()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0b00\0");
            AphidLexerTests.Tokenize(aphidLexer, "0b00\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0b00\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize20004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swita0\0");
            AphidLexerTests.Tokenize(aphidLexer, "swita0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swita0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0xA:");
            AphidLexerTests.Tokenize(aphidLexer, "0xA:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0xA:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize87205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conaa");
            AphidLexerTests.Tokenize(aphidLexer, "conaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("conaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize77708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usin_\0");
            AphidLexerTests.Tokenize(aphidLexer, "usin_\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usin_\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize24418()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("re{");
            AphidLexerTests.Tokenize(aphidLexer, "re{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("re{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize13108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("null00");
            AphidLexerTests.Tokenize(aphidLexer, "null00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("null00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throwaa");
            AphidLexerTests.Tokenize(aphidLexer, "throwaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throwaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize95606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("else00");
            AphidLexerTests.Tokenize(aphidLexer, "else00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("else00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize92605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catchýa");
            AphidLexerTests.Tokenize(aphidLexer, "catchýa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catchýa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize28807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("re");
            AphidLexerTests.Tokenize(aphidLexer, "re");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("re", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize87308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switchþaa\0\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "switchþaa\0\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switchþaa\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize94907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("do{");
            AphidLexerTests.Tokenize(aphidLexer, "do{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("do{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize85506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext{extend\0");
            AphidLexerTests.Tokenize(aphidLexer, "ext{extend\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ext{extend\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("waA\0");
            AphidLexerTests.Tokenize(aphidLexer, "waA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("waA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize10201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("contiaa");
            AphidLexerTests.Tokenize(aphidLexer, "contiaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("contiaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whi");
            AphidLexerTests.Tokenize(aphidLexer, "whi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize80511()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("t{");
            AphidLexerTests.Tokenize(aphidLexer, "t{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("t{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize37907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continueaa\0");
            AphidLexerTests.Tokenize(aphidLexer, "continueaa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continueaa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("laA\0");
            AphidLexerTests.Tokenize(aphidLexer, "laA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("laA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize37704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("els\0el");
            AphidLexerTests.Tokenize(aphidLexer, "els\0el");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("els\0el", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48110()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("els\0exeeeeeee");
            AphidLexerTests.Tokenize(aphidLexer, "els\0exeeeeeee");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("els\0exeeeeeee", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("els\0eleeeeeee");
            AphidLexerTests.Tokenize(aphidLexer, "els\0eleeeeeee");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("els\0eleeeeeee", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize54307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("els\0els");
            AphidLexerTests.Tokenize(aphidLexer, "els\0els");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("els\0els", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize63105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("els\0elsee");
            AphidLexerTests.Tokenize(aphidLexer, "els\0elsee");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("els\0elsee", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23009()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("els\0els\0e");
            AphidLexerTests.Tokenize(aphidLexer, "els\0els\0e");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("els\0els\0e", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize67104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swit[");
            AphidLexerTests.Tokenize(aphidLexer, "swit[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swit[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize82805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throa[");
            AphidLexerTests.Tokenize(aphidLexer, "throa[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throa[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize54102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fa{");
            AphidLexerTests.Tokenize(aphidLexer, "fa{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fa{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("els\0extendaee");
            AphidLexerTests.Tokenize(aphidLexer, "els\0extendaee");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("els\0extendaee", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thaa");
            AphidLexerTests.Tokenize(aphidLexer, "thaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("final_");
            AphidLexerTests.Tokenize(aphidLexer, "final_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("final_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize54103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("t");
            AphidLexerTests.Tokenize(aphidLexer, "t");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("t", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75009()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thiaa");
            AphidLexerTests.Tokenize(aphidLexer, "thiaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thiaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize64403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fi{");
            AphidLexerTests.Tokenize(aphidLexer, "fi{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fi{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize61409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("definaa");
            AphidLexerTests.Tokenize(aphidLexer, "definaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("definaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize82406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("doaA\0");
            AphidLexerTests.Tokenize(aphidLexer, "doaA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("doaA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47111()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0xAz");
            AphidLexerTests.Tokenize(aphidLexer, "0xAz");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0xAz", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44312()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("eaa\0");
            AphidLexerTests.Tokenize(aphidLexer, "eaa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("eaa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize96803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ca");
            AphidLexerTests.Tokenize(aphidLexer, "ca");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize37005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switcaa");
            AphidLexerTests.Tokenize(aphidLexer, "switcaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switcaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2811()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("us[");
            AphidLexerTests.Tokenize(aphidLexer, "us[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("us[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("this00");
            AphidLexerTests.Tokenize(aphidLexer, "this00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("this00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize34505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("uaA\0");
            AphidLexerTests.Tokenize(aphidLexer, "uaA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("uaA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("i{");
            AphidLexerTests.Tokenize(aphidLexer, "i{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("i{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize34903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fa");
            AphidLexerTests.Tokenize(aphidLexer, "fa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize30604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finaa\0");
            AphidLexerTests.Tokenize(aphidLexer, "finaa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("finaa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swita0a");
            AphidLexerTests.Tokenize(aphidLexer, "swita0a");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swita0a", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize93206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deleteaaA\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "deleteaaA\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("deleteaaA\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90411()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("naA\0");
            AphidLexerTests.Tokenize(aphidLexer, "naA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("naA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize72905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("us{");
            AphidLexerTests.Tokenize(aphidLexer, "us{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("us{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize33609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whila\0");
            AphidLexerTests.Tokenize(aphidLexer, "whila\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whila\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swita00");
            AphidLexerTests.Tokenize(aphidLexer, "swita00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swita00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21713()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fi");
            AphidLexerTests.Tokenize(aphidLexer, "fi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23010()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("do");
            AphidLexerTests.Tokenize(aphidLexer, "do");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("do", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90809()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("//\0\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "//\0\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("//\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize50105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("i");
            AphidLexerTests.Tokenize(aphidLexer, "i");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("i", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40712()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defaa");
            AphidLexerTests.Tokenize(aphidLexer, "defaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize95607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cA\0");
            AphidLexerTests.Tokenize(aphidLexer, "cA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize51905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("saa\0");
            AphidLexerTests.Tokenize(aphidLexer, "saa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("saa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0xAA");
            AphidLexerTests.Tokenize(aphidLexer, "0xAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0xAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("raa\0");
            AphidLexerTests.Tokenize(aphidLexer, "raa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("raa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nullaa");
            AphidLexerTests.Tokenize(aphidLexer, "nullaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nullaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defia\0");
            AphidLexerTests.Tokenize(aphidLexer, "defia\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defia\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("us");
            AphidLexerTests.Tokenize(aphidLexer, "us");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("us", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize47304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thr");
            AphidLexerTests.Tokenize(aphidLexer, "thr");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thr", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize87105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deA");
            AphidLexerTests.Tokenize(aphidLexer, "deA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("deA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize10306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("baA\0");
            AphidLexerTests.Tokenize(aphidLexer, "baA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("baA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize92005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defa\0");
            AphidLexerTests.Tokenize(aphidLexer, "defa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize53506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("forA\0");
            AphidLexerTests.Tokenize(aphidLexer, "forA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("forA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("trAA");
            AphidLexerTests.Tokenize(aphidLexer, "trAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("trAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize44512()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%>\0\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "%>\0\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("%>\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize18806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("foA\0");
            AphidLexerTests.Tokenize(aphidLexer, "foA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("foA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize42604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lockAA");
            AphidLexerTests.Tokenize(aphidLexer, "lockAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("lockAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73113()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whilA\0");
            AphidLexerTests.Tokenize(aphidLexer, "whilA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whilA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nulaa");
            AphidLexerTests.Tokenize(aphidLexer, "nulaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nulaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize20005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0b11");
            AphidLexerTests.Tokenize(aphidLexer, "0b11");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0b11", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize67105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("eA\0");
            AphidLexerTests.Tokenize(aphidLexer, "eA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("eA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize77901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("la0\0");
            AphidLexerTests.Tokenize(aphidLexer, "la0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("la0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize67803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throaa");
            AphidLexerTests.Tokenize(aphidLexer, "throaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize8103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finalAA");
            AphidLexerTests.Tokenize(aphidLexer, "finalAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("finalAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize72004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("els\0exte\0");
            AphidLexerTests.Tokenize(aphidLexer, "els\0exte\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("els\0exte\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize82506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defiA");
            AphidLexerTests.Tokenize(aphidLexer, "defiA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize97906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("reA\0");
            AphidLexerTests.Tokenize(aphidLexer, "reA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("reA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize30710()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defA");
            AphidLexerTests.Tokenize(aphidLexer, "defA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("daA\0");
            AphidLexerTests.Tokenize(aphidLexer, "daA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("daA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize37101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("faA\0");
            AphidLexerTests.Tokenize(aphidLexer, "faA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("faA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elA\0");
            AphidLexerTests.Tokenize(aphidLexer, "elA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("elA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finAA");
            AphidLexerTests.Tokenize(aphidLexer, "finAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("finAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize76007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("def");
            AphidLexerTests.Tokenize(aphidLexer, "def");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("def", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize3503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/*\0\0*/");
            AphidLexerTests.Tokenize(aphidLexer, "/*\0\0*/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("/*\0\0*/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize8206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switc_");
            AphidLexerTests.Tokenize(aphidLexer, "switc_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switc_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize52307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finaA");
            AphidLexerTests.Tokenize(aphidLexer, "finaA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("finaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize14413()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("coA\0");
            AphidLexerTests.Tokenize(aphidLexer, "coA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("coA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6312()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nullAA");
            AphidLexerTests.Tokenize(aphidLexer, "nullAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nullAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize51703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breaa0");
            AphidLexerTests.Tokenize(aphidLexer, "breaa0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("breaa0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11113()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elseAA");
            AphidLexerTests.Tokenize(aphidLexer, "elseAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("elseAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext{exteaee");
            AphidLexerTests.Tokenize(aphidLexer, "ext{exteaee");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ext{exteaee", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("forAA");
            AphidLexerTests.Tokenize(aphidLexer, "forAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("forAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91113()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("raA\0");
            AphidLexerTests.Tokenize(aphidLexer, "raA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("raA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize9812()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("truaa");
            AphidLexerTests.Tokenize(aphidLexer, "truaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("truaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("iAA");
            AphidLexerTests.Tokenize(aphidLexer, "iAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("iAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("foAA");
            AphidLexerTests.Tokenize(aphidLexer, "foAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("foAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w{");
            AphidLexerTests.Tokenize(aphidLexer, "w{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("w{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize38704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w");
            AphidLexerTests.Tokenize(aphidLexer, "w");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("w", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75722()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tryaaa");
            AphidLexerTests.Tokenize(aphidLexer, "tryaaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("tryaaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize55007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("uaAA");
            AphidLexerTests.Tokenize(aphidLexer, "uaAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("uaAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize51406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cAA");
            AphidLexerTests.Tokenize(aphidLexer, "cAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize17606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fiaa");
            AphidLexerTests.Tokenize(aphidLexer, "fiaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fiaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83110()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breaa0\0");
            AphidLexerTests.Tokenize(aphidLexer, "breaa0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("breaa0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nAA");
            AphidLexerTests.Tokenize(aphidLexer, "nAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize82806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("reAA");
            AphidLexerTests.Tokenize(aphidLexer, "reAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("reAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ifA\0");
            AphidLexerTests.Tokenize(aphidLexer, "ifA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ifA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize3906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conta[");
            AphidLexerTests.Tokenize(aphidLexer, "conta[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("conta[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize7401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swa0a");
            AphidLexerTests.Tokenize(aphidLexer, "swa0a");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swa0a", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize19810()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extenda_\0\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "extenda_\0\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("extenda_\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catca[");
            AphidLexerTests.Tokenize(aphidLexer, "catca[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catca[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize8606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catch0A");
            AphidLexerTests.Tokenize(aphidLexer, "catch0A");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catch0A", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize80811()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falseaa");
            AphidLexerTests.Tokenize(aphidLexer, "falseaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("falseaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize27205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throwa{");
            AphidLexerTests.Tokenize(aphidLexer, "throwa{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throwa{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sA\0");
            AphidLexerTests.Tokenize(aphidLexer, "sA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("sA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize11602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whileýa");
            AphidLexerTests.Tokenize(aphidLexer, "whileýa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whileýa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize20308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breakaA\0");
            AphidLexerTests.Tokenize(aphidLexer, "breakaA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("breakaA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize32208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("u0\0");
            AphidLexerTests.Tokenize(aphidLexer, "u0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("u0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exte[");
            AphidLexerTests.Tokenize(aphidLexer, "exte[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("exte[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12711()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swiaa");
            AphidLexerTests.Tokenize(aphidLexer, "swiaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swiaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize53306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("load00");
            AphidLexerTests.Tokenize(aphidLexer, "load00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("load00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize96116()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deAA");
            AphidLexerTests.Tokenize(aphidLexer, "deAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("deAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize23605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ina0\0");
            AphidLexerTests.Tokenize(aphidLexer, "ina0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ina0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize63806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continueA0A");
            AphidLexerTests.Tokenize(aphidLexer, "continueA0A");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continueA0A", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize72403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cba\0");
            AphidLexerTests.Tokenize(aphidLexer, "cba\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cba\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize46106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switchAA");
            AphidLexerTests.Tokenize(aphidLexer, "switchAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switchAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize57207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catch0[");
            AphidLexerTests.Tokenize(aphidLexer, "catch0[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catch0[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize90008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("inaAA");
            AphidLexerTests.Tokenize(aphidLexer, "inaAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("inaAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breaa<");
            AphidLexerTests.Tokenize(aphidLexer, "breaa<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("breaa<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize13602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exten00");
            AphidLexerTests.Tokenize(aphidLexer, "exten00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("exten00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("waAA");
            AphidLexerTests.Tokenize(aphidLexer, "waAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("waAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize60410()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elAA");
            AphidLexerTests.Tokenize(aphidLexer, "elAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("elAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize2704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usA\0");
            AphidLexerTests.Tokenize(aphidLexer, "usA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize54308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breakaA0\0\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "breakaA0\0\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("breakaA0\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize17802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catc");
            AphidLexerTests.Tokenize(aphidLexer, "catc");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize37404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("braaA");
            AphidLexerTests.Tokenize(aphidLexer, "braaA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("braaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize18705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throwaA\0");
            AphidLexerTests.Tokenize(aphidLexer, "throwaA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throwaA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize66705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("laAA");
            AphidLexerTests.Tokenize(aphidLexer, "laAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("laAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize49806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defa0\0");
            AphidLexerTests.Tokenize(aphidLexer, "defa0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defa0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize84801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("faAA");
            AphidLexerTests.Tokenize(aphidLexer, "faAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("faAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize30711()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defa00");
            AphidLexerTests.Tokenize(aphidLexer, "defa00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defa00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("newaAA");
            AphidLexerTests.Tokenize(aphidLexer, "newaAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("newaAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize85604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0x000");
            AphidLexerTests.Tokenize(aphidLexer, "0x000");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0x000", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize94605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whileAA");
            AphidLexerTests.Tokenize(aphidLexer, "whileAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whileAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize75506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throwa");
            AphidLexerTests.Tokenize(aphidLexer, "throwa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throwa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize876()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("neA\0");
            AphidLexerTests.Tokenize(aphidLexer, "neA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("neA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize7101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swit");
            AphidLexerTests.Tokenize(aphidLexer, "swit");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swit", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize37205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("retaAA");
            AphidLexerTests.Tokenize(aphidLexer, "retaAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("retaAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99613()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("iAA\0");
            AphidLexerTests.Tokenize(aphidLexer, "iAA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("iAA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whaaa");
            AphidLexerTests.Tokenize(aphidLexer, "whaaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whaaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize12907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nuaAa");
            AphidLexerTests.Tokenize(aphidLexer, "nuaAa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nuaAa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize32806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catchaa");
            AphidLexerTests.Tokenize(aphidLexer, "catchaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catchaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("coAA");
            AphidLexerTests.Tokenize(aphidLexer, "coAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("coAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize74306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catcha{");
            AphidLexerTests.Tokenize(aphidLexer, "catcha{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catcha{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize36705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delAA");
            AphidLexerTests.Tokenize(aphidLexer, "delAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("delAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83111()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E000");
            AphidLexerTests.Tokenize(aphidLexer, "0E000");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("0E000", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize18204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fal÷A");
            AphidLexerTests.Tokenize(aphidLexer, "fal÷A");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fal÷A", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falA\0");
            AphidLexerTests.Tokenize(aphidLexer, "falA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("falA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize56501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thia0");
            AphidLexerTests.Tokenize(aphidLexer, "thia0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thia0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize36809()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falsea_\0");
            AphidLexerTests.Tokenize(aphidLexer, "falsea_\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("falsea_\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize31705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("n0\0");
            AphidLexerTests.Tokenize(aphidLexer, "n0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("n0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize31601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catcaA\0");
            AphidLexerTests.Tokenize(aphidLexer, "catcaA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catcaA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize54407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("KûA");
            AphidLexerTests.Tokenize(aphidLexer, "KûA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("KûA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize87709()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falAA");
            AphidLexerTests.Tokenize(aphidLexer, "falAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("falAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize14205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thisAa");
            AphidLexerTests.Tokenize(aphidLexer, "thisAa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thisAa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize86209()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("neaaA");
            AphidLexerTests.Tokenize(aphidLexer, "neaaA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("neaaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize92105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("caaaa");
            AphidLexerTests.Tokenize(aphidLexer, "caaaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("caaaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize71906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catcaAA");
            AphidLexerTests.Tokenize(aphidLexer, "catcaAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catcaAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize54501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("contaAA");
            AphidLexerTests.Tokenize(aphidLexer, "contaAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("contaAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize79907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breakaA0a\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "breakaA0a\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("breakaA0a\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize81702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("doaAA");
            AphidLexerTests.Tokenize(aphidLexer, "doaAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("doaAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usaaA");
            AphidLexerTests.Tokenize(aphidLexer, "usaaA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usaaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize76305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swA\0");
            AphidLexerTests.Tokenize(aphidLexer, "swA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("swA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize77102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ifAA");
            AphidLexerTests.Tokenize(aphidLexer, "ifAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ifAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize17107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loAaAa");
            AphidLexerTests.Tokenize(aphidLexer, "loAaAa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loAaAa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize29007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throwa0\0");
            AphidLexerTests.Tokenize(aphidLexer, "throwa0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throwa0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize6907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elsĿ\0ext\0ext\0");
            AphidLexerTests.Tokenize(aphidLexer, "elsĿ\0ext\0ext\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("elsĿ\0ext\0ext\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize1103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("i0\0");
            AphidLexerTests.Tokenize(aphidLexer, "i0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("i0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize61311()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wa0\0");
            AphidLexerTests.Tokenize(aphidLexer, "wa0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("wa0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize59515()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breakaA0{");
            AphidLexerTests.Tokenize(aphidLexer, "breakaA0{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("breakaA0{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize70205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bAA");
            AphidLexerTests.Tokenize(aphidLexer, "bAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("bAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize28306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whileA[");
            AphidLexerTests.Tokenize(aphidLexer, "whileA[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whileA[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize51110()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catcha");
            AphidLexerTests.Tokenize(aphidLexer, "catcha");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catcha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43809()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falsA\0");
            AphidLexerTests.Tokenize(aphidLexer, "falsA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("falsA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize69304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fA\0");
            AphidLexerTests.Tokenize(aphidLexer, "fA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize45608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("reaa0");
            AphidLexerTests.Tokenize(aphidLexer, "reaa0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("reaa0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize22901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("break÷aA0");
            AphidLexerTests.Tokenize(aphidLexer, "break÷aA0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("break÷aA0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize72603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thia0\0");
            AphidLexerTests.Tokenize(aphidLexer, "thia0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thia0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize17607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defbA\0");
            AphidLexerTests.Tokenize(aphidLexer, "defbA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defbA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize88711()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usin0");
            AphidLexerTests.Tokenize(aphidLexer, "usin0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usin0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize85409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throa{");
            AphidLexerTests.Tokenize(aphidLexer, "throa{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throa{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize91416()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throa");
            AphidLexerTests.Tokenize(aphidLexer, "throa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("throa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize3100()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nulla\0");
            AphidLexerTests.Tokenize(aphidLexer, "nulla\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("nulla\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize25313()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usin__");
            AphidLexerTests.Tokenize(aphidLexer, "usin__");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usin__", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catch0AA");
            AphidLexerTests.Tokenize(aphidLexer, "catch0AA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("catch0AA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize4009()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usAA");
            AphidLexerTests.Tokenize(aphidLexer, "usAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize64306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("doa00");
            AphidLexerTests.Tokenize(aphidLexer, "doa00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("doa00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize99710()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("daAA");
            AphidLexerTests.Tokenize(aphidLexer, "daAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("daAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize15311()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defbAA");
            AphidLexerTests.Tokenize(aphidLexer, "defbAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("defbAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize67704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("t_AA");
            AphidLexerTests.Tokenize(aphidLexer, "t_AA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("t_AA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize32905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("eAA");
            AphidLexerTests.Tokenize(aphidLexer, "eAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("eAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize83012()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loa÷A");
            AphidLexerTests.Tokenize(aphidLexer, "loa÷A");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loa÷A", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize68613()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loaA\0");
            AphidLexerTests.Tokenize(aphidLexer, "loaA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("loaA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize22304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usi÷A");
            AphidLexerTests.Tokenize(aphidLexer, "usi÷A");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("usi÷A", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize5506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continua00");
            AphidLexerTests.Tokenize(aphidLexer, "continua00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continua00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize16404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exteA\0");
            AphidLexerTests.Tokenize(aphidLexer, "exteA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("exteA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize84506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whil0\0");
            AphidLexerTests.Tokenize(aphidLexer, "whil0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("whil0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize62812()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continu0AA\0");
            AphidLexerTests.Tokenize(aphidLexer, "continu0AA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("continu0AA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize30712()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("brA\0");
            AphidLexerTests.Tokenize(aphidLexer, "brA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("brA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize93207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switcaaAA\0\0");
            AphidLexerTests.Tokenize(aphidLexer, "switcaaAA\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switcaaAA\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize88004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falsa0");
            AphidLexerTests.Tokenize(aphidLexer, "falsa0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("falsa0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize48603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("s0\0");
            AphidLexerTests.Tokenize(aphidLexer, "s0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("s0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize28808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fi0A");
            AphidLexerTests.Tokenize(aphidLexer, "fi0A");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("fi0A", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize43810()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switch\01.~1.");
            AphidLexerTests.Tokenize(aphidLexer, "switch\01.~1.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("switch\01.~1.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize73705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b0\0");
            AphidLexerTests.Tokenize(aphidLexer, "b0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("b0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize37809()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("caA\0");
            AphidLexerTests.Tokenize(aphidLexer, "caA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("caA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize40603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat0a\0");
            AphidLexerTests.Tokenize(aphidLexer, "cat0a\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("cat0a\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize78503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("locAA");
            AphidLexerTests.Tokenize(aphidLexer, "locAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("locAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize21308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thisaa");
            AphidLexerTests.Tokenize(aphidLexer, "thisaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("thisaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void Tokenize34805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ina000");
            AphidLexerTests.Tokenize(aphidLexer, "ina000");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("ina000", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument22203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.TokenizeDocument(aphidLexer, "");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument81608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument55806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument80204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument7103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument51004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument34507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument22806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument60406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\f");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\f");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\f", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument29905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument80405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36714()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%Y");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%Y");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%Y", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument8106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument96303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument94604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\0<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "\0<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\0<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument10905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\f\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\f\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\f\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument64004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument66806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%@\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%@\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%@\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument1804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%1");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%1");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%1", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument2704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%@>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%@>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%@>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument27206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument59906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument34602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument31606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%￿");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%￿");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%￿", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument86104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%``");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%``");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%``", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument12802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%h");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%h");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%h", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument78902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<% ");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<% ");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<% ", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument32302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument58307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument80506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument80107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument11004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%a");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%a");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%a", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument31403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument98302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument59406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26511()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%$\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument5507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%$_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument40406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%$!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%b");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%b");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%b", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument77504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument55608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument85304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument87603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument56504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument10807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument60204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument2502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument58902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument739()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument49103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument77505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument83904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%::");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%::");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%::", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument84702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument68505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument23102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument67002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument82904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument37003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument92505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument60306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument15205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument53504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%i");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%i");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%i", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument19904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%if");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%if");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%if", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%in");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%in");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%in", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54610()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument82806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument73204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument38405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%j");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%j");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%j", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument14605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument77904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument56204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument87102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument59310()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument52004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument90707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument92904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument92202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument11504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument78105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument34003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument83304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument31704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument18205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument79602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument39606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument44904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument7503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument76409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument21603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument27104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument77108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument2106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument10004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument94505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument6003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument68206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62209()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument20302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26512()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument39005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument55704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument8107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%p");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%p");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%p", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument56404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument12105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument52105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument77402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument61603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument29404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument66402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument99602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%</");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%</");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%</", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument6807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument94902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument5606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument67103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument29502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument88304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument18802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument86105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument68402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument42307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument20804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument94707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument53404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument79404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument14804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument40202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument91704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument3005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument76605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<<=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<<=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<<=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument90604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument65806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument91010()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument51305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument44305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument99705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument76103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument22602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument31202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument94605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument52404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument55105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument11505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument33508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument96203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument76904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument94405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument27105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument32502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument73306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%x");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%x");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%x", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument49002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument29906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%r");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%r");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%r", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument46102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument14704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument28004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument85004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument43907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument46002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument30604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument66304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36715()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument64905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument67405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument43804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument53703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument13002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument76304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument10005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument39403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>>=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>>=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>>=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument34508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument56802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument31004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument91011()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%><");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%><");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%><", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument43805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57310()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument88805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument58405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument45106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument86606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument85905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument28907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument7305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument85108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument85109()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument68007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%q");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%q");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%q", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument93602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%z");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%z");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%z", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument68803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57611()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument89902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument98006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument83305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument56006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument90708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument14805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument75905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument42308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument99804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument50304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%??");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%??");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%??", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument7602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument35804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument37605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument68008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument51408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument40407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument35805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument45004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument55609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument37606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument60806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument55106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument56205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument75906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument2705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%##");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%##");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%##", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument87502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument83504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument60003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument19102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument90302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument31803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument88104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument67909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument33207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument37406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument46603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument46208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument98404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument14402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument60704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument25103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%y");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%y");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%y", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument83905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%c");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%c");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%c", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument59103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument45904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument52806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument86607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument56908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument21806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument35308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument53204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument45604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%>&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%>&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%>&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument29405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%d");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%d");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%d", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument22305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%do");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%do");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%do", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%:&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%:&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%:&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument10707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%!&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%!&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%!&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument18103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62210()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%<&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%<&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%<&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument50202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57612()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%?&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%?&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%?&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument21506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%`&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%`&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%`&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%f");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%f");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%f", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument60807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument17002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%e", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument91012()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%#_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%#_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%#_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument85305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%t");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%t");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%t", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument69905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%u");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%u");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%u", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument99306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\n");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\n");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\n", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\t");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\t");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\t", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument22404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%v");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%v");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%v", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument9707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%s");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%s");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%s", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument614()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\v");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\v");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\v", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument91306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument32102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%g");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%g");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%g", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument96002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\r");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\r");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\r", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument31307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%w", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument40604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument8403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument84503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument15206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57311()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument65504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument77905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument59702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument67910()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument43607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument43608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument10808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument43908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument69906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument80904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument8703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument73702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument91604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument53302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument99805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument81705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%\\&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%\\&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%\\&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument96607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument51704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%l");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%l");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%l", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument40307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument8304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%&_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%&_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%&_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument79702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57312()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument47702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%||");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%||");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%||", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument2303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument90902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument81904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument68207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument40308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument27402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument22504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument4702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument1805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument7902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument24604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument1203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument75804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument19502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument79304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument93709()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument39806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%|&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%|&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%|&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument27207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument33509()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument59202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument86608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%k");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%k");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%k", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument20906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument32002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument3304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument88105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument3704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument45302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument76410()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument91503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument66807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument73307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument9202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument13204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument50803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument79305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument86702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument78106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36716()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument24802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument85110()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument59311()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument43407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument35902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument32403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument6304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument81706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument3705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument77004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%^&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%^&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%^&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument51409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument91402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument51005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument83102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%n");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%n");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%n", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument21108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%%_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%%_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%%_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument19604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument86402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument56302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument1303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument61805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument81609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument20805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument50403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument93804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument51208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument47105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument10402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument77606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument81905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument30605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument12904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument35205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument55203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument43708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument25802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument64005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument82905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument3006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%~&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%~&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%~&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41610()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57613()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument6603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument52106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument27904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument65505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57614()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument17608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument96608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument5204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument19005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument6305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument48604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument46302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument17609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%**");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%**");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%**", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument22405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument45005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument27905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument42702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument83806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument68103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument59604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%*&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%*&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%*&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument87204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%m");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%m");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%m", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument99504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%}");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%}");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%}", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument25002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0x");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0x");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0x", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument39807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0b");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0b");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0b", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%o");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%o");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%o", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument75205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument64803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument37407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument55505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument28102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument19303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%./");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%./");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%./", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41611()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%..");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%..");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%..", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument44905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument13205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument20907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument91013()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument47205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument24504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument3605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument18903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument76905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument52502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument49603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument31308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument18302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument25903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument85203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument76804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%.&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%.&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%.&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument44804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument86204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument35104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument52005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument49203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument10809()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument21402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument66702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument95202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument39202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument38906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument10708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument59407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%++");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%++");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%++", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument81610()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument21202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36717()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument42902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument44306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument39102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument98505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument88005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%+&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%+&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%+&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument44506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument17610()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument35503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument45905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument40102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument82402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument5303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument46506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument27604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26310()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument69205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument92905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%--");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%--");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%--", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument64704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%->");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%->");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%->", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument91105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument89405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument78009()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument81806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument1904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument59802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument69404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument91307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument39006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument65602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument48605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument44102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%-&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%-&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%-&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument73805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument65903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument05()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument10604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument59907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument60102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%//");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%//");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%//", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument34509()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument69108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument98207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument80108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument35309()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26709()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument33510()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument84305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument42002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument42309()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument234()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument42602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57615()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument53003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument433()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument76606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%/&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%/&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%/&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument30705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument89406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%w[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument46507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%s[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%s[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%s[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%el[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%el[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%el[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tr[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tr[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%tr[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument131()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%sw[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%sw[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%sw[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument2006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fi[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument37504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%b[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%b[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%b[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument79208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%u[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%u[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%u[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument20505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument23906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%lo[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%lo[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%lo[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument45406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%br[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%br[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%br[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument35703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fa[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fa[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fa[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument21302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%th[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nu[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nu[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%nu[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%d[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%d[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%d[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wh[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wh[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%wh[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument11303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%f[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%f[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%f[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument23204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tr[\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tr[\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%tr[\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97709()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%us[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%us[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%us[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument93710()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%co[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%co[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%co[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument80905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%t[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%t[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%t[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument95802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%swit", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument24310()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%swit\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument31005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument73308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switc\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument82004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument51209()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%swit[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument4005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swita");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swita");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%swita", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument69109()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%swit0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26311()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%swit{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%swit", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument22807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switc0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54611()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switca");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switca");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument13602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switc<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switcA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switcA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switcA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41009()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switc[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument80507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switc{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument61806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument18704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switc_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument25204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%swit_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument7806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%co");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%co");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%co", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument1602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument22104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument81205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%using", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument56007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usina");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument78010()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usin{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument78402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument52703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usinA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usinA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usinA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument34302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usin0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument65204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usin_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument7702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%w", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument98208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ex");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ex");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ex", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument51904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%c");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%c");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%c", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument61704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$arg");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$arg");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%$arg", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument21109()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$arg\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$arg\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%$arg\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument96906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$arg0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$arg0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%$arg0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument93006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$args");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$args");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%$args", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$arg{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$arg{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%$arg{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument21807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$argA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$argA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%$argA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument84102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$arg");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$arg");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%$arg", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument68704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$arg_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$arg_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%$arg_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument91308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26312()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument6504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defia");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defia");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument22004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57709()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defi{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument40706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument50607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%define", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41612()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%definA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument91705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defin0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument68506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%define\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defina");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument81303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%definea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument47002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defi0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument7807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defined", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%define0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument77109()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%define<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument8108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument56909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defin[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument45107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defineA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defineA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defineA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument58706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%define{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument33208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defin{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument73003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%define", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument2107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defiA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defiA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument82005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%define_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument23907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defi_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57710()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exte", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument87303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exte\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument17611()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exten", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument29004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exten\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument83705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extend", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument46704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exte0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26513()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extena");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extena");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extena", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument22306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument6702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exte{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument69004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exten{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument6902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exten", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument37408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exte", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument29005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exteA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exteA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exteA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exten0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument58104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extenA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extenA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extenA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument59312()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exten_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument34802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exte_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument93007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument31309()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument2902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument77110()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E-\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E-\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E-\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument37203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E-0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E-0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E-0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26710()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E-0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E-0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E-0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument56705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E-00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E-00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E-00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument17103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%u");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%u");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%u", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument33404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wh");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wh");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%wh", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument20908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72509()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defin_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument58707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%br");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%br");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%br", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument69110()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%e", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument94506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument56603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catc\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument18407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catca");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catca");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument435()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catc{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument93008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catcA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catcA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catcA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument32803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catc0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument48404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument8203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catc_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument40707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%brea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%brea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument56505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%breaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument84306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%brea{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument28703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%brea0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument133()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%break", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument22808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%brea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument4202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%breaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument98007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%brea_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument82704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument92702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%sw");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%sw");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%sw", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument88305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%r");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%r");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%r", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument842()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument238()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fina\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument21110()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument31705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%final", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument44704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fina0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument69603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%final\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument52907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finaA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finaA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument89302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fina{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument80804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument30202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%final0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument76305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finala");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finala");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finala", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument22005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finall", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument28908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%final{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%final", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument95103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finall\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument96609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finall0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument84902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finallA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finally", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument67406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finall<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument86003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finall[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument88006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finalA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finalA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finalA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument21507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finalla");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finalla");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finalla", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument73504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finall{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument38205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finall", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument44805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fina_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument3305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%final_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument47505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finall_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument30104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%cont", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%cont\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument58708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%cont0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument87904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%cont<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument9708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%conti", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument91014()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conta");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conta");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%conta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument18502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%conti\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument51410()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument31903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%conti0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument9403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contia");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contia");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument14502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%conti<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument30706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%cont{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument51803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument94708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%cont", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument58308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%conti{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument77607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument80805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contina");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument56910()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument43002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contin0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument51210()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contin<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument35402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contin[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument44002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contin{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument42504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument95602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument34704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contiA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contiA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument88706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continu\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument43408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continue");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continue");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continue", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument1703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%conti", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continuA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continuA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continuA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument93107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continu[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continua");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continua");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument88707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continu{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument55807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument64602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continu0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument65703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%conti_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument51411()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%cont_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument10202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contin_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument48104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%th", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument90002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%f");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%f");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%f", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument69206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continu_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument98603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument24202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%re");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%re");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%re", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument78302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%dele", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument21808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%dele\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument45407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delet", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62211()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%dele{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument90106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%dele", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument40004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%dele0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument83505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delet\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument6403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleta");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleta");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%deleta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument46508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delet{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41010()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%deleA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument5205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deletA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deletA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%deletA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument93108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delete");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delete");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delete", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument5905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delet0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument56706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delet", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26313()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%dele_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument19802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delet_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument61206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ca");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ca");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument96907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument73106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defa0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument22903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defa<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument68208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defau", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument83807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defau\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument93711()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaua");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaua");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument81807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defau{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaul", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument73107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defau0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument92506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defa{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument844()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defauA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defauA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defauA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument25304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument10303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaul\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument65205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaulA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaulA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaulA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument60808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaula");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaula");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaula", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument28909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaul0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaul[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument75102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%default", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument10906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defau", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaul{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaul", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument52602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defa_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument82302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defau_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument60307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fals", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument43409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fals\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument45408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%false", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%falsa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fals{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument14606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%falsA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument17703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fals0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument1905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fals", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument61304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fals_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument30302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaul_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%el");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%el");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%el", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument55902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whil", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument81206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whil\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument90203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whil0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument77111()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whil<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument13404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%while", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument61207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whilA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whilA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whilA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument67911()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whila");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whila");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whila", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument2108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whil{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument22505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whil", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument39607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whil_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument82807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%us");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%us");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%us", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument34904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument47304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument85906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument76202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%thro", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument19706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%thro\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument38206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument59313()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument47106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throw", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument50105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%thro0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%thro[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument77203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%thro{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument50903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%thro", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument81808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%thro_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument515()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ne");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ne");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ne", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01.\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01.\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01.\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument73806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01.0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01.0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01.0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument24404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01.:\0\0\0\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01.:\0\0\0\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01.:\0\0\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97710()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%lo");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%lo");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%lo", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument52807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nu");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nu");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%nu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument90402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%s");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%s");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%s", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument3802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tr");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tr");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%tr", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72910()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fo");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fo");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fo", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument27208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0\"\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0\"\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0\"\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0\"\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0\"\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0\"\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument86903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ne\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ne\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ne\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument5906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wh\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wh\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%wh\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument44507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nu\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nu\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%nu\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument46705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exten\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument30005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%dele\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument30502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\010");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\010");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\010", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument46209()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%re\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%re\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%re\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument8305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%swit\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument55705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finall\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument135()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument33405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument93805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=:");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=:");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument38907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=!");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=!");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument37505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument87205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=`");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=`");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument24505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=|");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=|");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument78011()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=~");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=~");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument64906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=/");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=/");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument27304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument91106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=?");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=?");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument13902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=]");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=]");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument75805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=(");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=(");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument65807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument12505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=>");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=>");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument11005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=#");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=#");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument35310()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=^");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=^");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62212()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=,");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=,");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36718()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument20205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=+");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=+");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument55610()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=)");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=)");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument51705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument60407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0==");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0==");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0==", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument28005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=*");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=*");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument99706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument30006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\\");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\\");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument50608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=;");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=;");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument20103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument33603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=%");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=%");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument2007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=&");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=&");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument15903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument18206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fina\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument7306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0\"\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0\"\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0\"\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument19707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0\"\\\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0\"\\\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0\"\\\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument12905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%th\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument40605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ex\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ex\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ex\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument66808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%cont\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%br\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%br\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%br\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%define\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01e", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument27605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01e\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57313()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e-");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e-");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01e-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument31607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01e0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument20506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e-\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e-\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01e-\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument31103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e-0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e-0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01e-0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument14002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e-0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e-0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01e-0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument19708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01e-00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01e-00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01e-00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument44705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01E");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01E");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01E", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument33003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tr\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tr\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%tr\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%final\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument45502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delet\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%us\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%us\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%us\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument5508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%sw\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%sw\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%sw\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument27803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whil\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument35206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%try[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%try[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%try[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument64705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ca\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ca\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ca\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26514()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument79104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fals\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72610()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defau\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%lo\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%lo\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%lo\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument30105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%thro\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument47602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continu\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument90709()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument99102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fo\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fo\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fo\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument80205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument44402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\'\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\'\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=\'\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument58309()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\'\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\'\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=\'\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument4302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%el\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%el\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%el\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument67912()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaul\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument2802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument23303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switc\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument24311()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catc\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument51211()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%co\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%co\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%co\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument21508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%brea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97711()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E-00\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E-00\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E-00\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument15403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%conti\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument73108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument80406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exte\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument43709()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument82202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%try");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%try");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%try", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument33209()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\'\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\'\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=\'\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument46210()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=\'\\\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=\'\\\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=\'\\\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument99003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%nea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument28604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ne{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ne{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ne{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument47305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defia");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defia");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument98702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exte0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument9503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%try\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%try\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%try\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument87802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%faA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%faA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%faA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument48002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%brea0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument82603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%e\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument32203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%loa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%loa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%loa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument94709()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument85111()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%sw0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%sw0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%sw0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72510()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%false\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument56008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falseA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falseA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%falseA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument79209()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%false[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument58406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%false0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%falsea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%false{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument9709()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%false", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument69302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%false_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument19204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%coa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%coa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%coa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaua");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaua");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument95503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%u\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%u\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%u\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97712()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%f\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%f\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%f\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument45202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument76411()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%b");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%b");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%b", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument61903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%bra");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%bra");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%bra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument59908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\010\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\010\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\010\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument78602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%break\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%break0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument39808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breakA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breakA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%breakA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument93109()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%break[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument24405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaka");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaka");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%breaka", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument91605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%break{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument55611()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%break", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument33704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%break_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument15503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%break\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument24312()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wha");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wha");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%wha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument12203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extena");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extena");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extena", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument40005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whila");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whila");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whila", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument76003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tha");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tha");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%tha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument88708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finala");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finala");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finala", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%i");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%i");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%i", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument68903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%n");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%n");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%n", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument25305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%d");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%d");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%d", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument99307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swita");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swita");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%swita", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument43710()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%t");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%t");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%t", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument20206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument47206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%thA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finally\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument19605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallyA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallyA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finallyA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument38908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finally[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument3606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallya");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallya");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finallya", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument39608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finally{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument60903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finally0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument89004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finally", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument55808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finally_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument52908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%falsa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument99402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%swa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument96402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tra");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tra");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%tra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument38802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%caa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%caa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%caa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finally\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument12106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%l");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%l");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%l", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument48302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nua");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nua");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%nua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument846()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%trya");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%trya");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%trya", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument81102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%false\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument45703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finalla");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finalla");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finalla", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument94406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ca");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ca");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument23205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defineA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defineA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defineA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72511()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defi{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument46402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%dele0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26314()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%using\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument43609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%using0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument12506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usinga");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usinga");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usinga", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument446()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%using{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument24313()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%using", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usingA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usingA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usingA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument11902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%using\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument61208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%using_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usinga");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usinga");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usinga", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36209()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usingA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usingA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usingA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument69005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ca{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ca{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ca{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument58803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%dele<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument45802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contina");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument15702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallya");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallya");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finallya", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument39305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tr0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tr0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%tr0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument11403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catcA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catcA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catcA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument75206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%falsA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument25603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%faa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%faa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%faa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument73602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaula");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaula");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaula", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument43909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaka");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaka");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%breaka", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument25502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=_\0\0￿\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=_\0\0￿\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=_\0\0￿\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument80109()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extend\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument33705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extendA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extendA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extendA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument6808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extend[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extend0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extenda");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extenda");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extenda", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extend{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument98209()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extend", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument66102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extend\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument68705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extend_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extendA\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extendA\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extendA\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument37304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whil{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument94104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%br0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%br0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%br0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument5607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extenA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extenA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extenA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument58602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finall0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument49702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0!\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0!\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0!\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument40309()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0!$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0!$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0!$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0!\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0!\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0!\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument68009()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defina");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument80508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switc0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument18408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%do");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%do");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%do", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument90107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36009()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%swit0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument94303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ne");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ne");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ne", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%try{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%try{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%try{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument89502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defauA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defauA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defauA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%￿0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%￿0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%￿0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument47902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%brea<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument25205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument53505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%final0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument77005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaula\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaula\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaula\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument06()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delea\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument58105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usina");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument29203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%lA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%lA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%lA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument18705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whil", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument9802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%co0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%co0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%co0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%for[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%for[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%for[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument93502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%for");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%for");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%for", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%for\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%for\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%for\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument88806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ca");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ca");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument33511()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%coa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%coa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%coa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument37103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument43711()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument83706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%na");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%na");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%na", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument48405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%definea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument31608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument60408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switc0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument79210()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finally0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument142()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contina\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contina\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contina\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument94105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conta");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conta");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%conta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ta");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ta");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument56911()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%breaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument61705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleta");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleta");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%deleta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument76412()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%try");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%try");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%try", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument12602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%dea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument42802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catca");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catca");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument67502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fia");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fia");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ela");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ela");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ela", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument38102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%w\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument241()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%r0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%r0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%r0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument56405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define÷[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define÷[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%define÷[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%coA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%coA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%coA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%rea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%rea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%rea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument66305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument13803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%foa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%foa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%foa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument50609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%doa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%doa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%doa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument10709()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fina0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument73505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fora");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fora");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fora", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36719()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catch\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument80002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catchA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catchA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catchA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument95403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catch0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument98008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catch[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument37305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catcha");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catcha");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catcha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument19006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catch{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument34402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument77608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catch_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument78012()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catch\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument4102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catch0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument83402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%s\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%s\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%s\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument88903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continua");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continua");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument90605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%using[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument49604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fa{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fa{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fa{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument53004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ba");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ba");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ba", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument9001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contia");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contia");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument34201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defina\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defina\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defina\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument92001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%cA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument59104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%falsea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument22105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%iA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%iA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%iA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument31804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%deA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument65301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usinA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usinA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usinA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument89202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument23701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delete\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delete\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delete\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument76607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delete0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delete0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delete0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument75402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delete<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delete<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delete<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deletea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deletea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%deletea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument87905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delete{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delete{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delete{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument47802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleteA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleteA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%deleteA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument22904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delete");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delete");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delete", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument23304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delete\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delete\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delete\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument87702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delete_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delete_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delete_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument15404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deletea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deletea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%deletea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument18207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usin{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument43102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defin0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument98210()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%foA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%foA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%foA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26711()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%brea{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument67601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switc<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%da");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%da");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%da", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument24001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finalA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finalA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finalA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument73205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fina{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument8704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delet0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument95302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0&@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0&@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0&@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument64502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contiA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contiA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument59605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%new");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%new");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%new", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41011()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%new\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%new\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%new\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument59606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%re0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%re0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%re0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument94407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deletea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deletea\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%deletea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument76413()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%forA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%forA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%forA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument61604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%el0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%el0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%el0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument89701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%newa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%newa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%newa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument87604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%false{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument47207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%us0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%us0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%us0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument58310()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thý[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thý[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%thý[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument30901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%th_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument46901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catc{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument65401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exteA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exteA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exteA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument75703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%doa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%doa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%doa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument40708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finall{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument6809()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%neA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%neA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%neA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36720()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%thro0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument48105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throw\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument27305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throwa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throwa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throwa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument44508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throw{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument11201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throwA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throwA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throwA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument11701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throw", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument6404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throw0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument5509()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throw\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument12107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throw_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument9404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throw0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument37607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throw0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defia\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defia\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defia\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument3102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument34905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nea\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%nea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument42505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument18904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%us<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%us<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%us<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument53902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exte[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument1704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ret");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ret");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ret", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ret\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ret\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ret\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72911()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%reta");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%reta");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%reta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument87703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaul{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument46604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%n\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%n\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%n\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument81707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swita\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swita\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%swita\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument85804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nua\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nua\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%nua\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72912()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%using{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument48106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delete{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delete{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delete{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument84307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usin");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument28802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%false");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%false");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%false", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%w0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catcha");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catcha");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catcha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument912()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%loa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%loa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%loa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument64907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%doaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%doaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%doaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument93712()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catc");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catc");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument86904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%swa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument29907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument50701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ra");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ra");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument14705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument90502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%bra\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%bra\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%bra\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument93301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throwa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throwa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throwa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument55402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finall");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finall");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finall", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument90108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%￠<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%￠<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%￠<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument47506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument47803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaua\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaua\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaua\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument81207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%sa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%sa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%sa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument44307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tra\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tra\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%tra\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%rea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%rea\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%rea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument21111()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%definA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument49104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switcA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switcA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switcA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument88807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%co{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%co{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%co{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument45605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catchA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catchA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catchA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catch<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument51804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defined\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument96204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defineda");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defineda");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defineda", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument5510()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defined0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument88007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defined<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument73401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defined{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument96610()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defined", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument15904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definedA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definedA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%definedA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument99707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defined\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument5608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defined_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument95504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defineda");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defineda");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defineda", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument73004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defineda\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defineda\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defineda\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument37901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fina");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument8801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument22106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wha\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wha\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%wha\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument65904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%newA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%newA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%newA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument35704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ela\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ela\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ela\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument10605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extea\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument87906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%i0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%i0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%i0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument3502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%c0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%c0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%c0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument59314()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fia\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fia\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fia\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument77703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%brea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleta\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleta\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%deleta\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument50904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%foa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%foa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%foa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%l0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%l0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%l0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument88601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tr{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tr{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%tr{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument88904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fo{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fo{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fo{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument98506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contia\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contia\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contia\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument83707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extena\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extena\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extena\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finala\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finala\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finala\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument17202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%bA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%bA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%bA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26515()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%break0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument85601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%falsa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument95104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument30401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catcha\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catcha\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catcha\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument93713()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ex0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ex0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ex0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument60705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%for0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%for0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%for0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument25904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tr");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tr");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%tr", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%newa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%newa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%newa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument99505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0!@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0!@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0!@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wh{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wh{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%wh{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument7808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%while\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument66902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whilea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whilea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whilea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument38301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whileA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whileA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whileA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%while[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument45606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%while{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument5701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%while0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%while", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%while_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%while\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument68301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whilea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whilea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whilea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument85401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fi0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument69207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delete");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delete");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delete", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument50106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%faa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%faa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%faa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%co");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%co");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%co", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definedA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definedA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%definedA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument77301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finaa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finaa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finaa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument30707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%reta\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%reta\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%reta\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallya\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallya\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finallya\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument58407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%cont0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument6101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%br<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%br<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%br<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument24701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%try0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%try0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%try0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument77204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ret{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ret{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ret{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument81611()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin÷[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin÷[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contin÷[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument19007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switch\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switch0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument29701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switchA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switchA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switchA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument23908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switch[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument32404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switcha");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switcha");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switcha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument58501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switch{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument5609()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument85204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switch_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switch\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument53704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switchA\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switchA\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switchA\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26516()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switch0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument23603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ua");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ua");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument50305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%loA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%loA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%loA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument2201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%caa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%caa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%caa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument28704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%using");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%using");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%using", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument75403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catca\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catca\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catca\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument53405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%sw{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%sw{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%sw{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument32602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whilea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whilea\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whilea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%breaa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument66502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaka\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaka\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%breaka\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument90503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switca");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switca");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument92102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%re{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%re{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%re{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument39306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<\0<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<\0<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<\0<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36210()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fals0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument58001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument4801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0&\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0&\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0&\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0&$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0&$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0&$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0&\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0&\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0&\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument43610()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%if");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%if");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%if", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument10503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%if0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%if0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%if0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument33901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%if0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%if0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%if0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument55506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fo");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fo");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fo", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument82808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finalla\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finalla\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finalla\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument17302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%re");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%re");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%re", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument18409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%swit{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument38406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%t}");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%t}");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%t}", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument30007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wh");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wh");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%wh", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument6505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tryA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tryA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%tryA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument60308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nu0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nu0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%nu0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument12204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usina\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usina\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usina\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument96908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaul", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument47507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exten0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whila\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whila\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whila\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument88502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%dA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument33604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%deleA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument3007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%thro{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument93714()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%in");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%in");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%in", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument7307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ina");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54612()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ina\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ina\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ina\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument79105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%inaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%inaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%inaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument39307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%swit", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument39007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%la");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%la");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%la", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument24605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usinga\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usinga\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usinga\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument81401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wï<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wï<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%wï<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument68804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%while0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ret");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ret");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ret", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%sw");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%sw");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%sw", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument79405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breakA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breakA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%breakA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument9710()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%definA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument95303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\08E-00\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\08E-00\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\08E-00\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument3103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defined0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument6506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%break[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument50107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ifA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ifA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ifA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument35311()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%final<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument75907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%lo0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%lo0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%lo0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument53205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallyA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallyA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finallyA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument848()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%default\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument12301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaulta");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaulta");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaulta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument94801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%default{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%default0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument33102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%default", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument51306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaultA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaultA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaultA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument60205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%default\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument95404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%default_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument13405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaulta");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaulta");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaulta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument19304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%default0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument66503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default<\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default<\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%default<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument83808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaulta\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaulta\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaulta\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument85907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continua\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continua\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continua\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument75004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thro");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thro");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%thro", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument4901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsea\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%falsea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument35105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%deleA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument1304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%lo@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%lo@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%lo@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument23604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ex[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ex[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ex[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument14706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continue\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continue\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continue\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument21701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continue0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continue0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continue0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument82604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continuea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continuea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continuea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument64201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continueA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continueA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continueA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument3607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continue{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continue{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continue{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument12507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continue");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continue");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continue", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument86205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continue\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continue\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continue\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument98405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continue_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continue_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continue_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument85005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continuea");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continuea");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continuea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument32204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continueA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continueA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continueA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument8404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continuea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continuea\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continuea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument90109()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continue{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continue{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continue{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument76805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%do");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%do");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%do", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument50404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definedA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definedA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%definedA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument17104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%conti[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument30801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whileaA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whileaA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whileaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument9103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%loý[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%loý[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%loý[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument98406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E-000");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E-000");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E-000", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wha0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wha0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%wha0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument10907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%default0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%us{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%us{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%us{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fi<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument39308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%brA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%lo{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%lo{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%lo{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument69111()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ex{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ex{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ex{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument73807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nu<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nu<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%nu<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument12402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%for[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%for[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%for[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument31904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%inaA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%inaA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%inaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument65102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%trA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%trA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%trA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72611()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extenda");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extenda");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extenda", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument91901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument28605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%cont[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument59315()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deý[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deý[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%deý[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36910()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continu{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument40408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exten<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defin<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument1204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ne0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ne0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ne0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument20402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined<\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined<\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defined<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument3202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument40310()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%while<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71209()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catch[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument98604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fa0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fa0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fa0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument33210()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%thA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%define{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument78107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%new0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%new0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%new0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument24901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fo0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fo0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fo0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument15504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%dele{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument17203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ex");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ex");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ex", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument79211()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extend[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument31404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%conti{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument15001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defineaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defineaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defineaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument78013()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ca0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ca0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ca0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument76806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument92301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throw<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument65808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continu");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continu");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument20207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dele");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dele");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%dele", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument75601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defa{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument59408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fals<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72612()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin`\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin`\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contin`\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument23909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin`$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin`$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contin`$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument60206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin`\'\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin`\'\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contin`\'\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument15207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fiA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fiA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument55507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exten{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fora\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fora\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fora\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument19205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument52909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%for{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%for{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%for{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57711()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally<\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally<\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finally<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument60309()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%us");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%us");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%us", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument35601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%retA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%retA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%retA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument78803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%trya\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%trya\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%trya\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument40409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi|@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi|@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defi|@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument85006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extend{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument92601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%define", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument75005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%el{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%el{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%el{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dea\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dea\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%dea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument94201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fi[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%default{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument61305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definedß[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definedß[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%definedß[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument40903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%final[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument21001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switc{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument35207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%break{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument37004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%br{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%br{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%br{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument40904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fals{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument42310()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%br");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%br");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%br", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument19905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01.\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01.\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01.\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument43410()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01.$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01.$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01.$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument69112()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01.\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01.\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01.\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument67407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exten");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exten");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exten", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument83809()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument65103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switch<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument15301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%caA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%caA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%caA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument58804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01.z");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01.z");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01.z", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument79212()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continue");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continue");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continue", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument50610()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defin[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallyaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallyaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finallyaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument8001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fi{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument6810()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nu{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nu{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%nu{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument34906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extend");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extend");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extend", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument11404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delet{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument85501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%swA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument68507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%delet");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%delet");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%delet", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument76501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01._");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01._");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01._", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument25604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continueA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continueA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continueA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument8601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%th{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument25104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continuaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continuaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continuaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument52808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%el");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%el");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%el", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument7104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%new{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%new{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%new{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument38701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usingaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usingaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usingaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74109()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument13804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whilea[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whilea[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whilea[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57314()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%new");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%new");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%new", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument25401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defi|_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defi|_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defi|_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument43103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%default");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%default");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%default", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument33801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=$a");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=$a");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=$a", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument19206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defau[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%l0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%l0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%l0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defin{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument4006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throwA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throwA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throwA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fals");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fals");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fals", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%for");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%for");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%for", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defined{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument1101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switcha");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switcha");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switcha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument56604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defined");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defined");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defined", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument80110()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defin");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument10504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ina[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ina[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ina[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument34004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%break");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%break");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%break", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument60706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switch[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument9504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falseaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falseaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%falseaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument51307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whaA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whaA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument89005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%while{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument33301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ta\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ta\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ta\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument46211()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catchaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catchaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catchaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument61306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w<@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w<@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%w<@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument13701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%th", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument96909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01E0:@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01E0:@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01E0:@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57712()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%elA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%elA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%elA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument82502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%iA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%iA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%iA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument86004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throw[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%conti");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%conti");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%conti", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument28803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finaaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finaaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finaaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41613()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defau{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument82705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0#\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0#\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0#\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument14607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0#$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0#$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0#$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument94507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0#\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0#\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0#\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70309()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exte{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument59409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extenA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extenA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extenA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument55508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catch{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument73206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%final{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument32902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%falsaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument50804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w<<\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w<<\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%w<<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument37204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallyß[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallyß[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finallyß[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil|\"\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil|\"\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whil|\"\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil|$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil|$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whil|$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument67104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whil|\'\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whil|\'\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whil|\'\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument24314()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finally{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument49801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exteaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exteaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exteaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defau");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defau");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defau", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument43910()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%while");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%while");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%while", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument67702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contiA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contiA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contiA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument19401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%lo");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%lo");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%lo", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\0\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "\0\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument86206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throw{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument84504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%th0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nuA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nuA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%nuA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument27306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catch");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catch");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument78804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01E0:_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01E0:_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01E0:_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument83201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%reA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%reA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%reA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16809()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%el`@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%el`@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%el`@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument96304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throw", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument61904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%retA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%retA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%retA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36211()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nu");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nu");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%nu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument6604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0#@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0#@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0#@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36212()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exte");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exte");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exte", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument28910()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switch{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument79106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%i0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%i0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%i0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26517()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ret0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ret0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ret0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument33004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%breaaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument45108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%in0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%in0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%in0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument61807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switch");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switch");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument20701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w<_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w<_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%w<_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument23501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%final");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%final");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%final", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument64503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=$a\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=$a\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=$a\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%reA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%reA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%reA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54613()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th\\\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th\\\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%th\\\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument35312()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th\\$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th\\$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%th\\$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument40905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th\\\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th\\\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%th\\\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument35504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whilaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whilaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whilaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument23605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=$ar");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=$ar");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=$ar", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument79406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\0=$ar\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\0=$ar\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\0=$ar\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument19906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument59001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finalA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finalA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finalA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument29601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%el`_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%el`_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%el`_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument4501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%new0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%new0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%new0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26808()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th\\@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th\\@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%th\\@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument93902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catcA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catcA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catcA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57315()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finally", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument52910()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th\\_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th\\_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%th\\_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument27701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01:\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01:\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01:\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\08:$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\08:$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\08:$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument42201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0E\01:\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0E\01:\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0E\01:\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97713()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w<\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w<\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%w<\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument5304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w<$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w<$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%w<$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument52405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w<\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w<\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%w<\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument34510()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finallaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70610()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defauaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defauaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defauaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument50306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument31310()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%wh0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%wh0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%wh0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument55107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nuaA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nuaA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%nuaA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument4007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ca0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ca0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ca0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument67703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%i0a");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%i0a");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%i0a", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument5401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breakA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breakA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%breakA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument21901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%deleaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument2008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fiaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fiaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fiaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62213()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%cont{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument75006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usinA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usinA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usinA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument82706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extendAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extendAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extendAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument64301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ua\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ua\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ua\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71410()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%elaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%elaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%elaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument52704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switcaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switcaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switcaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36010()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument75301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaulaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaulaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaulaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26712()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defiaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defiaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defiaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument81304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%r0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%r0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%r0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument31104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contin{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument18410()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whileaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whileaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whileaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument40502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%coA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%coA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%coA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%retAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%retAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%retAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument66903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%neA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%neA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%neA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleteA\0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleteA\0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%deleteA\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument99004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deletA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deletA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%deletA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defineaA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defineaA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defineaA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%swaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument93110()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%forA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%forA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%forA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument56707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%r0A");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%r0A");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%r0A", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument75007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fiA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fiA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fiA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument22307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument17303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%definAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument32903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extenaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extenaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extenaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument90606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%deA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument52107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%braa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%braa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%braa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument32804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%cA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument40709()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%elA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%elA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%elA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument10304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extendaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extendaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extendaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument55001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finalaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finalaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finalaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continuA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continuA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continuA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument55403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fa0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fa0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fa0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%newaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%newaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%newaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument80407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breakaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breakaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%breakaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument90204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%coa_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%coa_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%coa_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument45704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contin");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contin");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument65001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throwaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throwaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throwaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument56101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%loaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%loaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%loaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%deleAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument76104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%loA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%loA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%loA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument27804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usinaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usinaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usinaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catcaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catcaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catcaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument78805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%swA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument9104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ifa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ifa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ifa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument4008()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%cont", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument18411()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%reAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%reAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%reAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument5511()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deletaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deletaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%deletaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument24606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%r¿0[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%r¿0[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%r¿0[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument3503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switc00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switc00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switc00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument81612()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%neaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%neaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%neaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument38207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%traa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%traa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%traa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument51905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%new00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%new00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%new00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falseA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falseA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%falseA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument69405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exA0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exA0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exA0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54614()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%definaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument67801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%loAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%loAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%loAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36309()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contiaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contiaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contiaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument2304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nuaAa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nuaAa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%nuaAa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument29204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catchA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catchA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catchA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument17704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%trya0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%trya0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%trya0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument69907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%reaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%reaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%reaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument39501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%falsA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%falsA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%falsA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument75704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definedaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definedaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%definedaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument57616()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%sw_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%sw_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%sw_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument61102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%uaA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%uaA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%uaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument15101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finally0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finally0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finally0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument53406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaultaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaultaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaultaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument92103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deleteaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deleteaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%deleteaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument516()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de*@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de*@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de*@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument68904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de*\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de*\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de*\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument10710()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de*$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de*$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de*$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument20507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de*\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de*\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de*\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument39404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%continueaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%continueaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%continueaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument77704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de*_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de*_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de*_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument28402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fo0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fo0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fo0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument85805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contina0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contina0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contina0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument22204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ifaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ifaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ifaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16709()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tryaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tryaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%tryaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument51906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th^@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th^@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%th^@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument97304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th^\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th^\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%th^\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument98507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th^$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th^$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%th^$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument47508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th^\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th^\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%th^\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%th^_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%th^_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%th^_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument81501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%trA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%trA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%trA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument7504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%thaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument89407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%retaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%retaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%retaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument21604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%brA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument65704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ua[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ua[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ua[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument10606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%caaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%caaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%caaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument49204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exteA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exteA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exteA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument46802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whileA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whileA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whileA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument28606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%deaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%deaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%deaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument45109()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%i0{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%i0{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%i0{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument46212()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finallA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument52809()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%i0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%i0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%i0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument8204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument615()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%coaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%coaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%coaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument6811()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%na\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%na\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%na\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument98508()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de\0K\0Y");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de\0K\0Y");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de\0K\0Y", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument64101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%foraa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%foraa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%foraa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument52911()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument33103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%re0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%re0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%re0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument80702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%faaAa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%faaAa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%faaAa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument21112()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fiAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fiAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fiAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument25701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%dA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%dA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%dA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%elAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%elAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%elAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument82101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finaaA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finaaA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finaaA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument13406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%us0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%us0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%us0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument60004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%sa\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%sa\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%sa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%$arg<$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%$arg<$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%$arg<$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument94304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%us_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%us_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%us_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument89006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%swit0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument42506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%caa_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%caa_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%caa_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument43201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%w0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whilaA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whilaA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whilaA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ret_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ret_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ret_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument7809()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%taA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%taA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%taA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%i0aa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%i0aa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%i0aa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument6004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fi0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument5907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%trAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%trAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%trAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument27501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%el_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%el_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%el_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ba\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ba\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ba\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument91107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument47107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exA00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exA00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exA00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument94001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de+@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de+@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de+@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument78201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de+_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de+_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de+_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de+\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de+\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de+\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument60601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de+$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de+$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de+$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument82503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de+\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de+\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de+\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument28403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%uaA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%uaA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%uaA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument35106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%foaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%foaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%foaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument85806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%taA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%taA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%taA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument857()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument88503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tr_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tr_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%tr_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument76004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaul_\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaul_\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaul_\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument68010()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%saÁ");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%saÁ");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%saÁ", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument85807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defauA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defauA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defauA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument53903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%usAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%usAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%usAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument71603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switchaa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switchaa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switchaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument38407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finallAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finallAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finallAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument75207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defiA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defiA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defiA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument37104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switchAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switchAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switchAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument77705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defaAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defaAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defaAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument50108()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ca00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ca00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ca00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument99308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ta0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ta0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ta0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument92507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defauAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defauAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defauAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument28301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throw00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throw00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throw00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument11304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ifa{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ifa{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ifa{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument34705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%thAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%thAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%thAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument12403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%definedAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%definedAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%definedAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument94710()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%bA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%bA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%bA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument20001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e>@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e>@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%e>@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument60904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e>>\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e>>\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%e>>\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument44509()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e>\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e>\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%e>\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument87401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e>\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e>\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%e>\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument82809()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e\0>_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e\0>_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%e\0>_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument51308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e?\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e?\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%e?\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument3203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e?$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e?$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%e?$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument90801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e?\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e?\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%e?\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument64804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e?@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e?@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%e?@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument24315()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%e\0?_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%e\0?_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%e\0?_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63610()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%fi00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%fi00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%fi00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument26809()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whilAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whilAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whilAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument32603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finala0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finala0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finala0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ifa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ifa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ifa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument9105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%switchA0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%switchA0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%switchA0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument16607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%brAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%brAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%brAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument62309()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finalla0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finalla0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finalla0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument54509()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%extendaa0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%extendaa0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%extendaa0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument79901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swit00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swit00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%swit00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41012()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%re00");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%re00");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%re00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument67913()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%finaaa0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%finaaa0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%finaaa0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument46803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ina{");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ina{");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ina{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument14101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%exA0A");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%exA0A");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%exA0A", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument98801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%taAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%taAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%taAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument90710()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%breaA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36721()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%c0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%c0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%c0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument2009()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%coA0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%coA0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%coA0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ina");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ina");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument38408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%coAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%coAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%coAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument77801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%saA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%saA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%saA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument52406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%breaAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%breaAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%breaAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument67201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%nu0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%nu0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%nu0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument89203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ta0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ta0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ta0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument70704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%defineAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%defineAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%defineAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument38601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%throAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%throAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%throAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument69406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%saA\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%saA\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%saA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument53206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%catcha0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%catcha0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%catcha0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument69604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w0A");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w0A");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%w0A", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%define0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%define0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%define0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument55204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%cont0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%cont0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%cont0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument87304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%neA0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%neA0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%neA0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument44201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%inaa0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%inaa0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%inaa0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument61103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%w¿0[");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%w¿0[");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%w¿0[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument74707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%swi");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%swi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%swi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument41306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<<\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<<\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument99506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%f_<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%f_<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%f_<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument93903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%0.");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%0.");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%0.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument10810()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%neAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%neAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%neAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument72304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%ﾱ");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%ﾱ");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%ﾱ", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument65809()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%whi");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%whi");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%whi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument91504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<<\0<");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<<\0<");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<<\0<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument68104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%contAA");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%contAA");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%contAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument63006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de-\"");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de-\"");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de-\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument99309()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de-$");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de-$");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de-$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de-\'");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de-\'");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de-\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument36213()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de-@");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de-@");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de-@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument75705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%de-_");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%de-_");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%de-_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument34706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%saa");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%saa");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%saa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        [Priority(2147483647)]
        public void TokenizeDocument18104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%tha0\0");
            AphidLexerTests.TokenizeDocument(aphidLexer, "<%tha0\0");
            Assert.IsNotNull((object)aphidLexer);
            Assert.AreEqual<string>("<%tha0\0", aphidLexer.Text);
        }
    }
}
