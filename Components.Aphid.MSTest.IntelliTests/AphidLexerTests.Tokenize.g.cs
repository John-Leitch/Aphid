using System.ComponentModel;
using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework;
using Components.Aphid.Lexer;
// <auto-generated>
// This file contains automatically generated tests.
// Do not modify this file manually.
// 
// If the contents of this file becomes outdated, you can delete it.
// For example, if it no longer compiles.
// </auto-generated>
using System;
using DescriptionAttribute = Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute;

namespace Components.Aphid.Parser.Tests
{
    public partial class AphidLexerTests
    {

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize472()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize307()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize624()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("8");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "8");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("8", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize619()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("Y");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "Y");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("Y", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize356()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize891()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize177()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize685()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize239()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("@");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize964()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("@\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "@\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("@\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize599()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize928()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("Ka");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "Ka");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("Ka", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize740()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("NA");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "NA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("NA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize553()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize666()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("@>");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "@>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("@>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize753()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K[");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize52()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize47201()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("");
            aphidLexer.SetMode(512);
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize988()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("Y<");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "Y<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("Y<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize54()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize921()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`:");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize47202()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("");
            aphidLexer.SetMode(2);
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize62()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K<\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K<\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize47203()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("");
            aphidLexer.SetMode(1);
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize249()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K<@");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K<@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize34()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`@");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize101()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`~");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize329()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("Q<<");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "Q<<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("Q<<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize340()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K<~");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K<~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize30701()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\0");
            aphidLexer.SetMode(1);
            AphidLexerTests.TokenizeAll(aphidLexer, "\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize30702()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\0");
            aphidLexer.SetMode(2);
            AphidLexerTests.TokenizeAll(aphidLexer, "\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize855()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K<`");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K<`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize815()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("<");
            aphidLexer.SetMode(1);
            AphidLexerTests.TokenizeAll(aphidLexer, "<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize924()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`!");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize165()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K<|");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K<|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize305()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("$");
            aphidLexer.SetMode(2);
            AphidLexerTests.TokenizeAll(aphidLexer, "$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize695()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`|");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize89()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K<<=");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K<<=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<<=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize325()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("``");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "``");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("``", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize89101()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("<\0");
            aphidLexer.SetMode(1);
            AphidLexerTests.TokenizeAll(aphidLexer, "<\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize70()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K<!");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K<!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize546()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("<%");
            aphidLexer.SetMode(1);
            AphidLexerTests.TokenizeAll(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize240()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("<<");
            aphidLexer.SetMode(1);
            AphidLexerTests.TokenizeAll(aphidLexer, "<<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize291()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("<%\0");
            aphidLexer.SetMode(1);
            AphidLexerTests.TokenizeAll(aphidLexer, "<%\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize962()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("<%=");
            aphidLexer.SetMode(1);
            AphidLexerTests.TokenizeAll(aphidLexer, "<%=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize238()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`/");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize115()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("Y</");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "Y</");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("Y</", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize983()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("b");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "b");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("b", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize422()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("b\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "b\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("b\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize428()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("br");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "br");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("br", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize878()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("br\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "br\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("br\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize922()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("brA");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "brA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("brA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize626()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("br0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "br0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("br0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize660()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("br[");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "br[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("br[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize342()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("bra");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "bra");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("bra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize53()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("ba");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "ba");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ba", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize108()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("bre");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "bre");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("bre", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize468()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("b{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "b{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("b{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize630()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("bre0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "bre0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("bre0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize494()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("bA");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "bA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("bA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize647()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("br{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "br{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("br{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize14()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("breb");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "breb");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("breb", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize446()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("bre{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "bre{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("bre{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize314()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("brea");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "brea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("brea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize26()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("b");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "b");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("b", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize825()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("bre");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "bre");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("bre", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize391()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("b0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "b0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("b0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize99()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("break");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "break");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("break", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize336()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("br");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "br");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("br", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize615()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("brea0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "brea0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("brea0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize373()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("breP");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "breP");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("breP", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize688()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("brea");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "brea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("brea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize460()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize175()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize123()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0.");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize536()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0x");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0x");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0x", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize632()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize192()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0b");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0b");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0b", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize804()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize510()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:|");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize280()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:~");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize109()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:`");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize721()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0::");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0::");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0::", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize929()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:!");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize259()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:/");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize833()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`.");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize873()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:.");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize232()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize699()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize963()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=:");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize439()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=@");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize440()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=!");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize944()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=`");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize278()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=|");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize7001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=~");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize821()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=/");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize6201()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("a");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "a");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("a", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize186()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=.");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize659()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K<.");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K<.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize23201()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(")");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ")");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(")", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize678()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`?");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize703()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:<");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize792()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=?");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize51()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("Y<?");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "Y<?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("Y<?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize197()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K<]");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K<]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize977()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:]");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize771()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`]");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize726()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=]");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize260()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("_");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize170()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(",");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ",");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(",", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize515()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`-");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize31()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:-");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize389()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K<-");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K<-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize126()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=-");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize480()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=,");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize524()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize488()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize330()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-!");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize3401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-@");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize885()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-|");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize120()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-~");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize7002()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-:");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize79()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-`");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize967()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-/");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize10101()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-.");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize537()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-?");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize727()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-]");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize34001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("--");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "--");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("--", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize394()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("p");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "p");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("p", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize544()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`,");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize87301()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K<,");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K<,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize158()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:,");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize669()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-,");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize279()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`>");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize244()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K<>");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K<>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize5101()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=>");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize118()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("->");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "->");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("->", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize75()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:?");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize681()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=)");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize665()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K<(");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K<(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize851()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:*");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize484()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-)");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize167()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`)");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize805()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("q");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "q");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("q", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize383()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize227()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize230()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*@");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize937()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*`");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize65901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*|");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize584()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*!");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize125()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*~");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize690()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*:");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize339()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*/");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize96()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*.");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize985()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*?");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize613()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*]");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize865()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*-");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize588()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*,");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize338()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*>");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize160()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*)");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize327()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=^");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize912()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K<^");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K<^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize68101()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:^");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize723()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*^");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize775()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-^");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize146()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`^");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize7003()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`*");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize150()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-*");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize423()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("**");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "**");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("**", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize687()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(";");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ";");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(";", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize888()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("r");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "r");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("r", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize35601()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("r\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "r\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("r\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize631()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("re");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "re");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("re", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize385()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("r0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "r0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("r0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize668()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("rA");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "rA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("rA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize796()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("r[");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "r[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("r[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize858()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("ra");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "ra");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize616()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("re\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "re\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("re\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize364()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("r{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "r{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("r{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize24401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("rea");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "rea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("rea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize141()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("re{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "re{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("re{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize595()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("ret");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "ret");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ret", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize816()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("r");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "r");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("r", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize69901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("re");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "re");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("re", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize525()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("reA");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "reA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("reA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize59901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("re0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "re0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("re0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize44601()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=*");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize590()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K<*");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K<*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize559()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize321()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize26001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".@");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize571()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".~");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize958()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".`");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize835()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".:");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize82()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".|");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize285()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".!");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize563()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("./");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "./");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("./", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize92401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("..");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "..");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("..", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize978()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".?");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize32501()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".]");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize959()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".-");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize144()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".,");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize127()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".>");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize23901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".)");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize636()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".^");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize199()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".*");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize149()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:(");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize861()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`<");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize38501()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:>");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize1()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K<=");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K<=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize153()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".<");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize611()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-<");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize960()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*<");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize96301()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=<");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize107()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*+");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize672()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("h");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "h");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("h", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize44602()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:)");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize66601()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".+");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize441()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`+");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize138()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=+");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize60()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-+");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize269()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize539()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize272()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+@");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize3101()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+~");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize966()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+:");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize198()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+|");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize802()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+!");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize96201()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+`");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize303()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+/");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize176()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+.");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize111()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+?");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize357()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+]");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize762()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+-");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize522()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+,");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize957()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+>");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize224()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+)");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize91()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+^");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize426()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+*");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize824()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+<");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize82101()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K<)");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K<)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize219()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("++");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "++");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("++", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize642()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K<+");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K<+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize379()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("Z<_");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "Z<_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("Z<_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize600()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+(");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize80401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+_");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize795()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`_");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize509()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*(");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize931()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`(");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize549()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("._");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "._");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("._", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize156()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*_");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize74001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=_");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize148()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\0\0");
            aphidLexer.SetMode(1);
            AphidLexerTests.TokenizeAll(aphidLexer, "\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize691()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\0<");
            aphidLexer.SetMode(1);
            AphidLexerTests.TokenizeAll(aphidLexer, "\0<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\0<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize30501()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("$");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize196()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("$\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "$\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("$\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize789()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("$!");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "$!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("$!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize85101()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("$a");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "$a");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("$a", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize311()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("$a\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "$a\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("$a\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize11()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("$_");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "$_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("$_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize830()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("$args");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "$args");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("$args", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize961()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:+");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize75301()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".(");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize226()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-_");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize657()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("x");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "x");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("x", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize72()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=(");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize994()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-(");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize399()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`=");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize174()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:=");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize566()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+=");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize205()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("<:");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "<:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize5102()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".=");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize905()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-=");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize27901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*=");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize117()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("==");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "==");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("==", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize710()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=\"");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize610()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*\"");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize37901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+\"");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize951()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`\"");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize19601()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("j");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "j");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("j", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize59501()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-\"");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize745()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize55()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize10()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/@");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize976()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/`");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize572()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/!");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize26002()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/:");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize407()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/~");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize635()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/|");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize658()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("//");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "//");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("//", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize4()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/.");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize178()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/?");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize81501()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/]");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize780()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/-");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize5301()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/,");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize53601()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/>");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize3402()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/)");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize984()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/^");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize50()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/*");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize629()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/<");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize380()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/+");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize96202()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/_");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize63001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/(");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize129()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/=");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize700()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".\"");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize38901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/\"");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize5401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+#");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize397()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-#");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize80201()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`#");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize388()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(" ");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, " ");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(" ", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize49401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=#");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize562()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*#");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize80202()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".#");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize919()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("z");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "z");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("z", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize139()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/#");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize359()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize887()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize574()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">!");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize605()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">@");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize64()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">|");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize258()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">:");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize28001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">~");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize13801()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">`");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize48801()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">/");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize68()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">.");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize50901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">?");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize496()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">]");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize5302()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">-");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize482()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">,");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize451()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">>");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize267()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">>\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">>\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">>\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize972()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">>=");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">>=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">>=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize93701()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">)");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize300()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">^");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize88()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">*");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize41()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("><");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "><");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("><", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize679()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">+");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize79201()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">_");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize463()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">(");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize98401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">=");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize384()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">\"");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize11501()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">#");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize42201()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">\\");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize464()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*\\");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize854()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/\\");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize53701()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=\\");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize94()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:\\");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize880()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`\\");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize523()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-\\");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize770()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".\\");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize593()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("K<\\");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "K<\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize147()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+\\");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize131()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`;");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize489()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-;");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize96401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:;");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize317()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">;");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize513()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".;");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize352()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*;");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize760()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/;");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize831()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+;");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize75302()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=;");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize95701()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize30301()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize836()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!:");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize350()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!@");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize757()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!`");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize719()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!|");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize543()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!!");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize495()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!~");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize17701()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!/");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize114()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!.");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize10102()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!?");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize759()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!]");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize353()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!-");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize457()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!,");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize218()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!>");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize534()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!)");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize734()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!^");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize217()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!*");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize345()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!<");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize939()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!+");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize35602()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!(");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize456()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!_");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize429()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!=");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize733()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!\"");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize245()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!#");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize784()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!\\");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize49()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!;");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize306()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=$");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize49501()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("i");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "i");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("i", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize871()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("i\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "i\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("i\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize355()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("iA");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "iA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("iA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize105()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("in");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "in");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("in", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize255()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("i[");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "i[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("i[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize162()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("ia");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "ia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize61301()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("i0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "i0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("i0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize894()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("i{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "i{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("i{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize180()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("if");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "if");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("if", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize671()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("i");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "i");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("i", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize79501()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/$");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize103()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`$");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize73401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">$");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize396()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*$");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize467()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!$");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize292()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:#");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize664()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".$");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize35901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-$");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize398()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+$");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize77()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize826()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize159()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?@");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize151()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?`");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize449()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?~");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize38902()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?|");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize5001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?!");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize53901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?:");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize88501()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?/");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize424()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?.");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize19801()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("??");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "??");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("??", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize113()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?]");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize01()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?-");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize92201()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?,");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize12601()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?>");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize9401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?)");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize717()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?^");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize675()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?*");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize35501()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?<");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize322()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?+");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize95901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?_");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize999()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?(");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize37()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?=");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize231()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?\"");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize493()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?#");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize832()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?\\");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize728()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?;");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize288()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?$");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize12001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">%");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize61601()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*%");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize241()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("y");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "y");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("y", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize914()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?%");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize609()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=%");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize297()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize680()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize296()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%:");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize993()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%@");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize38301()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%|");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize214()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%~");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize965()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%!");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize430()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%`");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize22()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%/");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize3102()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%.");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize203()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%?");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize93702()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%]");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize597()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%-");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize798()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%,");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize234()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%>");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize641()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%)");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize54901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%^");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize730()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%*");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize97201()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%<");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize298()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%+");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize287()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%_");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize346()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%(");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize135()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%=");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize185()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%\"");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize11401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%#");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize862()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%\\");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize14601()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%;");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize182()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%$");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize5303()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!%");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize213()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:%");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize506()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".%");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize93()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%%");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize48901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`%");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize67501()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-%");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize810()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+%");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize742()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/%");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize27801()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%&");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize809()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+&");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize87801()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".&");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize15301()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-&");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize191()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?&");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize662()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("d");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "d");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("d", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize906()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("d\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "d\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("d\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize933()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("d0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "d0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("d0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize21401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("da");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "da");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("da", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize209()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("de");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "de");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("de", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize237()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("de\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "de\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("de\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize136()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("d<");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "d<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("d<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize942()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("def");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "def");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("def", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize18601()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("dA");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "dA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("dA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize416()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("def0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "def0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("def0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize38401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("d{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "d{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("d{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize53602()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("defb");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "defb");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defb", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize32901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("defa");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "defa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize22701()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("dea");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "dea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("dea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize35001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("defa0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "defa0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defa0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize476()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("def{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "def{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("def{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize656()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("d");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "d");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("d", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize360()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("de0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "de0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("de0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize850()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("do");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "do");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("do", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize9601()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("de<");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "de<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("de<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize846()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("defA");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "defA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize982()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("defi");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "defi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize479()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("deA");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "deA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("deA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize461()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("del");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "del");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("del", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize10501()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("de{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "de{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("de{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize23801()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("defau");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "defau");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defau", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize956()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("def");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "def");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("def", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize75701()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("delP");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "delP");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("delP", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize80()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("de");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "de");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("de", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize374()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("del[");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "del[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("del[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize425()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("defi0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "defi0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defi0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize10502()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("dela");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "dela");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("dela", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize45601()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("defin");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "defin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize21701()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("del0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "del0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("del0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize83101()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("del{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "del{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("del{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize337()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("dele");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "dele");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("dele", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize7701()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("del");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "del");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("del", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize47()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("delet");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "delet");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("delet", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize79502()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("defi");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "defi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize140()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("dele0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "dele0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("dele0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize18001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("defa");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "defa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize650()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("delete");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "delete");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("delete", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize557()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("dele");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "dele");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("dele", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize498()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=&");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize970()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("0:&");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "0:&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize504()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`&");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!&");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize61101()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">&");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize46001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/&");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize96302()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*&");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize596()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("l");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "l");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("l", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize91401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("l\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "l\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("l\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize56601()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("lA");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "lA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize52201()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("la");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "la");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("la", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize363()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("l[");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "l[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("l[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize54902()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("l0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "l0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("l0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize21901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("lo");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "lo");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lo", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize897()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("lo\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "lo\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lo\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize35301()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("loc");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "loc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize69()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("loA");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "loA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize911()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("loa");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "loa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize251()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("lob");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "lob");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lob", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize52301()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("lo0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "lo0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lo0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize996()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("lo[");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "lo[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lo[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize526()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("lo{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "lo{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lo{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize91201()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("lo");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "lo");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lo", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize50401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("l{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "l{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("l{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize99601()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("l");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "l");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("l", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize96001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("lock");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "lock");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lock", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize59902()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("load");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "load");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("load", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize697()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("loca");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "loca");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize686()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("loaP");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "loaP");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loaP", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize14401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("loaa");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "loaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize88001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("loc0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "loc0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loc0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize16001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("loa[");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "loa[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loa[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize884()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("loc{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "loc{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loc{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize927()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("loa{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "loa{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loa{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize106()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("loc");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "loc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize92()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("locP");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "locP");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("locP", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize980()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("loa0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "loa0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loa0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize772()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("loa");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "loa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize61()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("=\'");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "=\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize395()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(">\'");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ">\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize4901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("%\'");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "%\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize13901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("/\'");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "/\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize16()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("*\'");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "*\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize294()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("+\'");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "+\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize829()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("-\'");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "-\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize813()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(".\'");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ".\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize73001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("?\'");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "?\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize56602()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("!\'");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "!\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize361()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize445()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize16701()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#!");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize16201()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#@");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize443()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#`");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize82102()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#:");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize4902()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#|");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize83001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#~");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize500()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#/");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize637()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#.");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize682()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#?");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize172()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#]");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize261()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#-");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize654()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#,");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize842()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#>");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize739()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#)");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize904()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#^");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize304()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#*");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize17702()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#<");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize578()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#+");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize134()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#_");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize689()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#(");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize295()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#=");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize44()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#\"");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize787()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("##");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "##");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("##", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize65701()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#\\");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize47204()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#;");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize471()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#$");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize35302()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#%");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize91202()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#&");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize110()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("`\'");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "`\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize718()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("#\'");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "#\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize2()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("t");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "t");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("t", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize76001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("t\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "t\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("t\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize692()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("t0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "t0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("t0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize243()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("tr");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "tr");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tr", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize554()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("tA");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "tA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize27902()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("tr\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "tr\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tr\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize507()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("th");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "th");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("th", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize354()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("ta");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "ta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize46401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("t[");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "t[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("t[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize427()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("try");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "try");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("try", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize9602()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("t{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "t{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("t{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize892()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("th\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "th\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("th\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize434()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("trA");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "trA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("trA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize15001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("tr[");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "tr[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tr[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize606()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("thr");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "thr");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thr", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize96501()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("tr0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "tr0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tr0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize71701()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("thA");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "thA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize80501()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("th[");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "th[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("th[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize73()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("tha");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "tha");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize42()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("thra");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "thra");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize943()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("thro");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "thro");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thro", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize418()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("th{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "th{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("th{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize38903()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("throw");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "throw");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("throw", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize20901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("tru");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "tru");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tru", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize91101()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("th");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "th");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("th", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize274()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("tra");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "tra");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize29801()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("thi");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "thi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize701()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("thro");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "thro");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thro", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize49301()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("trua");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "trua");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("trua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize754()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("t");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "t");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("t", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize173()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("thr{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "thr{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thr{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize926()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("true");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "true");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("true", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize55701()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("this");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "this");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("this", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize24501()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("thr");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "thr");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thr", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize73901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("thr0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "thr0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thr0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize769()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("tru0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "tru0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tru0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize87101()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("th0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "th0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("th0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize808()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("truP");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "truP");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("truP", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize43()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("thi0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "thi0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thi0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize85401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("tru[");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "tru[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tru[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize676()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("thro0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "thro0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thro0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize93101()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("tr{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "tr{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tr{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize452()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("tr");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "tr");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tr", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize369()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("tru{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "tru{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tru{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize24()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("thiP");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "thiP");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thiP", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize9603()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("thrP");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "thrP");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thrP", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize741()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("thia");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "thia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize86201()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("thi[");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "thi[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thi[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize10503()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("tru");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "tru");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tru", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize30302()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("thi{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "thi{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thi{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize15601()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("thi");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "thi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize2201()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize82501()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize61001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&!");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize781()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&:");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize547()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&@");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize432()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&|");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize25101()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&~");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize29802()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&`");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize575()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&/");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize17301()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&.");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize617()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&?");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize748()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&]");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize74002()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&-");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize9201()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&,");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize368()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&>");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize46801()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&)");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize886()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&^");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize514()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&*");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize23101()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&<");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize60001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&+");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize908()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&_");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize78101()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&(");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize12701()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&=");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize732()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&\"");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize33601()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&#");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize52302()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&\\");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize68001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&;");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize90401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&$");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize519()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&%");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize799()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&&");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize223()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("&\'");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "&\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize276()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("<<\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "<<\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize16702()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("$ar");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "$ar");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("$ar", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize27802()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\"\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\"\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\"\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize76201()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\"\"");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\"\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\"\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize483()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer(":@");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, ":@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(":@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize97202()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize45602()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize623()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\:");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize73402()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\@");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize11001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\!");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize26101()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\`");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize242()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\|");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize283()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\~");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize116()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\/");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize530()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\.");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize90402()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\?");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize155()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\]");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize991()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\-");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize96502()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\,");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize19701()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\>");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize83201()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\)");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize899()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\^");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize39501()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\*");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize42501()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\<");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize651()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\+");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize63()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\(");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize652()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\_");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize22601()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\=");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize5304()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\\"");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize46002()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\#");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize28()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\\\");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize580()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\;");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize02()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\$");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize638()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\%");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize4903()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\&");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize618()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("\\\'");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "\\\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize62901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize91203()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize521()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|@");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize61602()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|~");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize542()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|!");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize59()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|:");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize79901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("||");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "||");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("||", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize59903()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|`");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize83301()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|/");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize481()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|.");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize35401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|?");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize538()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|]");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize91204()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|-");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize290()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|,");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize561()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|>");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize86202()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|)");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize46402()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|^");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize22401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|*");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize65401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|<");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize560()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|+");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize248()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|_");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize705()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|(");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize98()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|=");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize62601()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|\"");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize132()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|#");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize6202()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|\\");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize14801()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|;");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize19802()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|$");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize953()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|%");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize3403()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|&");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize63801()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("|\'");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "|\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize299()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize96402()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("<\"");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "<\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize499()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize79503()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("e");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "e");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("e", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize433()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("e\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "e\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("e\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize6401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("eA");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "eA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("eA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize612()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("ea");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "ea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize938()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("el");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "el");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("el", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize67502()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("e0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "e0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("e0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize47601()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("el\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "el\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("el\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize5201()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("el0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "el0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("el0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize93703()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("els");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "els");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("els", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize806()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("e{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "e{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("e{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize45701()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("e");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "e");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("e", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize67901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("elA");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "elA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("elA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize6301()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("ex");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "ex");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ex", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize24001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("ex\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "ex\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ex\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize333()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("el[");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "el[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("el[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize533()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("exA");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "exA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize95101()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("ex[");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "ex[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ex[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize24502()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("exa");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "exa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize63501()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("ex0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "ex0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ex0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize973()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("ex{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "ex{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ex{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize470()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("elsa");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "elsa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("elsa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize286()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("ext");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "ext");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ext", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize7201()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("else");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "else");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("else", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize301()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("elsP");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "elsP");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("elsP", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize645()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("els[");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "els[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("els[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize843()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("ex");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "ex");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ex", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize24101()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("els0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "els0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("els0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize408()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("ela");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "ela");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ela", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize95902()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("exta");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "exta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize63701()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("els{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "els{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("els{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize43401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("el{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "el{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("el{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize447()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("extP");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "extP");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("extP", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize511()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("ext{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "ext{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ext{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize184()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("ext0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "ext0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ext0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize49901()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("el");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "el");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("el", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize20501()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("els");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "els");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("els", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize112()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("exte");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "exte");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exte", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize42401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("exten");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "exten");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exten", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize722()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("ext");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "ext");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ext", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize96701()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("exte0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "exte0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exte0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize949()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("extend");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "extend");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("extend", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize2801()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("exte");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "exte");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exte", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize4201()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("<#");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "<#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize81()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize90601()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("<;");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "<;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize76202()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("<$");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "<$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize868()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize18602()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("u");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "u");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("u", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize756()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("u\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "u\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("u\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize751()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("ua");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "ua");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize53301()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("u{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "u{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("u{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize823()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("u0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "u0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("u0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize46()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("uA");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "uA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("uA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize382()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("us");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "us");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("us", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize5402()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("u");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "u");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("u", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize76()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("us\0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "us\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("us\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize64701()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("usa");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "usa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize36801()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("us0");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "us0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("us0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize18401()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("us{");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "us{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("us{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize473()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("usi");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "usi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        public void Tokenize33001()
        {
            AphidLexer aphidLexer;
            aphidLexer = new AphidLexer("usin");
            aphidLexer.SetMode(0);
            AphidLexerTests.TokenizeAll(aphidLexer, "usin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize47205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize30703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize41601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("9");
            AphidLexerTests.TokenizeAll(aphidLexer, "9");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("9", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("Y");
            AphidLexerTests.TokenizeAll(aphidLexer, "Y");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("Y", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize89102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize17703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`");
            AphidLexerTests.TokenizeAll(aphidLexer, "`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize68501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "K\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize23902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("@");
            AphidLexerTests.TokenizeAll(aphidLexer, "@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize96403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("@\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "@\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("@\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize59904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K0");
            AphidLexerTests.TokenizeAll(aphidLexer, "K0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize92801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("Ka");
            AphidLexerTests.TokenizeAll(aphidLexer, "Ka");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("Ka", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize83601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("KA");
            AphidLexerTests.TokenizeAll(aphidLexer, "KA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("KA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize55301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K{");
            AphidLexerTests.TokenizeAll(aphidLexer, "K{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize66602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("@>");
            AphidLexerTests.TokenizeAll(aphidLexer, "@>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("@>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize75303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K[");
            AphidLexerTests.TokenizeAll(aphidLexer, "K[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K");
            AphidLexerTests.TokenizeAll(aphidLexer, "K");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize27601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<");
            AphidLexerTests.TokenizeAll(aphidLexer, "K<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "`\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize92101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`:");
            AphidLexerTests.TokenizeAll(aphidLexer, "`:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize92402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`!");
            AphidLexerTests.TokenizeAll(aphidLexer, "`!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "K<\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize3404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`@");
            AphidLexerTests.TokenizeAll(aphidLexer, "`@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize24901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<@");
            AphidLexerTests.TokenizeAll(aphidLexer, "K<@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize188()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("Q<`");
            AphidLexerTests.TokenizeAll(aphidLexer, "Q<`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("Q<`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize34002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<~");
            AphidLexerTests.TokenizeAll(aphidLexer, "K<~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize10103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`~");
            AphidLexerTests.TokenizeAll(aphidLexer, "`~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize16501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<|");
            AphidLexerTests.TokenizeAll(aphidLexer, "K<|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize69501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`|");
            AphidLexerTests.TokenizeAll(aphidLexer, "`|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize7004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<!");
            AphidLexerTests.TokenizeAll(aphidLexer, "K<!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize62902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<:");
            AphidLexerTests.TokenizeAll(aphidLexer, "K<:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize32502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("``");
            AphidLexerTests.TokenizeAll(aphidLexer, "``");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("``", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize78102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K</");
            AphidLexerTests.TokenizeAll(aphidLexer, "K</");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K</", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize23802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`/");
            AphidLexerTests.TokenizeAll(aphidLexer, "`/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(" ");
            AphidLexerTests.TokenizeAll(aphidLexer, " ");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(" ", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize67201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("h");
            AphidLexerTests.TokenizeAll(aphidLexer, "h");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("h", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize23202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=");
            AphidLexerTests.TokenizeAll(aphidLexer, "=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize69902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "=\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize43901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=@");
            AphidLexerTests.TokenizeAll(aphidLexer, "=@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize7005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=~");
            AphidLexerTests.TokenizeAll(aphidLexer, "=~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize27803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=|");
            AphidLexerTests.TokenizeAll(aphidLexer, "=|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize44001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=!");
            AphidLexerTests.TokenizeAll(aphidLexer, "=!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize94401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=`");
            AphidLexerTests.TokenizeAll(aphidLexer, "=`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize96303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=:");
            AphidLexerTests.TokenizeAll(aphidLexer, "=:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize82103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=/");
            AphidLexerTests.TokenizeAll(aphidLexer, "=/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize18603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=.");
            AphidLexerTests.TokenizeAll(aphidLexer, "=.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<.");
            AphidLexerTests.TokenizeAll(aphidLexer, "K<.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize83302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`.");
            AphidLexerTests.TokenizeAll(aphidLexer, "`.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize19602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("j");
            AphidLexerTests.TokenizeAll(aphidLexer, "j");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("j", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize30502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("$");
            AphidLexerTests.TokenizeAll(aphidLexer, "$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize19603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("$\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "$\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("$\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize1101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("$_");
            AphidLexerTests.TokenizeAll(aphidLexer, "$_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("$_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize85102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("$a");
            AphidLexerTests.TokenizeAll(aphidLexer, "$a");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("$a", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize78901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("$!");
            AphidLexerTests.TokenizeAll(aphidLexer, "$!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("$!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize31101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("$a\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "$a\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("$a\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize83002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("$args");
            AphidLexerTests.TokenizeAll(aphidLexer, "$args");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("$args", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize79202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=?");
            AphidLexerTests.TokenizeAll(aphidLexer, "=?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize67801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`?");
            AphidLexerTests.TokenizeAll(aphidLexer, "`?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<?");
            AphidLexerTests.TokenizeAll(aphidLexer, "K<?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize72601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=]");
            AphidLexerTests.TokenizeAll(aphidLexer, "=]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize19702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<]");
            AphidLexerTests.TokenizeAll(aphidLexer, "K<]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize77101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`]");
            AphidLexerTests.TokenizeAll(aphidLexer, "`]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize49502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("i");
            AphidLexerTests.TokenizeAll(aphidLexer, "i");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("i", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize87102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("i\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "i\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("i\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("iA");
            AphidLexerTests.TokenizeAll(aphidLexer, "iA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("iA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize10504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in");
            AphidLexerTests.TokenizeAll(aphidLexer, "in");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("in", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize18002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("if");
            AphidLexerTests.TokenizeAll(aphidLexer, "if");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("if", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize16202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ia");
            AphidLexerTests.TokenizeAll(aphidLexer, "ia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize89401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("i{");
            AphidLexerTests.TokenizeAll(aphidLexer, "i{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("i{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("i0");
            AphidLexerTests.TokenizeAll(aphidLexer, "i0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("i0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize67101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("i");
            AphidLexerTests.TokenizeAll(aphidLexer, "i");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("i", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<-");
            AphidLexerTests.TokenizeAll(aphidLexer, "K<-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize46003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0");
            AphidLexerTests.TokenizeAll(aphidLexer, "0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize17501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0.");
            AphidLexerTests.TokenizeAll(aphidLexer, "0.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize19201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0b");
            AphidLexerTests.TokenizeAll(aphidLexer, "0b");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0b", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:");
            AphidLexerTests.TokenizeAll(aphidLexer, "0:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize80402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "0:\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize53603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0x");
            AphidLexerTests.TokenizeAll(aphidLexer, "0x");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0x", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize72101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0::");
            AphidLexerTests.TokenizeAll(aphidLexer, "0::");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0::", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize10901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:`");
            AphidLexerTests.TokenizeAll(aphidLexer, "0:`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize51001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:|");
            AphidLexerTests.TokenizeAll(aphidLexer, "0:|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize28002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:~");
            AphidLexerTests.TokenizeAll(aphidLexer, "0:~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize92901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:!");
            AphidLexerTests.TokenizeAll(aphidLexer, "0:!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize25901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:/");
            AphidLexerTests.TokenizeAll(aphidLexer, "0:/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize87302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:.");
            AphidLexerTests.TokenizeAll(aphidLexer, "0:.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize7501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:?");
            AphidLexerTests.TokenizeAll(aphidLexer, "0:?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize97701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:]");
            AphidLexerTests.TokenizeAll(aphidLexer, "0:]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize3103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:-");
            AphidLexerTests.TokenizeAll(aphidLexer, "0:-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize51501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`-");
            AphidLexerTests.TokenizeAll(aphidLexer, "`-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=-");
            AphidLexerTests.TokenizeAll(aphidLexer, "=-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize54401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`,");
            AphidLexerTests.TokenizeAll(aphidLexer, "`,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize48001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=,");
            AphidLexerTests.TokenizeAll(aphidLexer, "=,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize68701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(";");
            AphidLexerTests.TokenizeAll(aphidLexer, ";");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(";", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize62903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|");
            AphidLexerTests.TokenizeAll(aphidLexer, "|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize91205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "|\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|:");
            AphidLexerTests.TokenizeAll(aphidLexer, "|:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize52101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|@");
            AphidLexerTests.TokenizeAll(aphidLexer, "|@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize79902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("||");
            AphidLexerTests.TokenizeAll(aphidLexer, "||");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("||", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|~");
            AphidLexerTests.TokenizeAll(aphidLexer, "|~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize59905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|`");
            AphidLexerTests.TokenizeAll(aphidLexer, "|`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize54201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|!");
            AphidLexerTests.TokenizeAll(aphidLexer, "|!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize83303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|/");
            AphidLexerTests.TokenizeAll(aphidLexer, "|/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize48101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|.");
            AphidLexerTests.TokenizeAll(aphidLexer, "|.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|?");
            AphidLexerTests.TokenizeAll(aphidLexer, "|?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize53801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|]");
            AphidLexerTests.TokenizeAll(aphidLexer, "|]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize91206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|-");
            AphidLexerTests.TokenizeAll(aphidLexer, "|-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize95702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!");
            AphidLexerTests.TokenizeAll(aphidLexer, "!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize30303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "!\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize83602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!:");
            AphidLexerTests.TokenizeAll(aphidLexer, "!:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!@");
            AphidLexerTests.TokenizeAll(aphidLexer, "!@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize54301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!!");
            AphidLexerTests.TokenizeAll(aphidLexer, "!!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize75702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!`");
            AphidLexerTests.TokenizeAll(aphidLexer, "!`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize71901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!|");
            AphidLexerTests.TokenizeAll(aphidLexer, "!|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize49503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!~");
            AphidLexerTests.TokenizeAll(aphidLexer, "!~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize17704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!/");
            AphidLexerTests.TokenizeAll(aphidLexer, "!/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize11402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!.");
            AphidLexerTests.TokenizeAll(aphidLexer, "!.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize10104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!?");
            AphidLexerTests.TokenizeAll(aphidLexer, "!?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize75901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!]");
            AphidLexerTests.TokenizeAll(aphidLexer, "!]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!-");
            AphidLexerTests.TokenizeAll(aphidLexer, "!-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize15801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:,");
            AphidLexerTests.TokenizeAll(aphidLexer, "0:,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|,");
            AphidLexerTests.TokenizeAll(aphidLexer, "|,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize50701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("Y<,");
            AphidLexerTests.TokenizeAll(aphidLexer, "Y<,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("Y<,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize45702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!,");
            AphidLexerTests.TokenizeAll(aphidLexer, "!,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize27903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`>");
            AphidLexerTests.TokenizeAll(aphidLexer, "`>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize21801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!>");
            AphidLexerTests.TokenizeAll(aphidLexer, "!>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=>");
            AphidLexerTests.TokenizeAll(aphidLexer, "=>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize24402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<>");
            AphidLexerTests.TokenizeAll(aphidLexer, "K<>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize56101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|>");
            AphidLexerTests.TokenizeAll(aphidLexer, "|>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:>");
            AphidLexerTests.TokenizeAll(aphidLexer, "0:>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize16703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`)");
            AphidLexerTests.TokenizeAll(aphidLexer, "`)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize68102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=)");
            AphidLexerTests.TokenizeAll(aphidLexer, "=)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize14901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:(");
            AphidLexerTests.TokenizeAll(aphidLexer, "0:(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize53401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!)");
            AphidLexerTests.TokenizeAll(aphidLexer, "!)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize86203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|)");
            AphidLexerTests.TokenizeAll(aphidLexer, "|)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize940()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\"");
            AphidLexerTests.TokenizeAll(aphidLexer, "\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize34003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("Y<*");
            AphidLexerTests.TokenizeAll(aphidLexer, "Y<*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("Y<*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|\\");
            AphidLexerTests.TokenizeAll(aphidLexer, "|\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize68103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:^");
            AphidLexerTests.TokenizeAll(aphidLexer, "0:^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize91207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<^");
            AphidLexerTests.TokenizeAll(aphidLexer, "K<^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize78401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!\\");
            AphidLexerTests.TokenizeAll(aphidLexer, "!\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize53702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=\\");
            AphidLexerTests.TokenizeAll(aphidLexer, "=\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize88002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`\\");
            AphidLexerTests.TokenizeAll(aphidLexer, "`\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize98301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b");
            AphidLexerTests.TokenizeAll(aphidLexer, "b");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("b", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize42202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "b\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("b\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize42801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("br");
            AphidLexerTests.TokenizeAll(aphidLexer, "br");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("br", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ba");
            AphidLexerTests.TokenizeAll(aphidLexer, "ba");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ba", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize39101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b0");
            AphidLexerTests.TokenizeAll(aphidLexer, "b0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("b0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize87802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("br\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "br\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("br\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize71902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b<");
            AphidLexerTests.TokenizeAll(aphidLexer, "b<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("b<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize34201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bra");
            AphidLexerTests.TokenizeAll(aphidLexer, "bra");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("bra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize49402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bA");
            AphidLexerTests.TokenizeAll(aphidLexer, "bA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("bA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize64702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("br{");
            AphidLexerTests.TokenizeAll(aphidLexer, "br{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("br{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize791()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("brý");
            AphidLexerTests.TokenizeAll(aphidLexer, "brý");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("brý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize10801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bre");
            AphidLexerTests.TokenizeAll(aphidLexer, "bre");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("bre", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize85402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b[");
            AphidLexerTests.TokenizeAll(aphidLexer, "b[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("b[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize92202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("brA");
            AphidLexerTests.TokenizeAll(aphidLexer, "brA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("brA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize62602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("br0");
            AphidLexerTests.TokenizeAll(aphidLexer, "br0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("br0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bre0");
            AphidLexerTests.TokenizeAll(aphidLexer, "bre0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("bre0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize31401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("brea");
            AphidLexerTests.TokenizeAll(aphidLexer, "brea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("brea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize03()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breA");
            AphidLexerTests.TokenizeAll(aphidLexer, "breA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("breA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bre[");
            AphidLexerTests.TokenizeAll(aphidLexer, "bre[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("bre[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize1401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breb");
            AphidLexerTests.TokenizeAll(aphidLexer, "breb");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("breb", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize46802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b{");
            AphidLexerTests.TokenizeAll(aphidLexer, "b{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("b{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize2601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b");
            AphidLexerTests.TokenizeAll(aphidLexer, "b");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("b", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize44603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bre{");
            AphidLexerTests.TokenizeAll(aphidLexer, "bre{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("bre{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize181()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "breaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("breaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize9901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("break");
            AphidLexerTests.TokenizeAll(aphidLexer, "break");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("break", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize82502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bre");
            AphidLexerTests.TokenizeAll(aphidLexer, "bre");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("bre", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize44604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:)");
            AphidLexerTests.TokenizeAll(aphidLexer, "0:)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("Q<)");
            AphidLexerTests.TokenizeAll(aphidLexer, "Q<)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("Q<)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize21702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!*");
            AphidLexerTests.TokenizeAll(aphidLexer, "!*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize7006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`*");
            AphidLexerTests.TokenizeAll(aphidLexer, "`*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize36101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#");
            AphidLexerTests.TokenizeAll(aphidLexer, "#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize44501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "#\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize16704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#!");
            AphidLexerTests.TokenizeAll(aphidLexer, "#!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize82104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#:");
            AphidLexerTests.TokenizeAll(aphidLexer, "#:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize16203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#@");
            AphidLexerTests.TokenizeAll(aphidLexer, "#@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize4904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#|");
            AphidLexerTests.TokenizeAll(aphidLexer, "#|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize83003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#~");
            AphidLexerTests.TokenizeAll(aphidLexer, "#~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize44301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#`");
            AphidLexerTests.TokenizeAll(aphidLexer, "#`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize50001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#/");
            AphidLexerTests.TokenizeAll(aphidLexer, "#/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#.");
            AphidLexerTests.TokenizeAll(aphidLexer, "#.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize68201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#?");
            AphidLexerTests.TokenizeAll(aphidLexer, "#?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize17201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#]");
            AphidLexerTests.TokenizeAll(aphidLexer, "#]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize26102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#-");
            AphidLexerTests.TokenizeAll(aphidLexer, "#-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#,");
            AphidLexerTests.TokenizeAll(aphidLexer, "#,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize84201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#>");
            AphidLexerTests.TokenizeAll(aphidLexer, "#>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize73902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#)");
            AphidLexerTests.TokenizeAll(aphidLexer, "#)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#\\");
            AphidLexerTests.TokenizeAll(aphidLexer, "#\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize30401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#*");
            AphidLexerTests.TokenizeAll(aphidLexer, "#*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize44605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=*");
            AphidLexerTests.TokenizeAll(aphidLexer, "=*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize22402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|*");
            AphidLexerTests.TokenizeAll(aphidLexer, "|*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize86101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`<");
            AphidLexerTests.TokenizeAll(aphidLexer, "`<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize121()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<<");
            AphidLexerTests.TokenizeAll(aphidLexer, "K<<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize415()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<<\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "K<<\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<<\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize8901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<<=");
            AphidLexerTests.TokenizeAll(aphidLexer, "K<<=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<<=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|<");
            AphidLexerTests.TokenizeAll(aphidLexer, "|<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize34501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!<");
            AphidLexerTests.TokenizeAll(aphidLexer, "!<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize96304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=<");
            AphidLexerTests.TokenizeAll(aphidLexer, "=<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize70301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:<");
            AphidLexerTests.TokenizeAll(aphidLexer, "0:<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize17705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#<");
            AphidLexerTests.TokenizeAll(aphidLexer, "#<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize85103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:*");
            AphidLexerTests.TokenizeAll(aphidLexer, "0:*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize44101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`+");
            AphidLexerTests.TokenizeAll(aphidLexer, "`+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize2202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&");
            AphidLexerTests.TokenizeAll(aphidLexer, "&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize82503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "&\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize54701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&@");
            AphidLexerTests.TokenizeAll(aphidLexer, "&@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&!");
            AphidLexerTests.TokenizeAll(aphidLexer, "&!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize25102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&~");
            AphidLexerTests.TokenizeAll(aphidLexer, "&~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize78103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&:");
            AphidLexerTests.TokenizeAll(aphidLexer, "&:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize43201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&|");
            AphidLexerTests.TokenizeAll(aphidLexer, "&|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&`");
            AphidLexerTests.TokenizeAll(aphidLexer, "&`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize57501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&/");
            AphidLexerTests.TokenizeAll(aphidLexer, "&/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize17302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&.");
            AphidLexerTests.TokenizeAll(aphidLexer, "&.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&?");
            AphidLexerTests.TokenizeAll(aphidLexer, "&?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize74801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&]");
            AphidLexerTests.TokenizeAll(aphidLexer, "&]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize74003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&-");
            AphidLexerTests.TokenizeAll(aphidLexer, "&-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize9202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&,");
            AphidLexerTests.TokenizeAll(aphidLexer, "&,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize36802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&>");
            AphidLexerTests.TokenizeAll(aphidLexer, "&>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize46803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&)");
            AphidLexerTests.TokenizeAll(aphidLexer, "&)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize52303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&\\");
            AphidLexerTests.TokenizeAll(aphidLexer, "&\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize51401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&*");
            AphidLexerTests.TokenizeAll(aphidLexer, "&*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize23102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&<");
            AphidLexerTests.TokenizeAll(aphidLexer, "&<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize39401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("p");
            AphidLexerTests.TokenizeAll(aphidLexer, "p");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("p", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize60002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&+");
            AphidLexerTests.TokenizeAll(aphidLexer, "&+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize56001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|+");
            AphidLexerTests.TokenizeAll(aphidLexer, "|+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize13802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=+");
            AphidLexerTests.TokenizeAll(aphidLexer, "=+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize747()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("Q<+");
            AphidLexerTests.TokenizeAll(aphidLexer, "Q<+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("Q<+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize57801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#+");
            AphidLexerTests.TokenizeAll(aphidLexer, "#+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize93901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!+");
            AphidLexerTests.TokenizeAll(aphidLexer, "!+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize70501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|(");
            AphidLexerTests.TokenizeAll(aphidLexer, "|(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize7202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=(");
            AphidLexerTests.TokenizeAll(aphidLexer, "=(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize256()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("A<(");
            AphidLexerTests.TokenizeAll(aphidLexer, "A<(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("A<(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize90403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#^");
            AphidLexerTests.TokenizeAll(aphidLexer, "#^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize163()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K<_");
            AphidLexerTests.TokenizeAll(aphidLexer, "K<_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K<_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize68901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#(");
            AphidLexerTests.TokenizeAll(aphidLexer, "#(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize32701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=^");
            AphidLexerTests.TokenizeAll(aphidLexer, "=^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize96101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0:+");
            AphidLexerTests.TokenizeAll(aphidLexer, "0:+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0:+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize93102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`(");
            AphidLexerTests.TokenizeAll(aphidLexer, "`(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%");
            AphidLexerTests.TokenizeAll(aphidLexer, "%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize68002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "%\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize96503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%!");
            AphidLexerTests.TokenizeAll(aphidLexer, "%!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%:");
            AphidLexerTests.TokenizeAll(aphidLexer, "%:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize99301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%@");
            AphidLexerTests.TokenizeAll(aphidLexer, "%@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize43001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%`");
            AphidLexerTests.TokenizeAll(aphidLexer, "%`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%|");
            AphidLexerTests.TokenizeAll(aphidLexer, "%|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize21402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%~");
            AphidLexerTests.TokenizeAll(aphidLexer, "%~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize2203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%/");
            AphidLexerTests.TokenizeAll(aphidLexer, "%/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize3104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%.");
            AphidLexerTests.TokenizeAll(aphidLexer, "%.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize20301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%?");
            AphidLexerTests.TokenizeAll(aphidLexer, "%?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize93704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%]");
            AphidLexerTests.TokenizeAll(aphidLexer, "%]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize59701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%-");
            AphidLexerTests.TokenizeAll(aphidLexer, "%-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize79801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%,");
            AphidLexerTests.TokenizeAll(aphidLexer, "%,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize23401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%>");
            AphidLexerTests.TokenizeAll(aphidLexer, "%>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize64101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%)");
            AphidLexerTests.TokenizeAll(aphidLexer, "%)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize86204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%\\");
            AphidLexerTests.TokenizeAll(aphidLexer, "%\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize73002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%*");
            AphidLexerTests.TokenizeAll(aphidLexer, "%*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize97203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%<");
            AphidLexerTests.TokenizeAll(aphidLexer, "%<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%+");
            AphidLexerTests.TokenizeAll(aphidLexer, "%+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!(");
            AphidLexerTests.TokenizeAll(aphidLexer, "!(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize16705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("$ar");
            AphidLexerTests.TokenizeAll(aphidLexer, "$ar");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("$ar", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize78104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&(");
            AphidLexerTests.TokenizeAll(aphidLexer, "&(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize54903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%^");
            AphidLexerTests.TokenizeAll(aphidLexer, "%^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize48301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(":@");
            AphidLexerTests.TokenizeAll(aphidLexer, ":@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(":@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize34601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%(");
            AphidLexerTests.TokenizeAll(aphidLexer, "%(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize46403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|^");
            AphidLexerTests.TokenizeAll(aphidLexer, "|^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize73403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!^");
            AphidLexerTests.TokenizeAll(aphidLexer, "!^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize14602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`^");
            AphidLexerTests.TokenizeAll(aphidLexer, "`^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("x");
            AphidLexerTests.TokenizeAll(aphidLexer, "x");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("x", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize27804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\"\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "\"\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\"\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize76203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\"\"");
            AphidLexerTests.TokenizeAll(aphidLexer, "\"\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\"\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize88601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&^");
            AphidLexerTests.TokenizeAll(aphidLexer, "&^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize11701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("==");
            AphidLexerTests.TokenizeAll(aphidLexer, "==");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("==", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&=");
            AphidLexerTests.TokenizeAll(aphidLexer, "&=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize13501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%=");
            AphidLexerTests.TokenizeAll(aphidLexer, "%=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#=");
            AphidLexerTests.TokenizeAll(aphidLexer, "#=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize39902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`=");
            AphidLexerTests.TokenizeAll(aphidLexer, "`=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize9801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|=");
            AphidLexerTests.TokenizeAll(aphidLexer, "|=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize42901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!=");
            AphidLexerTests.TokenizeAll(aphidLexer, "!=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize95102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`\"");
            AphidLexerTests.TokenizeAll(aphidLexer, "`\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize4401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#\"");
            AphidLexerTests.TokenizeAll(aphidLexer, "#\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize13401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\'");
            AphidLexerTests.TokenizeAll(aphidLexer, "\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize73301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!\"");
            AphidLexerTests.TokenizeAll(aphidLexer, "!\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize91901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("z");
            AphidLexerTests.TokenizeAll(aphidLexer, "z");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("z", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize71001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=\"");
            AphidLexerTests.TokenizeAll(aphidLexer, "=\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize18501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%\"");
            AphidLexerTests.TokenizeAll(aphidLexer, "%\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize73201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&\"");
            AphidLexerTests.TokenizeAll(aphidLexer, "&\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize62603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|\"");
            AphidLexerTests.TokenizeAll(aphidLexer, "|\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize80203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`#");
            AphidLexerTests.TokenizeAll(aphidLexer, "`#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize78701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("##");
            AphidLexerTests.TokenizeAll(aphidLexer, "##");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("##", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize24102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("y");
            AphidLexerTests.TokenizeAll(aphidLexer, "y");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("y", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize49403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=#");
            AphidLexerTests.TokenizeAll(aphidLexer, "=#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize24503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!#");
            AphidLexerTests.TokenizeAll(aphidLexer, "!#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize11403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%#");
            AphidLexerTests.TokenizeAll(aphidLexer, "%#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize33602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&#");
            AphidLexerTests.TokenizeAll(aphidLexer, "&#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize13201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|#");
            AphidLexerTests.TokenizeAll(aphidLexer, "|#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">");
            AphidLexerTests.TokenizeAll(aphidLexer, ">");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize88701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">\0");
            AphidLexerTests.TokenizeAll(aphidLexer, ">\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize60501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">@");
            AphidLexerTests.TokenizeAll(aphidLexer, ">@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize25801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">:");
            AphidLexerTests.TokenizeAll(aphidLexer, ">:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize28003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">~");
            AphidLexerTests.TokenizeAll(aphidLexer, ">~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize13803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">`");
            AphidLexerTests.TokenizeAll(aphidLexer, ">`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize57401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">!");
            AphidLexerTests.TokenizeAll(aphidLexer, ">!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">|");
            AphidLexerTests.TokenizeAll(aphidLexer, ">|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize48802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">/");
            AphidLexerTests.TokenizeAll(aphidLexer, ">/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">.");
            AphidLexerTests.TokenizeAll(aphidLexer, ">.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize50902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">?");
            AphidLexerTests.TokenizeAll(aphidLexer, ">?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize49601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">]");
            AphidLexerTests.TokenizeAll(aphidLexer, ">]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">-");
            AphidLexerTests.TokenizeAll(aphidLexer, ">-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize48201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">,");
            AphidLexerTests.TokenizeAll(aphidLexer, ">,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize45101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">>");
            AphidLexerTests.TokenizeAll(aphidLexer, ">>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize26701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">>\0");
            AphidLexerTests.TokenizeAll(aphidLexer, ">>\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">>\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize97204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">>=");
            AphidLexerTests.TokenizeAll(aphidLexer, ">>=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">>=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize93705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">)");
            AphidLexerTests.TokenizeAll(aphidLexer, ">)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize42203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">\\");
            AphidLexerTests.TokenizeAll(aphidLexer, ">\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize8801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">*");
            AphidLexerTests.TokenizeAll(aphidLexer, ">*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize4101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("><");
            AphidLexerTests.TokenizeAll(aphidLexer, "><");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("><", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize67902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">+");
            AphidLexerTests.TokenizeAll(aphidLexer, ">+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize46301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">(");
            AphidLexerTests.TokenizeAll(aphidLexer, ">(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize30001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">^");
            AphidLexerTests.TokenizeAll(aphidLexer, ">^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize98402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">=");
            AphidLexerTests.TokenizeAll(aphidLexer, ">=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">\"");
            AphidLexerTests.TokenizeAll(aphidLexer, ">\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize11502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">#");
            AphidLexerTests.TokenizeAll(aphidLexer, ">#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize24801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|_");
            AphidLexerTests.TokenizeAll(aphidLexer, "|_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize90801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&_");
            AphidLexerTests.TokenizeAll(aphidLexer, "&_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize74004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=_");
            AphidLexerTests.TokenizeAll(aphidLexer, "=_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("I<\\");
            AphidLexerTests.TokenizeAll(aphidLexer, "I<\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("I<\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize28701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%_");
            AphidLexerTests.TokenizeAll(aphidLexer, "%_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize79504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`_");
            AphidLexerTests.TokenizeAll(aphidLexer, "`_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize79203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">_");
            AphidLexerTests.TokenizeAll(aphidLexer, ">_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize13402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#_");
            AphidLexerTests.TokenizeAll(aphidLexer, "#_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize45603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!_");
            AphidLexerTests.TokenizeAll(aphidLexer, "!_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize68003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&;");
            AphidLexerTests.TokenizeAll(aphidLexer, "&;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize14603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%;");
            AphidLexerTests.TokenizeAll(aphidLexer, "%;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize47206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#;");
            AphidLexerTests.TokenizeAll(aphidLexer, "#;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize14802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|;");
            AphidLexerTests.TokenizeAll(aphidLexer, "|;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize4905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!;");
            AphidLexerTests.TokenizeAll(aphidLexer, "!;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize75304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=;");
            AphidLexerTests.TokenizeAll(aphidLexer, "=;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize13101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`;");
            AphidLexerTests.TokenizeAll(aphidLexer, "`;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize31701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">;");
            AphidLexerTests.TokenizeAll(aphidLexer, ">;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize30601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=$");
            AphidLexerTests.TokenizeAll(aphidLexer, "=$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize18201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%$");
            AphidLexerTests.TokenizeAll(aphidLexer, "%$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize46701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!$");
            AphidLexerTests.TokenizeAll(aphidLexer, "!$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize90404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&$");
            AphidLexerTests.TokenizeAll(aphidLexer, "&$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize88801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("r");
            AphidLexerTests.TokenizeAll(aphidLexer, "r");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("r", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("r\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "r\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("r\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("re");
            AphidLexerTests.TokenizeAll(aphidLexer, "re");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("re", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("re\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "re\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("re\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize52501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("reA");
            AphidLexerTests.TokenizeAll(aphidLexer, "reA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("reA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("r0");
            AphidLexerTests.TokenizeAll(aphidLexer, "r0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("r0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize95703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("re[");
            AphidLexerTests.TokenizeAll(aphidLexer, "re[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("re[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize24403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("rea");
            AphidLexerTests.TokenizeAll(aphidLexer, "rea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("rea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize59502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ret");
            AphidLexerTests.TokenizeAll(aphidLexer, "ret");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ret", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize14101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("re{");
            AphidLexerTests.TokenizeAll(aphidLexer, "re{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("re{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize85801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ra");
            AphidLexerTests.TokenizeAll(aphidLexer, "ra");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize59906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("re0");
            AphidLexerTests.TokenizeAll(aphidLexer, "re0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("re0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize19703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("r<");
            AphidLexerTests.TokenizeAll(aphidLexer, "r<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("r<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize26901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("reý");
            AphidLexerTests.TokenizeAll(aphidLexer, "reý");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("reý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize66801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("rA");
            AphidLexerTests.TokenizeAll(aphidLexer, "rA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("rA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize36401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("r{");
            AphidLexerTests.TokenizeAll(aphidLexer, "r{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("r{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize81601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("r");
            AphidLexerTests.TokenizeAll(aphidLexer, "r");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("r", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize73404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">$");
            AphidLexerTests.TokenizeAll(aphidLexer, ">$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize10301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`$");
            AphidLexerTests.TokenizeAll(aphidLexer, "`$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize19803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|$");
            AphidLexerTests.TokenizeAll(aphidLexer, "|$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize47101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#$");
            AphidLexerTests.TokenizeAll(aphidLexer, "#$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize49801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=&");
            AphidLexerTests.TokenizeAll(aphidLexer, "=&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize91208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#&");
            AphidLexerTests.TokenizeAll(aphidLexer, "#&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">&");
            AphidLexerTests.TokenizeAll(aphidLexer, ">&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize7702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?");
            AphidLexerTests.TokenizeAll(aphidLexer, "?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize82601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "?\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize53902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?:");
            AphidLexerTests.TokenizeAll(aphidLexer, "?:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize15901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?@");
            AphidLexerTests.TokenizeAll(aphidLexer, "?@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize15101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?`");
            AphidLexerTests.TokenizeAll(aphidLexer, "?`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize44901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?~");
            AphidLexerTests.TokenizeAll(aphidLexer, "?~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?!");
            AphidLexerTests.TokenizeAll(aphidLexer, "?!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?|");
            AphidLexerTests.TokenizeAll(aphidLexer, "?|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize88502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?/");
            AphidLexerTests.TokenizeAll(aphidLexer, "?/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize42402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?.");
            AphidLexerTests.TokenizeAll(aphidLexer, "?.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize19804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("??");
            AphidLexerTests.TokenizeAll(aphidLexer, "??");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("??", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize11301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?]");
            AphidLexerTests.TokenizeAll(aphidLexer, "?]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize04()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?-");
            AphidLexerTests.TokenizeAll(aphidLexer, "?-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize92203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?,");
            AphidLexerTests.TokenizeAll(aphidLexer, "?,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?>");
            AphidLexerTests.TokenizeAll(aphidLexer, "?>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize9402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?)");
            AphidLexerTests.TokenizeAll(aphidLexer, "?)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize83202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?\\");
            AphidLexerTests.TokenizeAll(aphidLexer, "?\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize67503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?*");
            AphidLexerTests.TokenizeAll(aphidLexer, "?*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?<");
            AphidLexerTests.TokenizeAll(aphidLexer, "?<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize32201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?+");
            AphidLexerTests.TokenizeAll(aphidLexer, "?+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize71702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?^");
            AphidLexerTests.TokenizeAll(aphidLexer, "?^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize99901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?(");
            AphidLexerTests.TokenizeAll(aphidLexer, "?(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize3701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?=");
            AphidLexerTests.TokenizeAll(aphidLexer, "?=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize23103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?\"");
            AphidLexerTests.TokenizeAll(aphidLexer, "?\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize49302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?#");
            AphidLexerTests.TokenizeAll(aphidLexer, "?#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize95903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?_");
            AphidLexerTests.TokenizeAll(aphidLexer, "?_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize72801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?;");
            AphidLexerTests.TokenizeAll(aphidLexer, "?;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize28801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?$");
            AphidLexerTests.TokenizeAll(aphidLexer, "?$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize644()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize90101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!&");
            AphidLexerTests.TokenizeAll(aphidLexer, "!&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize50402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`&");
            AphidLexerTests.TokenizeAll(aphidLexer, "`&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize3405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|&");
            AphidLexerTests.TokenizeAll(aphidLexer, "|&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize79903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&&");
            AphidLexerTests.TokenizeAll(aphidLexer, "&&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize80502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("q");
            AphidLexerTests.TokenizeAll(aphidLexer, "q");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("q", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize19101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?&");
            AphidLexerTests.TokenizeAll(aphidLexer, "?&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize27805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%&");
            AphidLexerTests.TokenizeAll(aphidLexer, "%&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize66201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d");
            AphidLexerTests.TokenizeAll(aphidLexer, "d");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("d", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize90602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "d\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("d\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize93301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d0");
            AphidLexerTests.TokenizeAll(aphidLexer, "d0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("d0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize18604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("dA");
            AphidLexerTests.TokenizeAll(aphidLexer, "dA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("dA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize13601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d<");
            AphidLexerTests.TokenizeAll(aphidLexer, "d<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("d<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize85001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("do");
            AphidLexerTests.TokenizeAll(aphidLexer, "do");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("do", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize90()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d[");
            AphidLexerTests.TokenizeAll(aphidLexer, "d[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("d[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize20902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("de");
            AphidLexerTests.TokenizeAll(aphidLexer, "de");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("de", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize23701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("de\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "de\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("de\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize36001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("de0");
            AphidLexerTests.TokenizeAll(aphidLexer, "de0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("de0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize47901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deA");
            AphidLexerTests.TokenizeAll(aphidLexer, "deA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("deA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize21403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("da");
            AphidLexerTests.TokenizeAll(aphidLexer, "da");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("da", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize94201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("def");
            AphidLexerTests.TokenizeAll(aphidLexer, "def");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("def", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d{");
            AphidLexerTests.TokenizeAll(aphidLexer, "d{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("d{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize51101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("de[");
            AphidLexerTests.TokenizeAll(aphidLexer, "de[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("de[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize53604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defb");
            AphidLexerTests.TokenizeAll(aphidLexer, "defb");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defb", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize47602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("def{");
            AphidLexerTests.TokenizeAll(aphidLexer, "def{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("def{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize84601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defA");
            AphidLexerTests.TokenizeAll(aphidLexer, "defA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d");
            AphidLexerTests.TokenizeAll(aphidLexer, "d");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("d", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize95601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("def");
            AphidLexerTests.TokenizeAll(aphidLexer, "def");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("def", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize46101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("del");
            AphidLexerTests.TokenizeAll(aphidLexer, "del");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("del", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize32902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defa");
            AphidLexerTests.TokenizeAll(aphidLexer, "defa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize10505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("dela");
            AphidLexerTests.TokenizeAll(aphidLexer, "dela");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("dela", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize83102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("del{");
            AphidLexerTests.TokenizeAll(aphidLexer, "del{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("del{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize7703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("del");
            AphidLexerTests.TokenizeAll(aphidLexer, "del");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("del", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize41602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("def0");
            AphidLexerTests.TokenizeAll(aphidLexer, "def0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("def0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize23803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defau");
            AphidLexerTests.TokenizeAll(aphidLexer, "defau");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defau", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delA");
            AphidLexerTests.TokenizeAll(aphidLexer, "delA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("delA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize22702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("dea");
            AphidLexerTests.TokenizeAll(aphidLexer, "dea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("dea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize33701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("dele");
            AphidLexerTests.TokenizeAll(aphidLexer, "dele");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("dele", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize10506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("de{");
            AphidLexerTests.TokenizeAll(aphidLexer, "de{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("de{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize83304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delea");
            AphidLexerTests.TokenizeAll(aphidLexer, "delea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("delea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize925()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "defaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize21703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("del0");
            AphidLexerTests.TokenizeAll(aphidLexer, "del0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("del0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize8001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("de");
            AphidLexerTests.TokenizeAll(aphidLexer, "de");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("de", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize98201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defi");
            AphidLexerTests.TokenizeAll(aphidLexer, "defi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize4701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delet");
            AphidLexerTests.TokenizeAll(aphidLexer, "delet");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("delet", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize45604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defin");
            AphidLexerTests.TokenizeAll(aphidLexer, "defin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delete");
            AphidLexerTests.TokenizeAll(aphidLexer, "delete");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("delete", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize75703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defia");
            AphidLexerTests.TokenizeAll(aphidLexer, "defia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize48902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`%");
            AphidLexerTests.TokenizeAll(aphidLexer, "`%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize60901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=%");
            AphidLexerTests.TokenizeAll(aphidLexer, "=%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#%");
            AphidLexerTests.TokenizeAll(aphidLexer, "#%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize91402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?%");
            AphidLexerTests.TokenizeAll(aphidLexer, "?%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize95301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|%");
            AphidLexerTests.TokenizeAll(aphidLexer, "|%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">%");
            AphidLexerTests.TokenizeAll(aphidLexer, ">%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!%");
            AphidLexerTests.TokenizeAll(aphidLexer, "!%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize587()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize51901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&%");
            AphidLexerTests.TokenizeAll(aphidLexer, "&%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize9301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%%");
            AphidLexerTests.TokenizeAll(aphidLexer, "%%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(":\\");
            AphidLexerTests.TokenizeAll(aphidLexer, ":\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(":\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("|\'");
            AphidLexerTests.TokenizeAll(aphidLexer, "|\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("|\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize39502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(">\'");
            AphidLexerTests.TokenizeAll(aphidLexer, ">\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(">\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize56603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("!\'");
            AphidLexerTests.TokenizeAll(aphidLexer, "!\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("!\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize88401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize73003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("?\'");
            AphidLexerTests.TokenizeAll(aphidLexer, "?\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("?\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize4906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%\'");
            AphidLexerTests.TokenizeAll(aphidLexer, "%\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize71801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("#\'");
            AphidLexerTests.TokenizeAll(aphidLexer, "#\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("#\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize11002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("`\'");
            AphidLexerTests.TokenizeAll(aphidLexer, "`\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("`\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("c");
            AphidLexerTests.TokenizeAll(aphidLexer, "c");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("c", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize653()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("c\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "c\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("c\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize877()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cA");
            AphidLexerTests.TokenizeAll(aphidLexer, "cA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize72701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cb");
            AphidLexerTests.TokenizeAll(aphidLexer, "cb");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cb", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize698()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ca");
            AphidLexerTests.TokenizeAll(aphidLexer, "ca");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ca\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "ca\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ca\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize920()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("c[");
            AphidLexerTests.TokenizeAll(aphidLexer, "c[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("c[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize99602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("co");
            AphidLexerTests.TokenizeAll(aphidLexer, "co");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("co", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize54601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize900()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("c0");
            AphidLexerTests.TokenizeAll(aphidLexer, "c0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("c0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize11302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("co\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "co\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("co\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize92501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("c{");
            AphidLexerTests.TokenizeAll(aphidLexer, "c{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("c{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize96404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("caA");
            AphidLexerTests.TokenizeAll(aphidLexer, "caA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("caA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("caa");
            AphidLexerTests.TokenizeAll(aphidLexer, "caa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("caa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize3702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("coa");
            AphidLexerTests.TokenizeAll(aphidLexer, "coa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("coa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize94001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("c");
            AphidLexerTests.TokenizeAll(aphidLexer, "c");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("c", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("co{");
            AphidLexerTests.TokenizeAll(aphidLexer, "co{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("co{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("coý");
            AphidLexerTests.TokenizeAll(aphidLexer, "coý");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("coý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize39402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ca{");
            AphidLexerTests.TokenizeAll(aphidLexer, "ca{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ca{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize731()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("caý");
            AphidLexerTests.TokenizeAll(aphidLexer, "caý");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("caý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("con");
            AphidLexerTests.TokenizeAll(aphidLexer, "con");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("con", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("co0");
            AphidLexerTests.TokenizeAll(aphidLexer, "co0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("co0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize639()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("con0");
            AphidLexerTests.TokenizeAll(aphidLexer, "con0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("con0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize74101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ca0");
            AphidLexerTests.TokenizeAll(aphidLexer, "ca0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ca0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize49404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("coA");
            AphidLexerTests.TokenizeAll(aphidLexer, "coA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("coA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conA");
            AphidLexerTests.TokenizeAll(aphidLexer, "conA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("conA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize431()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("con[");
            AphidLexerTests.TokenizeAll(aphidLexer, "con[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("con[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize40601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cona");
            AphidLexerTests.TokenizeAll(aphidLexer, "cona");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cona", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize73202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cont");
            AphidLexerTests.TokenizeAll(aphidLexer, "cont");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cont", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize783()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("con{");
            AphidLexerTests.TokenizeAll(aphidLexer, "con{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("con{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize365()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conta");
            AphidLexerTests.TokenizeAll(aphidLexer, "conta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("conta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize945()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conti");
            AphidLexerTests.TokenizeAll(aphidLexer, "conti");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("conti", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize497()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cata");
            AphidLexerTests.TokenizeAll(aphidLexer, "cata");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cata", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize78()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catc");
            AphidLexerTests.TokenizeAll(aphidLexer, "catc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize74802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat0");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize33801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize46804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize289()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catA");
            AphidLexerTests.TokenizeAll(aphidLexer, "catA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize90603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("con");
            AphidLexerTests.TokenizeAll(aphidLexer, "con");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("con", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize358()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catch");
            AphidLexerTests.TokenizeAll(aphidLexer, "catch");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize83305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catca");
            AphidLexerTests.TokenizeAll(aphidLexer, "catca");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("=\'");
            AphidLexerTests.TokenizeAll(aphidLexer, "=\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("=\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize22301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("&\'");
            AphidLexerTests.TokenizeAll(aphidLexer, "&\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("&\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize42802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("s");
            AphidLexerTests.TokenizeAll(aphidLexer, "s");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("s", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize60502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("s\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "s\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("s\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize834()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sA");
            AphidLexerTests.TokenizeAll(aphidLexer, "sA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("sA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize950()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sa");
            AphidLexerTests.TokenizeAll(aphidLexer, "sa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("sa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize627()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("s{");
            AphidLexerTests.TokenizeAll(aphidLexer, "s{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("s{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("s0");
            AphidLexerTests.TokenizeAll(aphidLexer, "s0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("s0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize655()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sw");
            AphidLexerTests.TokenizeAll(aphidLexer, "sw");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("sw", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize30602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("s");
            AphidLexerTests.TokenizeAll(aphidLexer, "s");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("s", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize86205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sw\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "sw\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("sw\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize548()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sw0");
            AphidLexerTests.TokenizeAll(aphidLexer, "sw0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("sw0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize85()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swa");
            AphidLexerTests.TokenizeAll(aphidLexer, "swa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swA");
            AphidLexerTests.TokenizeAll(aphidLexer, "swA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize331()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sw{");
            AphidLexerTests.TokenizeAll(aphidLexer, "sw{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("sw{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize883()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swý");
            AphidLexerTests.TokenizeAll(aphidLexer, "swý");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize69701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swi");
            AphidLexerTests.TokenizeAll(aphidLexer, "swi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize840()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swia");
            AphidLexerTests.TokenizeAll(aphidLexer, "swia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize23()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swi{");
            AphidLexerTests.TokenizeAll(aphidLexer, "swi{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swi{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize56002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swi0");
            AphidLexerTests.TokenizeAll(aphidLexer, "swi0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swi0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize33301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swit");
            AphidLexerTests.TokenizeAll(aphidLexer, "swit");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swit", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize73203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switc");
            AphidLexerTests.TokenizeAll(aphidLexer, "switc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("switc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize392()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swi");
            AphidLexerTests.TokenizeAll(aphidLexer, "swi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize819()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swiA");
            AphidLexerTests.TokenizeAll(aphidLexer, "swiA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize715()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swita");
            AphidLexerTests.TokenizeAll(aphidLexer, "swita");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swita", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize82401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switch");
            AphidLexerTests.TokenizeAll(aphidLexer, "switch");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("switch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize11503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize79505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("e");
            AphidLexerTests.TokenizeAll(aphidLexer, "e");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("e", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize43301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("e\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "e\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("e\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize67504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("e0");
            AphidLexerTests.TokenizeAll(aphidLexer, "e0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("e0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize93801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("el");
            AphidLexerTests.TokenizeAll(aphidLexer, "el");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("el", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize47603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("el\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "el\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("el\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("eA");
            AphidLexerTests.TokenizeAll(aphidLexer, "eA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("eA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("e[");
            AphidLexerTests.TokenizeAll(aphidLexer, "e[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("e[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ea");
            AphidLexerTests.TokenizeAll(aphidLexer, "ea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize67903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elA");
            AphidLexerTests.TokenizeAll(aphidLexer, "elA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("elA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize93706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("els");
            AphidLexerTests.TokenizeAll(aphidLexer, "els");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("els", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize33302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("el[");
            AphidLexerTests.TokenizeAll(aphidLexer, "el[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("el[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize40801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ela");
            AphidLexerTests.TokenizeAll(aphidLexer, "ela");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ela", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("el0");
            AphidLexerTests.TokenizeAll(aphidLexer, "el0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("el0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ex");
            AphidLexerTests.TokenizeAll(aphidLexer, "ex");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ex", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize80601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("e{");
            AphidLexerTests.TokenizeAll(aphidLexer, "e{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("e{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize24002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ex\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "ex\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ex\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize24504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exa");
            AphidLexerTests.TokenizeAll(aphidLexer, "exa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ex0");
            AphidLexerTests.TokenizeAll(aphidLexer, "ex0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ex0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize43402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("el{");
            AphidLexerTests.TokenizeAll(aphidLexer, "el{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("el{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize45703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("e");
            AphidLexerTests.TokenizeAll(aphidLexer, "e");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("e", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize7203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("else");
            AphidLexerTests.TokenizeAll(aphidLexer, "else");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("else", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elý");
            AphidLexerTests.TokenizeAll(aphidLexer, "elý");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("elý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize24103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("els0");
            AphidLexerTests.TokenizeAll(aphidLexer, "els0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("els0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize47001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elsa");
            AphidLexerTests.TokenizeAll(aphidLexer, "elsa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("elsa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ex<");
            AphidLexerTests.TokenizeAll(aphidLexer, "ex<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ex<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("els{");
            AphidLexerTests.TokenizeAll(aphidLexer, "els{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("els{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize28601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext");
            AphidLexerTests.TokenizeAll(aphidLexer, "ext");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ext", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize88802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elsA");
            AphidLexerTests.TokenizeAll(aphidLexer, "elsA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("elsA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize53302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exA");
            AphidLexerTests.TokenizeAll(aphidLexer, "exA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize95904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exta");
            AphidLexerTests.TokenizeAll(aphidLexer, "exta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize18402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext0");
            AphidLexerTests.TokenizeAll(aphidLexer, "ext0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ext0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize51102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext{");
            AphidLexerTests.TokenizeAll(aphidLexer, "ext{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ext{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize72201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext");
            AphidLexerTests.TokenizeAll(aphidLexer, "ext");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ext", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize11201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exte");
            AphidLexerTests.TokenizeAll(aphidLexer, "exte");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exte", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize20502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("els");
            AphidLexerTests.TokenizeAll(aphidLexer, "els");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("els", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize42403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exten");
            AphidLexerTests.TokenizeAll(aphidLexer, "exten");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exten", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize96102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extA");
            AphidLexerTests.TokenizeAll(aphidLexer, "extA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("extA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize18605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extea");
            AphidLexerTests.TokenizeAll(aphidLexer, "extea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("extea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize97301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ex{");
            AphidLexerTests.TokenizeAll(aphidLexer, "ex{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ex{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize932()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exý");
            AphidLexerTests.TokenizeAll(aphidLexer, "exý");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize94901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extend");
            AphidLexerTests.TokenizeAll(aphidLexer, "extend");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("extend", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize66501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize18202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("f");
            AphidLexerTests.TokenizeAll(aphidLexer, "f");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("f", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("f\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "f\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("f\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fi");
            AphidLexerTests.TokenizeAll(aphidLexer, "fi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fo");
            AphidLexerTests.TokenizeAll(aphidLexer, "fo");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fo", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize57502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fo\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "fo\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fo\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize30704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fi\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "fi\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize54904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("f0");
            AphidLexerTests.TokenizeAll(aphidLexer, "f0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("f0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize200()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fiA");
            AphidLexerTests.TokenizeAll(aphidLexer, "fiA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize42803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("foA");
            AphidLexerTests.TokenizeAll(aphidLexer, "foA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("foA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize44002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fin");
            AphidLexerTests.TokenizeAll(aphidLexer, "fin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize52304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("for");
            AphidLexerTests.TokenizeAll(aphidLexer, "for");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("for", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize98403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("foa");
            AphidLexerTests.TokenizeAll(aphidLexer, "foa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("foa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize45201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fo0");
            AphidLexerTests.TokenizeAll(aphidLexer, "fo0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fo0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize22403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fia");
            AphidLexerTests.TokenizeAll(aphidLexer, "fia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finb");
            AphidLexerTests.TokenizeAll(aphidLexer, "finb");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("finb", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize72702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fA");
            AphidLexerTests.TokenizeAll(aphidLexer, "fA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize37401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finA");
            AphidLexerTests.TokenizeAll(aphidLexer, "finA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("finA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize57()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fo{");
            AphidLexerTests.TokenizeAll(aphidLexer, "fo{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fo{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize72301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fin0");
            AphidLexerTests.TokenizeAll(aphidLexer, "fin0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fin0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize171()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fi0");
            AphidLexerTests.TokenizeAll(aphidLexer, "fi0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fi0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize43902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fi{");
            AphidLexerTests.TokenizeAll(aphidLexer, "fi{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fi{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize91403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fin[");
            AphidLexerTests.TokenizeAll(aphidLexer, "fin[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fin[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fa");
            AphidLexerTests.TokenizeAll(aphidLexer, "fa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fina");
            AphidLexerTests.TokenizeAll(aphidLexer, "fina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fa\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "fa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize66()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("f[");
            AphidLexerTests.TokenizeAll(aphidLexer, "f[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("f[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize674()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fb");
            AphidLexerTests.TokenizeAll(aphidLexer, "fb");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fb", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize39403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("faa");
            AphidLexerTests.TokenizeAll(aphidLexer, "faa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("faa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize222()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fin{");
            AphidLexerTests.TokenizeAll(aphidLexer, "fin{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fin{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("faA");
            AphidLexerTests.TokenizeAll(aphidLexer, "faA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("faA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize34202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fin");
            AphidLexerTests.TokenizeAll(aphidLexer, "fin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize9101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fa0");
            AphidLexerTests.TokenizeAll(aphidLexer, "fa0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fa0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize755()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fa[");
            AphidLexerTests.TokenizeAll(aphidLexer, "fa[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fa[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize14102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fal");
            AphidLexerTests.TokenizeAll(aphidLexer, "fal");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fal", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize88803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("foý");
            AphidLexerTests.TokenizeAll(aphidLexer, "foý");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("foý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize351()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fa{");
            AphidLexerTests.TokenizeAll(aphidLexer, "fa{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fa{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize36803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "finaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("finaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize161()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("final");
            AphidLexerTests.TokenizeAll(aphidLexer, "final");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("final", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize370()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("faý");
            AphidLexerTests.TokenizeAll(aphidLexer, "faý");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("faý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize776()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("f{");
            AphidLexerTests.TokenizeAll(aphidLexer, "f{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("f{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize4702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falA");
            AphidLexerTests.TokenizeAll(aphidLexer, "falA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("falA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize43302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("f");
            AphidLexerTests.TokenizeAll(aphidLexer, "f");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("f", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize375()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fal[");
            AphidLexerTests.TokenizeAll(aphidLexer, "fal[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fal[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize31402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fiý");
            AphidLexerTests.TokenizeAll(aphidLexer, "fiý");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fiý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize26902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fal0");
            AphidLexerTests.TokenizeAll(aphidLexer, "fal0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fal0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize44302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fala");
            AphidLexerTests.TokenizeAll(aphidLexer, "fala");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fala", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize98202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fals");
            AphidLexerTests.TokenizeAll(aphidLexer, "fals");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fals", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize997()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fal{");
            AphidLexerTests.TokenizeAll(aphidLexer, "fal{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fal{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize44502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("false");
            AphidLexerTests.TokenizeAll(aphidLexer, "false");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("false", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize42404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fal");
            AphidLexerTests.TokenizeAll(aphidLexer, "fal");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fal", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize10902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falsa");
            AphidLexerTests.TokenizeAll(aphidLexer, "falsa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("falsa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize582()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(":=");
            AphidLexerTests.TokenizeAll(aphidLexer, ":=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(":=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize875()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<=");
            AphidLexerTests.TokenizeAll(aphidLexer, "<=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize96405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<\"");
            AphidLexerTests.TokenizeAll(aphidLexer, "<\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize97205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize45605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize62301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\:");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize73405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\@");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize24201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\|");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize28301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\~");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize11003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\!");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize26103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\`");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize11601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\/");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize53001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\.");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize90405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\?");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize15501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\]");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize99101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\-");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize96504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\,");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize19704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\>");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize83203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\)");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize2802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\\\");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize39503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\*");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize42502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\<");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\+");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\(");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize89901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\^");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize22602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\=");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\\"");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize46004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\#");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\_");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize58001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\;");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize05()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\$");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize4907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\&");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\%");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\\\'");
            AphidLexerTests.TokenizeAll(aphidLexer, "\\\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\\\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\t");
            AphidLexerTests.TokenizeAll(aphidLexer, "\t");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\t", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(":\"");
            AphidLexerTests.TokenizeAll(aphidLexer, ":\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(":\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize2602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(":_");
            AphidLexerTests.TokenizeAll(aphidLexer, ":_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(":_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize97001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("t");
            AphidLexerTests.TokenizeAll(aphidLexer, "t");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("t", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize76002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("t\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "t\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("t\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize24301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tr");
            AphidLexerTests.TokenizeAll(aphidLexer, "tr");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tr", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize69201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("t0");
            AphidLexerTests.TokenizeAll(aphidLexer, "t0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("t0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize27904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tr\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "tr\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tr\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize42701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("try");
            AphidLexerTests.TokenizeAll(aphidLexer, "try");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("try", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ta");
            AphidLexerTests.TokenizeAll(aphidLexer, "ta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize9604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("t{");
            AphidLexerTests.TokenizeAll(aphidLexer, "t{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("t{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize96505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tr0");
            AphidLexerTests.TokenizeAll(aphidLexer, "tr0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tr0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize43403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("trA");
            AphidLexerTests.TokenizeAll(aphidLexer, "trA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("trA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize55401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tA");
            AphidLexerTests.TokenizeAll(aphidLexer, "tA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize27401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tra");
            AphidLexerTests.TokenizeAll(aphidLexer, "tra");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize20903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tru");
            AphidLexerTests.TokenizeAll(aphidLexer, "tru");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tru", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize15002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tr[");
            AphidLexerTests.TokenizeAll(aphidLexer, "tr[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tr[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize50702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("th");
            AphidLexerTests.TokenizeAll(aphidLexer, "th");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("th", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize75401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("t");
            AphidLexerTests.TokenizeAll(aphidLexer, "t");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("t", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize92601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("true");
            AphidLexerTests.TokenizeAll(aphidLexer, "true");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("true", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize76901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tru0");
            AphidLexerTests.TokenizeAll(aphidLexer, "tru0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tru0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize49303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("trua");
            AphidLexerTests.TokenizeAll(aphidLexer, "trua");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("trua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize36901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tru{");
            AphidLexerTests.TokenizeAll(aphidLexer, "tru{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tru{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize93103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tr{");
            AphidLexerTests.TokenizeAll(aphidLexer, "tr{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tr{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize55402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("truA");
            AphidLexerTests.TokenizeAll(aphidLexer, "truA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("truA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize10507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tru");
            AphidLexerTests.TokenizeAll(aphidLexer, "tru");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tru", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize89201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("th\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "th\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("th\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize71703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thA");
            AphidLexerTests.TokenizeAll(aphidLexer, "thA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize60601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thr");
            AphidLexerTests.TokenizeAll(aphidLexer, "thr");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thr", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize87103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("th0");
            AphidLexerTests.TokenizeAll(aphidLexer, "th0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("th0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize7301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tha");
            AphidLexerTests.TokenizeAll(aphidLexer, "tha");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize45202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tr");
            AphidLexerTests.TokenizeAll(aphidLexer, "tr");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tr", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize41801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("th{");
            AphidLexerTests.TokenizeAll(aphidLexer, "th{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("th{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize4202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thra");
            AphidLexerTests.TokenizeAll(aphidLexer, "thra");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thrA");
            AphidLexerTests.TokenizeAll(aphidLexer, "thrA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thrA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thi");
            AphidLexerTests.TokenizeAll(aphidLexer, "thi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize94301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thro");
            AphidLexerTests.TokenizeAll(aphidLexer, "thro");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thro", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize91102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("th");
            AphidLexerTests.TokenizeAll(aphidLexer, "th");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("th", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize87701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thr[");
            AphidLexerTests.TokenizeAll(aphidLexer, "thr[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thr[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize74102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thia");
            AphidLexerTests.TokenizeAll(aphidLexer, "thia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize73903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thr0");
            AphidLexerTests.TokenizeAll(aphidLexer, "thr0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thr0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize55702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("this");
            AphidLexerTests.TokenizeAll(aphidLexer, "this");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("this", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize30304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thi{");
            AphidLexerTests.TokenizeAll(aphidLexer, "thi{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thi{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thiA");
            AphidLexerTests.TokenizeAll(aphidLexer, "thiA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize17303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thr{");
            AphidLexerTests.TokenizeAll(aphidLexer, "thr{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thr{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize24505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thr");
            AphidLexerTests.TokenizeAll(aphidLexer, "thr");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thr", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize15602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thi");
            AphidLexerTests.TokenizeAll(aphidLexer, "thi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize4301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thi0");
            AphidLexerTests.TokenizeAll(aphidLexer, "thi0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thi0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize474()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throa");
            AphidLexerTests.TokenizeAll(aphidLexer, "throa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("throa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throw");
            AphidLexerTests.TokenizeAll(aphidLexer, "throw");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("throw", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize84()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(":#");
            AphidLexerTests.TokenizeAll(aphidLexer, ":#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(":#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize4203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<#");
            AphidLexerTests.TokenizeAll(aphidLexer, "<#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize541()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(":;");
            AphidLexerTests.TokenizeAll(aphidLexer, ":;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(":;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize90604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<;");
            AphidLexerTests.TokenizeAll(aphidLexer, "<;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize634()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("g");
            AphidLexerTests.TokenizeAll(aphidLexer, "g");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("g", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize72302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(":$");
            AphidLexerTests.TokenizeAll(aphidLexer, ":$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(":$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize76204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<$");
            AphidLexerTests.TokenizeAll(aphidLexer, "<$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize1001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\n");
            AphidLexerTests.TokenizeAll(aphidLexer, "\n");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\n", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize8101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize752()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<&");
            AphidLexerTests.TokenizeAll(aphidLexer, "<&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize97()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("v");
            AphidLexerTests.TokenizeAll(aphidLexer, "v");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("v", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize459()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(":&");
            AphidLexerTests.TokenizeAll(aphidLexer, ":&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(":&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize18606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("u");
            AphidLexerTests.TokenizeAll(aphidLexer, "u");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("u", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize75601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("u\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "u\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("u\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize75101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ua");
            AphidLexerTests.TokenizeAll(aphidLexer, "ua");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("us");
            AphidLexerTests.TokenizeAll(aphidLexer, "us");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("us", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize53303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("u{");
            AphidLexerTests.TokenizeAll(aphidLexer, "u{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("u{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize82301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("u0");
            AphidLexerTests.TokenizeAll(aphidLexer, "u0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("u0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize4601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("uA");
            AphidLexerTests.TokenizeAll(aphidLexer, "uA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("uA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize7601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("us\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "us\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("us\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize47301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usi");
            AphidLexerTests.TokenizeAll(aphidLexer, "usi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize36804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("us0");
            AphidLexerTests.TokenizeAll(aphidLexer, "us0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("us0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize82602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usA");
            AphidLexerTests.TokenizeAll(aphidLexer, "usA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize252()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("us<");
            AphidLexerTests.TokenizeAll(aphidLexer, "us<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("us<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize262()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usiA");
            AphidLexerTests.TokenizeAll(aphidLexer, "usiA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("u");
            AphidLexerTests.TokenizeAll(aphidLexer, "u");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("u", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize64703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usa");
            AphidLexerTests.TokenizeAll(aphidLexer, "usa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize79904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usia");
            AphidLexerTests.TokenizeAll(aphidLexer, "usia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize18403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("us{");
            AphidLexerTests.TokenizeAll(aphidLexer, "us{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("us{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize48903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usý");
            AphidLexerTests.TokenizeAll(aphidLexer, "usý");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize8401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usi0");
            AphidLexerTests.TokenizeAll(aphidLexer, "usi0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usi0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize81602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usi[");
            AphidLexerTests.TokenizeAll(aphidLexer, "usi[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usi[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize71501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usi{");
            AphidLexerTests.TokenizeAll(aphidLexer, "usi{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usi{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize33002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usin");
            AphidLexerTests.TokenizeAll(aphidLexer, "usin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize166()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usi");
            AphidLexerTests.TokenizeAll(aphidLexer, "usi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize25501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("using");
            AphidLexerTests.TokenizeAll(aphidLexer, "using");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("using", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize44102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usina");
            AphidLexerTests.TokenizeAll(aphidLexer, "usina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize54602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<%");
            AphidLexerTests.TokenizeAll(aphidLexer, "<%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize863()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(":%");
            AphidLexerTests.TokenizeAll(aphidLexer, ":%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(":%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize714()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\f");
            AphidLexerTests.TokenizeAll(aphidLexer, "\f");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\f", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize51502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(":\'");
            AphidLexerTests.TokenizeAll(aphidLexer, ":\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(":\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize59601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l");
            AphidLexerTests.TokenizeAll(aphidLexer, "l");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("l", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize91404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "l\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("l\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize54905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l0");
            AphidLexerTests.TokenizeAll(aphidLexer, "l0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("l0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize21902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lo");
            AphidLexerTests.TokenizeAll(aphidLexer, "lo");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lo", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize4102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l<");
            AphidLexerTests.TokenizeAll(aphidLexer, "l<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("l<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize89701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lo\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "lo\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lo\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize91103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loa");
            AphidLexerTests.TokenizeAll(aphidLexer, "loa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize25103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lob");
            AphidLexerTests.TokenizeAll(aphidLexer, "lob");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lob", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loA");
            AphidLexerTests.TokenizeAll(aphidLexer, "loA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize52601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lo{");
            AphidLexerTests.TokenizeAll(aphidLexer, "lo{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lo{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loc");
            AphidLexerTests.TokenizeAll(aphidLexer, "loc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize56604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lA");
            AphidLexerTests.TokenizeAll(aphidLexer, "lA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize91209()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lo");
            AphidLexerTests.TokenizeAll(aphidLexer, "lo");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lo", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize69702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loca");
            AphidLexerTests.TokenizeAll(aphidLexer, "loca");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize220()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("locA");
            AphidLexerTests.TokenizeAll(aphidLexer, "locA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("locA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize1402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loc[");
            AphidLexerTests.TokenizeAll(aphidLexer, "loc[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loc[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize88003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loc0");
            AphidLexerTests.TokenizeAll(aphidLexer, "loc0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loc0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize52305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lo0");
            AphidLexerTests.TokenizeAll(aphidLexer, "lo0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lo0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize88402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loc{");
            AphidLexerTests.TokenizeAll(aphidLexer, "loc{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loc{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize10802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loaA");
            AphidLexerTests.TokenizeAll(aphidLexer, "loaA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize52202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("la");
            AphidLexerTests.TokenizeAll(aphidLexer, "la");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("la", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize16002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loa[");
            AphidLexerTests.TokenizeAll(aphidLexer, "loa[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loa[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize14402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "loaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize92701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loa{");
            AphidLexerTests.TokenizeAll(aphidLexer, "loa{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loa{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize36301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l[");
            AphidLexerTests.TokenizeAll(aphidLexer, "l[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("l[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize50403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l{");
            AphidLexerTests.TokenizeAll(aphidLexer, "l{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("l{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize77201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loa");
            AphidLexerTests.TokenizeAll(aphidLexer, "loa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize99603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l");
            AphidLexerTests.TokenizeAll(aphidLexer, "l");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("l", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize59907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("load");
            AphidLexerTests.TokenizeAll(aphidLexer, "load");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("load", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize10601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loc");
            AphidLexerTests.TokenizeAll(aphidLexer, "loc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize98001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loa0");
            AphidLexerTests.TokenizeAll(aphidLexer, "loa0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loa0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize96002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lock");
            AphidLexerTests.TokenizeAll(aphidLexer, "lock");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lock", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize67802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("<\'");
            AphidLexerTests.TokenizeAll(aphidLexer, "<\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("<\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize766()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\'\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "\'\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\'\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize586()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\'\'");
            AphidLexerTests.TokenizeAll(aphidLexer, "\'\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\'\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize16204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("k");
            AphidLexerTests.TokenizeAll(aphidLexer, "k");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("k", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize913()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\r");
            AphidLexerTests.TokenizeAll(aphidLexer, "\r");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\r", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize75102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w");
            AphidLexerTests.TokenizeAll(aphidLexer, "w");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("w", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "w\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("w\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize378()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wa");
            AphidLexerTests.TokenizeAll(aphidLexer, "wa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("wa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize59702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w{");
            AphidLexerTests.TokenizeAll(aphidLexer, "w{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("w{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize93902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wh");
            AphidLexerTests.TokenizeAll(aphidLexer, "wh");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("wh", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize24404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wh\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "wh\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("wh\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize45102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w");
            AphidLexerTests.TokenizeAll(aphidLexer, "w");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("w", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize744()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whi");
            AphidLexerTests.TokenizeAll(aphidLexer, "whi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize92204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w0");
            AphidLexerTests.TokenizeAll(aphidLexer, "w0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("w0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize36805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whi0");
            AphidLexerTests.TokenizeAll(aphidLexer, "whi0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whi0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize11702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whA");
            AphidLexerTests.TokenizeAll(aphidLexer, "whA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize74701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whil");
            AphidLexerTests.TokenizeAll(aphidLexer, "whil");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whil", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize68902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wha");
            AphidLexerTests.TokenizeAll(aphidLexer, "wha");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("wha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize34203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wh[");
            AphidLexerTests.TokenizeAll(aphidLexer, "wh[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("wh[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whia");
            AphidLexerTests.TokenizeAll(aphidLexer, "whia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize555()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wA");
            AphidLexerTests.TokenizeAll(aphidLexer, "wA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("wA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize17101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whiA");
            AphidLexerTests.TokenizeAll(aphidLexer, "whiA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whi[");
            AphidLexerTests.TokenizeAll(aphidLexer, "whi[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whi[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize13202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wh0");
            AphidLexerTests.TokenizeAll(aphidLexer, "wh0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("wh0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize64401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wh{");
            AphidLexerTests.TokenizeAll(aphidLexer, "wh{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("wh{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize51503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whý");
            AphidLexerTests.TokenizeAll(aphidLexer, "whý");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize30603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whi{");
            AphidLexerTests.TokenizeAll(aphidLexer, "whi{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whi{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("while");
            AphidLexerTests.TokenizeAll(aphidLexer, "while");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("while", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize45()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whila");
            AphidLexerTests.TokenizeAll(aphidLexer, "whila");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whila", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize59908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whi");
            AphidLexerTests.TokenizeAll(aphidLexer, "whi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize1102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("n");
            AphidLexerTests.TokenizeAll(aphidLexer, "n");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("n", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("n\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "n\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("n\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize124()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("na");
            AphidLexerTests.TokenizeAll(aphidLexer, "na");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("na", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize53903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ne");
            AphidLexerTests.TokenizeAll(aphidLexer, "ne");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ne", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize518()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nA");
            AphidLexerTests.TokenizeAll(aphidLexer, "nA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("n[");
            AphidLexerTests.TokenizeAll(aphidLexer, "n[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("n[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize377()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("n{");
            AphidLexerTests.TokenizeAll(aphidLexer, "n{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("n{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("n");
            AphidLexerTests.TokenizeAll(aphidLexer, "n");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("n", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize13502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ne\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "ne\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ne\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("neA");
            AphidLexerTests.TokenizeAll(aphidLexer, "neA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("neA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize266()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("new");
            AphidLexerTests.TokenizeAll(aphidLexer, "new");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("new", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize27201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ne[");
            AphidLexerTests.TokenizeAll(aphidLexer, "ne[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ne[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize94402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ne0");
            AphidLexerTests.TokenizeAll(aphidLexer, "ne0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ne0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize26601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu");
            AphidLexerTests.TokenizeAll(aphidLexer, "nu");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize152()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "nu\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nu\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize37301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nuA");
            AphidLexerTests.TokenizeAll(aphidLexer, "nuA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nuA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize40802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu[");
            AphidLexerTests.TokenizeAll(aphidLexer, "nu[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nu[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize33802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("n0");
            AphidLexerTests.TokenizeAll(aphidLexer, "n0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("n0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize53904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu0");
            AphidLexerTests.TokenizeAll(aphidLexer, "nu0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nu0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize90406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nul");
            AphidLexerTests.TokenizeAll(aphidLexer, "nul");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nul", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize64402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nea");
            AphidLexerTests.TokenizeAll(aphidLexer, "nea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize309()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ne{");
            AphidLexerTests.TokenizeAll(aphidLexer, "ne{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ne{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize88301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("neý");
            AphidLexerTests.TokenizeAll(aphidLexer, "neý");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("neý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize9302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nula");
            AphidLexerTests.TokenizeAll(aphidLexer, "nula");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nula", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize64704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nulA");
            AphidLexerTests.TokenizeAll(aphidLexer, "nulA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nulA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nul0");
            AphidLexerTests.TokenizeAll(aphidLexer, "nul0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nul0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize68004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nul[");
            AphidLexerTests.TokenizeAll(aphidLexer, "nul[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nul[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("null");
            AphidLexerTests.TokenizeAll(aphidLexer, "null");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("null", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nul{");
            AphidLexerTests.TokenizeAll(aphidLexer, "nul{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nul{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize7502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nua");
            AphidLexerTests.TokenizeAll(aphidLexer, "nua");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize31102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nul");
            AphidLexerTests.TokenizeAll(aphidLexer, "nul");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nul", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize45901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu{");
            AphidLexerTests.TokenizeAll(aphidLexer, "nu{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nu{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize47604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nuý");
            AphidLexerTests.TokenizeAll(aphidLexer, "nuý");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nuý", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize614()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\v");
            AphidLexerTests.TokenizeAll(aphidLexer, "\v");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\v", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("m");
            AphidLexerTests.TokenizeAll(aphidLexer, "m");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("m", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize55403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize193()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("o");
            AphidLexerTests.TokenizeAll(aphidLexer, "o");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("o", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize49902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize26602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize45902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^");
            AphidLexerTests.TokenizeAll(aphidLexer, "^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize92702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "^\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize640()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^!");
            AphidLexerTests.TokenizeAll(aphidLexer, "^!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize23104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^@");
            AphidLexerTests.TokenizeAll(aphidLexer, "^@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize17102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^`");
            AphidLexerTests.TokenizeAll(aphidLexer, "^`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize42902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^~");
            AphidLexerTests.TokenizeAll(aphidLexer, "^~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize47605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^:");
            AphidLexerTests.TokenizeAll(aphidLexer, "^:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize564()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^|");
            AphidLexerTests.TokenizeAll(aphidLexer, "^|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize52602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^/");
            AphidLexerTests.TokenizeAll(aphidLexer, "^/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize313()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^.");
            AphidLexerTests.TokenizeAll(aphidLexer, "^.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize59909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^?");
            AphidLexerTests.TokenizeAll(aphidLexer, "^?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize26603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^]");
            AphidLexerTests.TokenizeAll(aphidLexer, "^]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^-");
            AphidLexerTests.TokenizeAll(aphidLexer, "^-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize88804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^,");
            AphidLexerTests.TokenizeAll(aphidLexer, "^,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^>");
            AphidLexerTests.TokenizeAll(aphidLexer, "^>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize11004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^)");
            AphidLexerTests.TokenizeAll(aphidLexer, "^)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^\\");
            AphidLexerTests.TokenizeAll(aphidLexer, "^\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize874()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^*");
            AphidLexerTests.TokenizeAll(aphidLexer, "^*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize72703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^<");
            AphidLexerTests.TokenizeAll(aphidLexer, "^<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize80602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^+");
            AphidLexerTests.TokenizeAll(aphidLexer, "^+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize749()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^^");
            AphidLexerTests.TokenizeAll(aphidLexer, "^^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^(");
            AphidLexerTests.TokenizeAll(aphidLexer, "^(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize827()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^=");
            AphidLexerTests.TokenizeAll(aphidLexer, "^=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize87()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^\"");
            AphidLexerTests.TokenizeAll(aphidLexer, "^\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize76003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^#");
            AphidLexerTests.TokenizeAll(aphidLexer, "^#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize73904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^_");
            AphidLexerTests.TokenizeAll(aphidLexer, "^_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize794()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^;");
            AphidLexerTests.TokenizeAll(aphidLexer, "^;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^$");
            AphidLexerTests.TokenizeAll(aphidLexer, "^$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize53605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^&");
            AphidLexerTests.TokenizeAll(aphidLexer, "^&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize88302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^%");
            AphidLexerTests.TokenizeAll(aphidLexer, "^%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize2803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("^\'");
            AphidLexerTests.TokenizeAll(aphidLexer, "^\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("^\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize17502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize86801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize909()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("");
            AphidLexerTests.TokenizeAll(aphidLexer, "");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~");
            AphidLexerTests.TokenizeAll(aphidLexer, "~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize87303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "~\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~:");
            AphidLexerTests.TokenizeAll(aphidLexer, "~:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize589()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~@");
            AphidLexerTests.TokenizeAll(aphidLexer, "~@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize74005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~|");
            AphidLexerTests.TokenizeAll(aphidLexer, "~|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize40701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~~");
            AphidLexerTests.TokenizeAll(aphidLexer, "~~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize11504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~!");
            AphidLexerTests.TokenizeAll(aphidLexer, "~!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize90407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~`");
            AphidLexerTests.TokenizeAll(aphidLexer, "~`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~/");
            AphidLexerTests.TokenizeAll(aphidLexer, "~/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5309()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~.");
            AphidLexerTests.TokenizeAll(aphidLexer, "~.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize8902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~?");
            AphidLexerTests.TokenizeAll(aphidLexer, "~?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~]");
            AphidLexerTests.TokenizeAll(aphidLexer, "~]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize67601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~-");
            AphidLexerTests.TokenizeAll(aphidLexer, "~-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize17304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~,");
            AphidLexerTests.TokenizeAll(aphidLexer, "~,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize36402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~>");
            AphidLexerTests.TokenizeAll(aphidLexer, "~>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize46805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~)");
            AphidLexerTests.TokenizeAll(aphidLexer, "~)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize145()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~\\");
            AphidLexerTests.TokenizeAll(aphidLexer, "~\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize393()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~*");
            AphidLexerTests.TokenizeAll(aphidLexer, "~*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~<");
            AphidLexerTests.TokenizeAll(aphidLexer, "~<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize53606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~+");
            AphidLexerTests.TokenizeAll(aphidLexer, "~+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize777()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~(");
            AphidLexerTests.TokenizeAll(aphidLexer, "~(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize450()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~^");
            AphidLexerTests.TokenizeAll(aphidLexer, "~^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize57201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~=");
            AphidLexerTests.TokenizeAll(aphidLexer, "~=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize323()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~\"");
            AphidLexerTests.TokenizeAll(aphidLexer, "~\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize9902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~#");
            AphidLexerTests.TokenizeAll(aphidLexer, "~#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize576()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~_");
            AphidLexerTests.TokenizeAll(aphidLexer, "~_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize221()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~;");
            AphidLexerTests.TokenizeAll(aphidLexer, "~;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize122()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~$");
            AphidLexerTests.TokenizeAll(aphidLexer, "~$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize293()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~&");
            AphidLexerTests.TokenizeAll(aphidLexer, "~&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize67904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~%");
            AphidLexerTests.TokenizeAll(aphidLexer, "~%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize13203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("~\'");
            AphidLexerTests.TokenizeAll(aphidLexer, "~\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("~\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*");
            AphidLexerTests.TokenizeAll(aphidLexer, "*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize22703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "*\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize58401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*!");
            AphidLexerTests.TokenizeAll(aphidLexer, "*!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize23001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*@");
            AphidLexerTests.TokenizeAll(aphidLexer, "*@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize69001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*:");
            AphidLexerTests.TokenizeAll(aphidLexer, "*:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*|");
            AphidLexerTests.TokenizeAll(aphidLexer, "*|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*~");
            AphidLexerTests.TokenizeAll(aphidLexer, "*~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize93707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*`");
            AphidLexerTests.TokenizeAll(aphidLexer, "*`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize33901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*/");
            AphidLexerTests.TokenizeAll(aphidLexer, "*/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize9605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*.");
            AphidLexerTests.TokenizeAll(aphidLexer, "*.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize98501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*?");
            AphidLexerTests.TokenizeAll(aphidLexer, "*?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*]");
            AphidLexerTests.TokenizeAll(aphidLexer, "*]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize86501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*-");
            AphidLexerTests.TokenizeAll(aphidLexer, "*-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize58801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*,");
            AphidLexerTests.TokenizeAll(aphidLexer, "*,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize33803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*>");
            AphidLexerTests.TokenizeAll(aphidLexer, "*>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize16003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*)");
            AphidLexerTests.TokenizeAll(aphidLexer, "*)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize46404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*\\");
            AphidLexerTests.TokenizeAll(aphidLexer, "*\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize42301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("**");
            AphidLexerTests.TokenizeAll(aphidLexer, "**");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("**", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize96003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*<");
            AphidLexerTests.TokenizeAll(aphidLexer, "*<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize10701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*+");
            AphidLexerTests.TokenizeAll(aphidLexer, "*+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize50903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*(");
            AphidLexerTests.TokenizeAll(aphidLexer, "*(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize72303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*^");
            AphidLexerTests.TokenizeAll(aphidLexer, "*^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize27905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*=");
            AphidLexerTests.TokenizeAll(aphidLexer, "*=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*\"");
            AphidLexerTests.TokenizeAll(aphidLexer, "*\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize56201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*#");
            AphidLexerTests.TokenizeAll(aphidLexer, "*#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize15603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*_");
            AphidLexerTests.TokenizeAll(aphidLexer, "*_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*;");
            AphidLexerTests.TokenizeAll(aphidLexer, "*;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize39601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*$");
            AphidLexerTests.TokenizeAll(aphidLexer, "*$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize96305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*&");
            AphidLexerTests.TokenizeAll(aphidLexer, "*&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*%");
            AphidLexerTests.TokenizeAll(aphidLexer, "*%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize1601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("*\'");
            AphidLexerTests.TokenizeAll(aphidLexer, "*\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("*\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize55901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".");
            AphidLexerTests.TokenizeAll(aphidLexer, ".");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize32101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".\0");
            AphidLexerTests.TokenizeAll(aphidLexer, ".\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize26003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".@");
            AphidLexerTests.TokenizeAll(aphidLexer, ".@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize8201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".|");
            AphidLexerTests.TokenizeAll(aphidLexer, ".|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize57101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".~");
            AphidLexerTests.TokenizeAll(aphidLexer, ".~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize83501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".:");
            AphidLexerTests.TokenizeAll(aphidLexer, ".:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize95801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".`");
            AphidLexerTests.TokenizeAll(aphidLexer, ".`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize28501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".!");
            AphidLexerTests.TokenizeAll(aphidLexer, ".!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize56301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("./");
            AphidLexerTests.TokenizeAll(aphidLexer, "./");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("./", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize92403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("..");
            AphidLexerTests.TokenizeAll(aphidLexer, "..");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("..", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize97801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".?");
            AphidLexerTests.TokenizeAll(aphidLexer, ".?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize32503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".]");
            AphidLexerTests.TokenizeAll(aphidLexer, ".]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize95905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".-");
            AphidLexerTests.TokenizeAll(aphidLexer, ".-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize14403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".,");
            AphidLexerTests.TokenizeAll(aphidLexer, ".,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".>");
            AphidLexerTests.TokenizeAll(aphidLexer, ".>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize23903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".)");
            AphidLexerTests.TokenizeAll(aphidLexer, ".)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize77001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".\\");
            AphidLexerTests.TokenizeAll(aphidLexer, ".\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize19901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".*");
            AphidLexerTests.TokenizeAll(aphidLexer, ".*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize15302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".<");
            AphidLexerTests.TokenizeAll(aphidLexer, ".<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize66603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".+");
            AphidLexerTests.TokenizeAll(aphidLexer, ".+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".^");
            AphidLexerTests.TokenizeAll(aphidLexer, ".^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize75305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".(");
            AphidLexerTests.TokenizeAll(aphidLexer, ".(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".=");
            AphidLexerTests.TokenizeAll(aphidLexer, ".=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize70001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".\"");
            AphidLexerTests.TokenizeAll(aphidLexer, ".\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize80204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".#");
            AphidLexerTests.TokenizeAll(aphidLexer, ".#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize54906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("._");
            AphidLexerTests.TokenizeAll(aphidLexer, "._");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("._", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize51301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".;");
            AphidLexerTests.TokenizeAll(aphidLexer, ".;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize66401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".$");
            AphidLexerTests.TokenizeAll(aphidLexer, ".$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize87803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".&");
            AphidLexerTests.TokenizeAll(aphidLexer, ".&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize50601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".%");
            AphidLexerTests.TokenizeAll(aphidLexer, ".%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize81301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create(".\'");
            AphidLexerTests.TokenizeAll(aphidLexer, ".\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>(".\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize14604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("}");
            AphidLexerTests.TokenizeAll(aphidLexer, "}");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("}", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize26903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+");
            AphidLexerTests.TokenizeAll(aphidLexer, "+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize53905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "+\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize80205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+!");
            AphidLexerTests.TokenizeAll(aphidLexer, "+!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize96601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+:");
            AphidLexerTests.TokenizeAll(aphidLexer, "+:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize27202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+@");
            AphidLexerTests.TokenizeAll(aphidLexer, "+@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize96203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+`");
            AphidLexerTests.TokenizeAll(aphidLexer, "+`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize19805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+|");
            AphidLexerTests.TokenizeAll(aphidLexer, "+|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize3105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+~");
            AphidLexerTests.TokenizeAll(aphidLexer, "+~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize30305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+/");
            AphidLexerTests.TokenizeAll(aphidLexer, "+/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize17601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+.");
            AphidLexerTests.TokenizeAll(aphidLexer, "+.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize11101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+?");
            AphidLexerTests.TokenizeAll(aphidLexer, "+?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+]");
            AphidLexerTests.TokenizeAll(aphidLexer, "+]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize76205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+-");
            AphidLexerTests.TokenizeAll(aphidLexer, "+-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize52203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+,");
            AphidLexerTests.TokenizeAll(aphidLexer, "+,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize95704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+>");
            AphidLexerTests.TokenizeAll(aphidLexer, "+>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize22404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+)");
            AphidLexerTests.TokenizeAll(aphidLexer, "+)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize14701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+\\");
            AphidLexerTests.TokenizeAll(aphidLexer, "+\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize42601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+*");
            AphidLexerTests.TokenizeAll(aphidLexer, "+*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize82402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+<");
            AphidLexerTests.TokenizeAll(aphidLexer, "+<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize21903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("++");
            AphidLexerTests.TokenizeAll(aphidLexer, "++");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("++", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize60003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+(");
            AphidLexerTests.TokenizeAll(aphidLexer, "+(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize9102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+^");
            AphidLexerTests.TokenizeAll(aphidLexer, "+^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize56605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+=");
            AphidLexerTests.TokenizeAll(aphidLexer, "+=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize37902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+\"");
            AphidLexerTests.TokenizeAll(aphidLexer, "+\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+#");
            AphidLexerTests.TokenizeAll(aphidLexer, "+#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize80403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+_");
            AphidLexerTests.TokenizeAll(aphidLexer, "+_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize83103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+;");
            AphidLexerTests.TokenizeAll(aphidLexer, "+;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize39801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+$");
            AphidLexerTests.TokenizeAll(aphidLexer, "+$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize80901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+&");
            AphidLexerTests.TokenizeAll(aphidLexer, "+&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize81001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+%");
            AphidLexerTests.TokenizeAll(aphidLexer, "+%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("+\'");
            AphidLexerTests.TokenizeAll(aphidLexer, "+\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("+\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize52401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-");
            AphidLexerTests.TokenizeAll(aphidLexer, "-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize48803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "-\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize7007()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-:");
            AphidLexerTests.TokenizeAll(aphidLexer, "-:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize3406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-@");
            AphidLexerTests.TokenizeAll(aphidLexer, "-@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-~");
            AphidLexerTests.TokenizeAll(aphidLexer, "-~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize33003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-!");
            AphidLexerTests.TokenizeAll(aphidLexer, "-!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize88503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-|");
            AphidLexerTests.TokenizeAll(aphidLexer, "-|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize7901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-`");
            AphidLexerTests.TokenizeAll(aphidLexer, "-`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize96702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-/");
            AphidLexerTests.TokenizeAll(aphidLexer, "-/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize10105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-.");
            AphidLexerTests.TokenizeAll(aphidLexer, "-.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize53703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-?");
            AphidLexerTests.TokenizeAll(aphidLexer, "-?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize72704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-]");
            AphidLexerTests.TokenizeAll(aphidLexer, "-]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize34004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("--");
            AphidLexerTests.TokenizeAll(aphidLexer, "--");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("--", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize66901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-,");
            AphidLexerTests.TokenizeAll(aphidLexer, "-,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize11801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("->");
            AphidLexerTests.TokenizeAll(aphidLexer, "->");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("->", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize48401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-)");
            AphidLexerTests.TokenizeAll(aphidLexer, "-)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize52306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-\\");
            AphidLexerTests.TokenizeAll(aphidLexer, "-\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize15003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-*");
            AphidLexerTests.TokenizeAll(aphidLexer, "-*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-<");
            AphidLexerTests.TokenizeAll(aphidLexer, "-<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-+");
            AphidLexerTests.TokenizeAll(aphidLexer, "-+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize77501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-^");
            AphidLexerTests.TokenizeAll(aphidLexer, "-^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize99401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-(");
            AphidLexerTests.TokenizeAll(aphidLexer, "-(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize90501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-=");
            AphidLexerTests.TokenizeAll(aphidLexer, "-=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize59503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-\"");
            AphidLexerTests.TokenizeAll(aphidLexer, "-\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize39701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-#");
            AphidLexerTests.TokenizeAll(aphidLexer, "-#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize22603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-_");
            AphidLexerTests.TokenizeAll(aphidLexer, "-_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize48904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-;");
            AphidLexerTests.TokenizeAll(aphidLexer, "-;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-$");
            AphidLexerTests.TokenizeAll(aphidLexer, "-$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize15303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-&");
            AphidLexerTests.TokenizeAll(aphidLexer, "-&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize67505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-%");
            AphidLexerTests.TokenizeAll(aphidLexer, "-%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize82901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("-\'");
            AphidLexerTests.TokenizeAll(aphidLexer, "-\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("-\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize74501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/");
            AphidLexerTests.TokenizeAll(aphidLexer, "/");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "/\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize26004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/:");
            AphidLexerTests.TokenizeAll(aphidLexer, "/:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize1002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/@");
            AphidLexerTests.TokenizeAll(aphidLexer, "/@");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/@", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/|");
            AphidLexerTests.TokenizeAll(aphidLexer, "/|");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/|", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize40702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/~");
            AphidLexerTests.TokenizeAll(aphidLexer, "/~");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/~", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize57202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/!");
            AphidLexerTests.TokenizeAll(aphidLexer, "/!");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/!", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize97601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/`");
            AphidLexerTests.TokenizeAll(aphidLexer, "/`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("//");
            AphidLexerTests.TokenizeAll(aphidLexer, "//");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("//", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/.");
            AphidLexerTests.TokenizeAll(aphidLexer, "/.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize17801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/?");
            AphidLexerTests.TokenizeAll(aphidLexer, "/?");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/?", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize81502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/]");
            AphidLexerTests.TokenizeAll(aphidLexer, "/]");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/]", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize78001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/-");
            AphidLexerTests.TokenizeAll(aphidLexer, "/-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5310()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/,");
            AphidLexerTests.TokenizeAll(aphidLexer, "/,");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/,", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize53607()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/>");
            AphidLexerTests.TokenizeAll(aphidLexer, "/>");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/>", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize3407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/)");
            AphidLexerTests.TokenizeAll(aphidLexer, "/)");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/)", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize85403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/\\");
            AphidLexerTests.TokenizeAll(aphidLexer, "/\\");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/\\", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/*");
            AphidLexerTests.TokenizeAll(aphidLexer, "/*");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/*", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize62904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/<");
            AphidLexerTests.TokenizeAll(aphidLexer, "/<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/+");
            AphidLexerTests.TokenizeAll(aphidLexer, "/+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/(");
            AphidLexerTests.TokenizeAll(aphidLexer, "/(");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/(", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize98404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/^");
            AphidLexerTests.TokenizeAll(aphidLexer, "/^");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/^", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/=");
            AphidLexerTests.TokenizeAll(aphidLexer, "/=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/\"");
            AphidLexerTests.TokenizeAll(aphidLexer, "/\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize13902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/#");
            AphidLexerTests.TokenizeAll(aphidLexer, "/#");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/#", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize96204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/_");
            AphidLexerTests.TokenizeAll(aphidLexer, "/_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize76004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/;");
            AphidLexerTests.TokenizeAll(aphidLexer, "/;");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/;", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize79506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/$");
            AphidLexerTests.TokenizeAll(aphidLexer, "/$");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/$", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize46005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/&");
            AphidLexerTests.TokenizeAll(aphidLexer, "/&");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/&", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize74201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/%");
            AphidLexerTests.TokenizeAll(aphidLexer, "/%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize13903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/\'");
            AphidLexerTests.TokenizeAll(aphidLexer, "/\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize17706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ta\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "ta\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ta\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize2301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thro[");
            AphidLexerTests.TokenizeAll(aphidLexer, "thro[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thro[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize349()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thi_");
            AphidLexerTests.TokenizeAll(aphidLexer, "thi_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thi_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize986()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defi_");
            AphidLexerTests.TokenizeAll(aphidLexer, "defi_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defi_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize763()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("dele[");
            AphidLexerTests.TokenizeAll(aphidLexer, "dele[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("dele[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize28502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usin[");
            AphidLexerTests.TokenizeAll(aphidLexer, "usin[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usin[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize947()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whil_");
            AphidLexerTests.TokenizeAll(aphidLexer, "whil_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whil_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize90502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exten[");
            AphidLexerTests.TokenizeAll(aphidLexer, "exten[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exten[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize15201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("def_");
            AphidLexerTests.TokenizeAll(aphidLexer, "def_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("def_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize277()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exte_");
            AphidLexerTests.TokenizeAll(aphidLexer, "exte_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exte_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize917()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("us_");
            AphidLexerTests.TokenizeAll(aphidLexer, "us_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("us_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize58802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("els_");
            AphidLexerTests.TokenizeAll(aphidLexer, "els_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("els_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize56()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext_");
            AphidLexerTests.TokenizeAll(aphidLexer, "ext_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ext_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize43404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ex_");
            AphidLexerTests.TokenizeAll(aphidLexer, "ex_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ex_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize10106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swi_");
            AphidLexerTests.TokenizeAll(aphidLexer, "swi_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swi_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize520()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("del_");
            AphidLexerTests.TokenizeAll(aphidLexer, "del_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("del_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize24506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tru_");
            AphidLexerTests.TokenizeAll(aphidLexer, "tru_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tru_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize59910()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defa_");
            AphidLexerTests.TokenizeAll(aphidLexer, "defa_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defa_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize90503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat_");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize28503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("r_");
            AphidLexerTests.TokenizeAll(aphidLexer, "r_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("r_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize581()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defau[");
            AphidLexerTests.TokenizeAll(aphidLexer, "defau[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defau[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("con_");
            AphidLexerTests.TokenizeAll(aphidLexer, "con_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("con_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize458()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swit[");
            AphidLexerTests.TokenizeAll(aphidLexer, "swit[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swit[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("brea_");
            AphidLexerTests.TokenizeAll(aphidLexer, "brea_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("brea_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize22001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w_");
            AphidLexerTests.TokenizeAll(aphidLexer, "w_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("w_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize55703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loa_");
            AphidLexerTests.TokenizeAll(aphidLexer, "loa_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loa_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fo_");
            AphidLexerTests.TokenizeAll(aphidLexer, "fo_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fo_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize82302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nul_");
            AphidLexerTests.TokenizeAll(aphidLexer, "nul_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nul_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize28302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("i_");
            AphidLexerTests.TokenizeAll(aphidLexer, "i_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("i_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize941()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fal_");
            AphidLexerTests.TokenizeAll(aphidLexer, "fal_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fal_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("u_");
            AphidLexerTests.TokenizeAll(aphidLexer, "u_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("u_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("K÷\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "K÷\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("K÷\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fina_");
            AphidLexerTests.TokenizeAll(aphidLexer, "fina_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fina_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize53002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ca_");
            AphidLexerTests.TokenizeAll(aphidLexer, "ca_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ca_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize75602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cont_");
            AphidLexerTests.TokenizeAll(aphidLexer, "cont_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cont_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize767()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catc[");
            AphidLexerTests.TokenizeAll(aphidLexer, "catc[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catc[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize90901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thro_");
            AphidLexerTests.TokenizeAll(aphidLexer, "thro_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thro_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize84202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thr_");
            AphidLexerTests.TokenizeAll(aphidLexer, "thr_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thr_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize31301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("th_");
            AphidLexerTests.TokenizeAll(aphidLexer, "th_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("th_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize17503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("br_");
            AphidLexerTests.TokenizeAll(aphidLexer, "br_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("br_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize62604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b_");
            AphidLexerTests.TokenizeAll(aphidLexer, "b_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("b_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize77002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whi_");
            AphidLexerTests.TokenizeAll(aphidLexer, "whi_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whi_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize453()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("co_");
            AphidLexerTests.TokenizeAll(aphidLexer, "co_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("co_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize455()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d_");
            AphidLexerTests.TokenizeAll(aphidLexer, "d_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("d_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize92502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fi_");
            AphidLexerTests.TokenizeAll(aphidLexer, "fi_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fi_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize869()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loc_");
            AphidLexerTests.TokenizeAll(aphidLexer, "loc_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loc_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize11404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sw_");
            AphidLexerTests.TokenizeAll(aphidLexer, "sw_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("sw_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize70701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("s_");
            AphidLexerTests.TokenizeAll(aphidLexer, "s_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("s_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l_");
            AphidLexerTests.TokenizeAll(aphidLexer, "l_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("l_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("t_");
            AphidLexerTests.TokenizeAll(aphidLexer, "t_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("t_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize768()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usi_");
            AphidLexerTests.TokenizeAll(aphidLexer, "usi_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usi_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize282()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lo_");
            AphidLexerTests.TokenizeAll(aphidLexer, "lo_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lo_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize59602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fals_");
            AphidLexerTests.TokenizeAll(aphidLexer, "fals_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fals_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conti[");
            AphidLexerTests.TokenizeAll(aphidLexer, "conti[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("conti[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize51002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bre_");
            AphidLexerTests.TokenizeAll(aphidLexer, "bre_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("bre_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize9303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fin_");
            AphidLexerTests.TokenizeAll(aphidLexer, "fin_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fin_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("de_");
            AphidLexerTests.TokenizeAll(aphidLexer, "de_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("de_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize28004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("n_");
            AphidLexerTests.TokenizeAll(aphidLexer, "n_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("n_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize670()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usin_");
            AphidLexerTests.TokenizeAll(aphidLexer, "usin_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usin_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize8501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usin\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "usin\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize69101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("el_");
            AphidLexerTests.TokenizeAll(aphidLexer, "el_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("el_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defi\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "defi\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize551()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E");
            AphidLexerTests.TokenizeAll(aphidLexer, "0E");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0E", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize19()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu_");
            AphidLexerTests.TokenizeAll(aphidLexer, "nu_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nu_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize21404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("c_");
            AphidLexerTests.TokenizeAll(aphidLexer, "c_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("c_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize210()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("f_");
            AphidLexerTests.TokenizeAll(aphidLexer, "f_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("f_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize879()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("e_");
            AphidLexerTests.TokenizeAll(aphidLexer, "e_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("e_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize66402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("dele_");
            AphidLexerTests.TokenizeAll(aphidLexer, "dele_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("dele_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize348()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tr_");
            AphidLexerTests.TokenizeAll(aphidLexer, "tr_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tr_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize54101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fa_");
            AphidLexerTests.TokenizeAll(aphidLexer, "fa_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fa_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize51504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thro\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "thro\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thro\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize97702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defau");
            AphidLexerTests.TokenizeAll(aphidLexer, "defau");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defau", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize50002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swit_");
            AphidLexerTests.TokenizeAll(aphidLexer, "swit_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swit_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize22405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("re_");
            AphidLexerTests.TokenizeAll(aphidLexer, "re_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("re_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize84301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wh_");
            AphidLexerTests.TokenizeAll(aphidLexer, "wh_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("wh_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize45606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("brea\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "brea\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("brea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize14902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exten");
            AphidLexerTests.TokenizeAll(aphidLexer, "exten");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exten", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize19202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catc");
            AphidLexerTests.TokenizeAll(aphidLexer, "catc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delet");
            AphidLexerTests.TokenizeAll(aphidLexer, "delet");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("delet", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize66802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fina");
            AphidLexerTests.TokenizeAll(aphidLexer, "fina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize49304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switc");
            AphidLexerTests.TokenizeAll(aphidLexer, "switc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("switc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conti");
            AphidLexerTests.TokenizeAll(aphidLexer, "conti");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("conti", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize82902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continu");
            AphidLexerTests.TokenizeAll(aphidLexer, "continu");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize558()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continu\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "continu\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continu\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize24104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continuA");
            AphidLexerTests.TokenizeAll(aphidLexer, "continuA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continuA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize58002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continu[");
            AphidLexerTests.TokenizeAll(aphidLexer, "continu[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continu[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize66502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continu0");
            AphidLexerTests.TokenizeAll(aphidLexer, "continu0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continu0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize7704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continub");
            AphidLexerTests.TokenizeAll(aphidLexer, "continub");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continub", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize1003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continu{");
            AphidLexerTests.TokenizeAll(aphidLexer, "continu{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continu{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize48102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continue");
            AphidLexerTests.TokenizeAll(aphidLexer, "continue");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continue", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize934()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continu");
            AphidLexerTests.TokenizeAll(aphidLexer, "continu");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continu_");
            AphidLexerTests.TokenizeAll(aphidLexer, "continu_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continu_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defin");
            AphidLexerTests.TokenizeAll(aphidLexer, "defin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize620()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("$a_");
            AphidLexerTests.TokenizeAll(aphidLexer, "$a_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("$a_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize4103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catc_");
            AphidLexerTests.TokenizeAll(aphidLexer, "catc_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catc_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize23002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ne_");
            AphidLexerTests.TokenizeAll(aphidLexer, "ne_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ne_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize2804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exte");
            AphidLexerTests.TokenizeAll(aphidLexer, "exte");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exte", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize18003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defa");
            AphidLexerTests.TokenizeAll(aphidLexer, "defa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize11303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("final");
            AphidLexerTests.TokenizeAll(aphidLexer, "final");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("final", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize100()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("dele\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "dele\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("dele\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize26702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("final\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "final\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("final\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize15304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("n\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "n\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("n\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize2603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("r\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "r\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("r\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize814()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("u\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "u\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("u\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize75306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("t\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "t\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("t\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize84001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delet\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "delet\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("delet\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exte\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "exte\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exte\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize54202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("e\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "e\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("e\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize822()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "d\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("d\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize71903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defin\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "defin\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize52001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cont");
            AphidLexerTests.TokenizeAll(aphidLexer, "cont");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cont", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize43202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\'\0\'");
            AphidLexerTests.TokenizeAll(aphidLexer, "\'\0\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\'\0\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize55902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\'\\\'");
            AphidLexerTests.TokenizeAll(aphidLexer, "\'\\\'");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\'\\\'", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize335()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("1\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "1\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("1\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("1.");
            AphidLexerTests.TokenizeAll(aphidLexer, "1.");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("1.", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize37701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deĀ\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "deĀ\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("deĀ\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize74()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("10");
            AphidLexerTests.TokenizeAll(aphidLexer, "10");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("10", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize66202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continu\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "continu\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continu\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize17103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("s\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "s\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("s\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize66503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switc\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "switc\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("switc\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize39903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("1E");
            AphidLexerTests.TokenizeAll(aphidLexer, "1E");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("1E", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize39904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throw0");
            AphidLexerTests.TokenizeAll(aphidLexer, "throw0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("throw0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize889()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throwA");
            AphidLexerTests.TokenizeAll(aphidLexer, "throwA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("throwA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize83204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throwa");
            AphidLexerTests.TokenizeAll(aphidLexer, "throwa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("throwa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize28201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throw");
            AphidLexerTests.TokenizeAll(aphidLexer, "throw");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("throw", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize10107()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throw[");
            AphidLexerTests.TokenizeAll(aphidLexer, "throw[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("throw[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize23804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throw_");
            AphidLexerTests.TokenizeAll(aphidLexer, "throw_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("throw_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize37001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\"\0\"");
            AphidLexerTests.TokenizeAll(aphidLexer, "\"\0\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\"\0\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize96306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("\"\\\"");
            AphidLexerTests.TokenizeAll(aphidLexer, "\"\\\"");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("\"\\\"", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize90504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conti\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "conti\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("conti\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("f\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "f\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("f\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize881()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exten\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "exten\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exten\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize95602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("i\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "i\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("i\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize98601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swita");
            AphidLexerTests.TokenizeAll(aphidLexer, "swita");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swita", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize864()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("de0");
            AphidLexerTests.TokenizeAll(aphidLexer, "de0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("de0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize28901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%>\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "%>\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%>\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize14702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%><");
            AphidLexerTests.TokenizeAll(aphidLexer, "%><");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%><", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize845()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%><%");
            AphidLexerTests.TokenizeAll(aphidLexer, "%><%");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%><%", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize94302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%><%\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "%><%\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%><%\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize318()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%><%=");
            AphidLexerTests.TokenizeAll(aphidLexer, "%><%=");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%><%=", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize268()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "w\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("w\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize41501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exte");
            AphidLexerTests.TokenizeAll(aphidLexer, "exte");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exte", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize910()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usia");
            AphidLexerTests.TokenizeAll(aphidLexer, "usia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize324()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fa");
            AphidLexerTests.TokenizeAll(aphidLexer, "fa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize18502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("Ka");
            AphidLexerTests.TokenizeAll(aphidLexer, "Ka");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("Ka", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize465()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "defaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize20503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("c\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "c\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("c\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize55903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fals");
            AphidLexerTests.TokenizeAll(aphidLexer, "fals");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fals", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize930()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fina\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "fina\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fina\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize62905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nea");
            AphidLexerTests.TokenizeAll(aphidLexer, "nea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize194()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("neA");
            AphidLexerTests.TokenizeAll(aphidLexer, "neA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("neA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize25()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fA");
            AphidLexerTests.TokenizeAll(aphidLexer, "fA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize54402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("newa");
            AphidLexerTests.TokenizeAll(aphidLexer, "newa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("newa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize72802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("new0");
            AphidLexerTests.TokenizeAll(aphidLexer, "new0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("new0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize212()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("new:");
            AphidLexerTests.TokenizeAll(aphidLexer, "new:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("new:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize30002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("newA");
            AphidLexerTests.TokenizeAll(aphidLexer, "newA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("newA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize18()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("new{");
            AphidLexerTests.TokenizeAll(aphidLexer, "new{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("new{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize517()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("new");
            AphidLexerTests.TokenizeAll(aphidLexer, "new");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("new", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize4302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("new\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "new\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("new\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize21405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("new_");
            AphidLexerTests.TokenizeAll(aphidLexer, "new_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("new_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize179()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("newa");
            AphidLexerTests.TokenizeAll(aphidLexer, "newa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("newa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize2204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "b\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("b\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize82201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defau\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "defau\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defau\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize15802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("dea");
            AphidLexerTests.TokenizeAll(aphidLexer, "dea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("dea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("rA");
            AphidLexerTests.TokenizeAll(aphidLexer, "rA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("rA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("else");
            AphidLexerTests.TokenizeAll(aphidLexer, "else");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("else", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize709()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whi\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "whi\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize45001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defauA");
            AphidLexerTests.TokenizeAll(aphidLexer, "defauA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defauA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize78902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breaka");
            AphidLexerTests.TokenizeAll(aphidLexer, "breaka");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("breaka", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize82701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("break");
            AphidLexerTests.TokenizeAll(aphidLexer, "break");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("break", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize16601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breakA");
            AphidLexerTests.TokenizeAll(aphidLexer, "breakA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("breakA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize24105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("break0");
            AphidLexerTests.TokenizeAll(aphidLexer, "break0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("break0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("break_");
            AphidLexerTests.TokenizeAll(aphidLexer, "break_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("break_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize4104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deleta");
            AphidLexerTests.TokenizeAll(aphidLexer, "deleta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("deleta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize22101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whil");
            AphidLexerTests.TokenizeAll(aphidLexer, "whil");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whil", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize622()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thr\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "thr\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thr\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catc");
            AphidLexerTests.TokenizeAll(aphidLexer, "catc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize24202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "l\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("l\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize47401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("i0");
            AphidLexerTests.TokenizeAll(aphidLexer, "i0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("i0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize859()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defaua");
            AphidLexerTests.TokenizeAll(aphidLexer, "defaua");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defaua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize23702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "0E\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0E\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize48302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E+");
            AphidLexerTests.TokenizeAll(aphidLexer, "0E+");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0E+", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize4703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E-");
            AphidLexerTests.TokenizeAll(aphidLexer, "0E-");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0E-", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize95705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E0");
            AphidLexerTests.TokenizeAll(aphidLexer, "0E0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0E0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize998()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E-0");
            AphidLexerTests.TokenizeAll(aphidLexer, "0E-0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0E-0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E-:");
            AphidLexerTests.TokenizeAll(aphidLexer, "0E-:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0E-:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize75704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switca");
            AphidLexerTests.TokenizeAll(aphidLexer, "switca");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("switca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize677()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("th\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "th\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("th\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize19401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extena");
            AphidLexerTests.TokenizeAll(aphidLexer, "extena");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("extena", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize42204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%>\0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "%>\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%>\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize74901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loa");
            AphidLexerTests.TokenizeAll(aphidLexer, "loa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throw\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "throw\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("throw\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize76005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usi\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "usi\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize77701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ca");
            AphidLexerTests.TokenizeAll(aphidLexer, "ca");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize667()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("la");
            AphidLexerTests.TokenizeAll(aphidLexer, "la");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("la", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize14001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w \0\0\0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "w \0\0\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("w \0\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize34005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wa");
            AphidLexerTests.TokenizeAll(aphidLexer, "wa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("wa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize130()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wA");
            AphidLexerTests.TokenizeAll(aphidLexer, "wA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("wA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize90605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w0");
            AphidLexerTests.TokenizeAll(aphidLexer, "w0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("w0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize47902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("i<");
            AphidLexerTests.TokenizeAll(aphidLexer, "i<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("i<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize34901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exten{");
            AphidLexerTests.TokenizeAll(aphidLexer, "exten{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exten{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize87901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("do\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "do\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("do\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("doa");
            AphidLexerTests.TokenizeAll(aphidLexer, "doa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("doa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize95906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("do0");
            AphidLexerTests.TokenizeAll(aphidLexer, "do0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("do0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("do{");
            AphidLexerTests.TokenizeAll(aphidLexer, "do{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("do{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize164()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("do");
            AphidLexerTests.TokenizeAll(aphidLexer, "do");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("do", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize8701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("doA");
            AphidLexerTests.TokenizeAll(aphidLexer, "doA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("doA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize31801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("do\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "do\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("do\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize49802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("do_");
            AphidLexerTests.TokenizeAll(aphidLexer, "do_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("do_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize343()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("doa");
            AphidLexerTests.TokenizeAll(aphidLexer, "doa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("doa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize36()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swia");
            AphidLexerTests.TokenizeAll(aphidLexer, "swia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize711()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fal");
            AphidLexerTests.TokenizeAll(aphidLexer, "fal");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fal", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize663()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ua");
            AphidLexerTests.TokenizeAll(aphidLexer, "ua");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize649()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loa\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "loa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defau{");
            AphidLexerTests.TokenizeAll(aphidLexer, "defau{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defau{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize66604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continue\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "continue\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continue\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize10602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continuea\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "continuea\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continuea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize68702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continueA\0\0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "continueA\0\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continueA\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize257()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continue[");
            AphidLexerTests.TokenizeAll(aphidLexer, "continue[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continue[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize96506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continue0");
            AphidLexerTests.TokenizeAll(aphidLexer, "continue0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continue0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize169()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continue{");
            AphidLexerTests.TokenizeAll(aphidLexer, "continue{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continue{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize684()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continue");
            AphidLexerTests.TokenizeAll(aphidLexer, "continue");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continue", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize87104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continue_");
            AphidLexerTests.TokenizeAll(aphidLexer, "continue_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continue_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize83004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "0E0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0E0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize13()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E00");
            AphidLexerTests.TokenizeAll(aphidLexer, "0E00");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0E00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize87501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continue\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "continue\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continue\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize44303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("uA");
            AphidLexerTests.TokenizeAll(aphidLexer, "uA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("uA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize56302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("def\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "def\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("def\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize21904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "in\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("in\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize69102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("inA");
            AphidLexerTests.TokenizeAll(aphidLexer, "inA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("inA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize19203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ina");
            AphidLexerTests.TokenizeAll(aphidLexer, "ina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize743()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in[");
            AphidLexerTests.TokenizeAll(aphidLexer, "in[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("in[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize76601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in{");
            AphidLexerTests.TokenizeAll(aphidLexer, "in{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("in{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize16502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in0");
            AphidLexerTests.TokenizeAll(aphidLexer, "in0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("in0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize84302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in");
            AphidLexerTests.TokenizeAll(aphidLexer, "in");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("in", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize91104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "in\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("in\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize625()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in_");
            AphidLexerTests.TokenizeAll(aphidLexer, "in_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("in_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize955()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ina");
            AphidLexerTests.TokenizeAll(aphidLexer, "ina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize69903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fin\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "fin\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize46405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sa");
            AphidLexerTests.TokenizeAll(aphidLexer, "sa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("sa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize52204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("u0");
            AphidLexerTests.TokenizeAll(aphidLexer, "u0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("u0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize88702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thia");
            AphidLexerTests.TokenizeAll(aphidLexer, "thia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize435()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deûA");
            AphidLexerTests.TokenizeAll(aphidLexer, "deûA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("deûA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize893()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("faa");
            AphidLexerTests.TokenizeAll(aphidLexer, "faa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("faa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize98302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("true\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "true\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("true\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize32102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("truea");
            AphidLexerTests.TokenizeAll(aphidLexer, "truea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("truea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize86802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("true{");
            AphidLexerTests.TokenizeAll(aphidLexer, "true{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("true{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize66701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("true_");
            AphidLexerTests.TokenizeAll(aphidLexer, "true_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("true_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize59504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("true\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "true\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("true\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conta");
            AphidLexerTests.TokenizeAll(aphidLexer, "conta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("conta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize47002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catca");
            AphidLexerTests.TokenizeAll(aphidLexer, "catca");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize71002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swi\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "swi\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize746()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("del\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "del\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("del\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize37903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bre\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "bre\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("bre\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ba");
            AphidLexerTests.TokenizeAll(aphidLexer, "ba");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ba", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize20401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nA");
            AphidLexerTests.TokenizeAll(aphidLexer, "nA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loc");
            AphidLexerTests.TokenizeAll(aphidLexer, "loc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize77502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "nu\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nu\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize84501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fa\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "fa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize75705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cA");
            AphidLexerTests.TokenizeAll(aphidLexer, "cA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("caa");
            AphidLexerTests.TokenizeAll(aphidLexer, "caa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("caa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize583()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("else\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "else\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("else\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize154()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elsea");
            AphidLexerTests.TokenizeAll(aphidLexer, "elsea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("elsea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize849()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("else[");
            AphidLexerTests.TokenizeAll(aphidLexer, "else[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("else[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize25201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("else{");
            AphidLexerTests.TokenizeAll(aphidLexer, "else{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("else{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("else_");
            AphidLexerTests.TokenizeAll(aphidLexer, "else_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("else_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize47402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("else");
            AphidLexerTests.TokenizeAll(aphidLexer, "else");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("else", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize592()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("us\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "us\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("us\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize1602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exten");
            AphidLexerTests.TokenizeAll(aphidLexer, "exten");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exten", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize57601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bra");
            AphidLexerTests.TokenizeAll(aphidLexer, "bra");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("bra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize88703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ne\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "ne\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ne\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize189()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("coa");
            AphidLexerTests.TokenizeAll(aphidLexer, "coa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("coa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize735()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sA");
            AphidLexerTests.TokenizeAll(aphidLexer, "sA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("sA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize74902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swit\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "swit\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swit\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize45301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ne{");
            AphidLexerTests.TokenizeAll(aphidLexer, "ne{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ne{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize30705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("contia");
            AphidLexerTests.TokenizeAll(aphidLexer, "contia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("contia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize417()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lA");
            AphidLexerTests.TokenizeAll(aphidLexer, "lA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize47302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("%><\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "%><\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("%><\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize42302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("co{");
            AphidLexerTests.TokenizeAll(aphidLexer, "co{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("co{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize39201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fi0");
            AphidLexerTests.TokenizeAll(aphidLexer, "fi0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fi0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize326()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falsea");
            AphidLexerTests.TokenizeAll(aphidLexer, "falsea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("falsea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize58003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("false");
            AphidLexerTests.TokenizeAll(aphidLexer, "false");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("false", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falseA");
            AphidLexerTests.TokenizeAll(aphidLexer, "falseA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("falseA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize54603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("false0");
            AphidLexerTests.TokenizeAll(aphidLexer, "false0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("false0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("false_");
            AphidLexerTests.TokenizeAll(aphidLexer, "false_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("false_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize40201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("false\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "false\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("false\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize75501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("def0");
            AphidLexerTests.TokenizeAll(aphidLexer, "def0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("def0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize40501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("rea");
            AphidLexerTests.TokenizeAll(aphidLexer, "rea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("rea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize648()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exa");
            AphidLexerTests.TokenizeAll(aphidLexer, "exa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize99302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("con\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "con\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("con\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fo\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "fo\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fo\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize85002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nul\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "nul\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nul\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize82903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("trûA");
            AphidLexerTests.TokenizeAll(aphidLexer, "trûA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("trûA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize98002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ela");
            AphidLexerTests.TokenizeAll(aphidLexer, "ela");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ela", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize69103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("da");
            AphidLexerTests.TokenizeAll(aphidLexer, "da");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("da", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize92503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defau");
            AphidLexerTests.TokenizeAll(aphidLexer, "defau");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defau", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize22704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("new");
            AphidLexerTests.TokenizeAll(aphidLexer, "new");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("new", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize82303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wh\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "wh\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("wh\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize74502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whA");
            AphidLexerTests.TokenizeAll(aphidLexer, "whA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize37801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ta0");
            AphidLexerTests.TokenizeAll(aphidLexer, "ta0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ta0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize44503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defina");
            AphidLexerTests.TokenizeAll(aphidLexer, "defina");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defina", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tryA");
            AphidLexerTests.TokenizeAll(aphidLexer, "tryA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tryA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize75902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("try0");
            AphidLexerTests.TokenizeAll(aphidLexer, "try0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("try0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize228()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("try:");
            AphidLexerTests.TokenizeAll(aphidLexer, "try:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("try:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("trya");
            AphidLexerTests.TokenizeAll(aphidLexer, "trya");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("trya", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize168()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("try[");
            AphidLexerTests.TokenizeAll(aphidLexer, "try[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("try[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize7()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("try{");
            AphidLexerTests.TokenizeAll(aphidLexer, "try{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("try{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize21704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("try");
            AphidLexerTests.TokenizeAll(aphidLexer, "try");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("try", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize20201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("try\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "try\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("try\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize872()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("try_");
            AphidLexerTests.TokenizeAll(aphidLexer, "try_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("try_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize387()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("trya");
            AphidLexerTests.TokenizeAll(aphidLexer, "trya");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("trya", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize48103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ca\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "ca\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ca\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize76301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sw\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "sw\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("sw\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize62701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("else\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "else\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("else\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize32903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conti{");
            AphidLexerTests.TokenizeAll(aphidLexer, "conti{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("conti{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize1901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fi\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "fi\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize462()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lo\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "lo\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lo\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize989()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ta");
            AphidLexerTests.TokenizeAll(aphidLexer, "ta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conti");
            AphidLexerTests.TokenizeAll(aphidLexer, "conti");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("conti", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize51103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("dela");
            AphidLexerTests.TokenizeAll(aphidLexer, "dela");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("dela", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize14501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("e0");
            AphidLexerTests.TokenizeAll(aphidLexer, "e0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("e0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize40()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("this\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "this\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("this\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize78301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thisa");
            AphidLexerTests.TokenizeAll(aphidLexer, "thisa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thisa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize14404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("this[");
            AphidLexerTests.TokenizeAll(aphidLexer, "this[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("this[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize62702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("this{");
            AphidLexerTests.TokenizeAll(aphidLexer, "this{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("this{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("this_");
            AphidLexerTests.TokenizeAll(aphidLexer, "this_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("this_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize807()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("this");
            AphidLexerTests.TokenizeAll(aphidLexer, "this");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("this", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize84002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("this\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "this\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("this\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize95001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thisa");
            AphidLexerTests.TokenizeAll(aphidLexer, "thisa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thisa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize64801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("brA");
            AphidLexerTests.TokenizeAll(aphidLexer, "brA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("brA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize2401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("brea");
            AphidLexerTests.TokenizeAll(aphidLexer, "brea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("brea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize341()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ne");
            AphidLexerTests.TokenizeAll(aphidLexer, "ne");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ne", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whila");
            AphidLexerTests.TokenizeAll(aphidLexer, "whila");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whila", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize811()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continua");
            AphidLexerTests.TokenizeAll(aphidLexer, "continua");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nula");
            AphidLexerTests.TokenizeAll(aphidLexer, "nula");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nula", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize591()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu0");
            AphidLexerTests.TokenizeAll(aphidLexer, "nu0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nu0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize24507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throwýa");
            AphidLexerTests.TokenizeAll(aphidLexer, "throwýa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("throwýa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize43903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tra");
            AphidLexerTests.TokenizeAll(aphidLexer, "tra");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize50904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("A0");
            AphidLexerTests.TokenizeAll(aphidLexer, "A0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("A0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize487()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("doa\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "doa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("doa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize58701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tryA");
            AphidLexerTests.TokenizeAll(aphidLexer, "tryA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tryA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("//\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "//\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("//\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize60401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("//\n");
            AphidLexerTests.TokenizeAll(aphidLexer, "//\n");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("//\n", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize839()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("//\r");
            AphidLexerTests.TokenizeAll(aphidLexer, "//\r");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("//\r", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("els");
            AphidLexerTests.TokenizeAll(aphidLexer, "els");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("els", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize14405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("reA");
            AphidLexerTests.TokenizeAll(aphidLexer, "reA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("reA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize94101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tr[");
            AphidLexerTests.TokenizeAll(aphidLexer, "tr[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tr[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize89402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("co");
            AphidLexerTests.TokenizeAll(aphidLexer, "co");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("co", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize585()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extend");
            AphidLexerTests.TokenizeAll(aphidLexer, "extend");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("extend", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize661()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extend\0\0\0\0\0\0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "extend\0\0\0\0\0\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("extend\0\0\0\0\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize25202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extenda");
            AphidLexerTests.TokenizeAll(aphidLexer, "extenda");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("extenda", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("con0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "con0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("con0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extend\0\0\0\0\0\0\0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "extend\0\0\0\0\0\0\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("extend\0\0\0\0\0\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize41502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tru\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "tru\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tru\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize11405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext");
            AphidLexerTests.TokenizeAll(aphidLexer, "ext");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ext", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize37702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whia");
            AphidLexerTests.TokenizeAll(aphidLexer, "whia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finala");
            AphidLexerTests.TokenizeAll(aphidLexer, "finala");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("finala", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize17202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continuea0\0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "continuea0\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continuea0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0b\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "0b\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0b\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize90408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0b1");
            AphidLexerTests.TokenizeAll(aphidLexer, "0b1");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0b1", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize119()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0b0");
            AphidLexerTests.TokenizeAll(aphidLexer, "0b0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0b0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize128()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("using0");
            AphidLexerTests.TokenizeAll(aphidLexer, "using0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("using0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize992()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usingA");
            AphidLexerTests.TokenizeAll(aphidLexer, "usingA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usingA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize71502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usinga");
            AphidLexerTests.TokenizeAll(aphidLexer, "usinga");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usinga", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize54907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("using");
            AphidLexerTests.TokenizeAll(aphidLexer, "using");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("using", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize72202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("using_");
            AphidLexerTests.TokenizeAll(aphidLexer, "using_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("using_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize44103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usingýA");
            AphidLexerTests.TokenizeAll(aphidLexer, "usingýA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usingýA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize19204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usingA\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "usingA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usingA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize49701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extend{");
            AphidLexerTests.TokenizeAll(aphidLexer, "extend{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("extend{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize69002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("br\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "br\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("br\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize56401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continuea\0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "continuea\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continuea\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize40301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throwa\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "throwa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("throwa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5311()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("trAA");
            AphidLexerTests.TokenizeAll(aphidLexer, "trAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("trAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("el{");
            AphidLexerTests.TokenizeAll(aphidLexer, "el{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("el{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize7602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extenA");
            AphidLexerTests.TokenizeAll(aphidLexer, "extenA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("extenA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize99102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/*\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "/*\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/*\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize69104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("/**");
            AphidLexerTests.TokenizeAll(aphidLexer, "/**");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("/**", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize9403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("final{");
            AphidLexerTests.TokenizeAll(aphidLexer, "final{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("final{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize73101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fo0");
            AphidLexerTests.TokenizeAll(aphidLexer, "fo0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fo0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize93104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fia");
            AphidLexerTests.TokenizeAll(aphidLexer, "fia");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fia", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize33303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catcha");
            AphidLexerTests.TokenizeAll(aphidLexer, "catcha");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catcha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catch");
            AphidLexerTests.TokenizeAll(aphidLexer, "catch");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize92404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catchA");
            AphidLexerTests.TokenizeAll(aphidLexer, "catchA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catchA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize78302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catch0");
            AphidLexerTests.TokenizeAll(aphidLexer, "catch0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catch0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize18203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catch[");
            AphidLexerTests.TokenizeAll(aphidLexer, "catch[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catch[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize16706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catch_");
            AphidLexerTests.TokenizeAll(aphidLexer, "catch_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catch_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize93802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catch\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "catch\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catch\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize58402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("brea0");
            AphidLexerTests.TokenizeAll(aphidLexer, "brea0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("brea0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("els{");
            AphidLexerTests.TokenizeAll(aphidLexer, "els{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("els{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize233()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("foa");
            AphidLexerTests.TokenizeAll(aphidLexer, "foa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("foa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize4501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d0");
            AphidLexerTests.TokenizeAll(aphidLexer, "d0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("d0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize788()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("do0");
            AphidLexerTests.TokenizeAll(aphidLexer, "do0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("do0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize56202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usa");
            AphidLexerTests.TokenizeAll(aphidLexer, "usa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize785()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extend");
            AphidLexerTests.TokenizeAll(aphidLexer, "extend");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("extend", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swi_");
            AphidLexerTests.TokenizeAll(aphidLexer, "swi_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swi_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize3408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("re\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "re\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("re\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize55404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nua");
            AphidLexerTests.TokenizeAll(aphidLexer, "nua");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize32()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thr_");
            AphidLexerTests.TokenizeAll(aphidLexer, "thr_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thr_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize62906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E\00");
            AphidLexerTests.TokenizeAll(aphidLexer, "0E\00");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0E\00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize44701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catc0");
            AphidLexerTests.TokenizeAll(aphidLexer, "catc0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catc0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize31802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loûA");
            AphidLexerTests.TokenizeAll(aphidLexer, "loûA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loûA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize44902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lock\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "lock\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lock\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize52502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lock[");
            AphidLexerTests.TokenizeAll(aphidLexer, "lock[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lock[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize82702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("locka");
            AphidLexerTests.TokenizeAll(aphidLexer, "locka");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("locka", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize20()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lock{");
            AphidLexerTests.TokenizeAll(aphidLexer, "lock{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lock{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize31403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("locka");
            AphidLexerTests.TokenizeAll(aphidLexer, "locka");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("locka", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize208()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lock_");
            AphidLexerTests.TokenizeAll(aphidLexer, "lock_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lock_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize247()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thro0");
            AphidLexerTests.TokenizeAll(aphidLexer, "thro0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thro0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defiA");
            AphidLexerTests.TokenizeAll(aphidLexer, "defiA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize750()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swa");
            AphidLexerTests.TokenizeAll(aphidLexer, "swa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize40101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delea");
            AphidLexerTests.TokenizeAll(aphidLexer, "delea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("delea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize37904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lock");
            AphidLexerTests.TokenizeAll(aphidLexer, "lock");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lock", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize25502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("faA");
            AphidLexerTests.TokenizeAll(aphidLexer, "faA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("faA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize54702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defaA");
            AphidLexerTests.TokenizeAll(aphidLexer, "defaA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize95302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lo[");
            AphidLexerTests.TokenizeAll(aphidLexer, "lo[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lo[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize19301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fiA");
            AphidLexerTests.TokenizeAll(aphidLexer, "fiA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize44606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usinA");
            AphidLexerTests.TokenizeAll(aphidLexer, "usinA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usinA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("newa\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "newa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("newa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize71003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("caA");
            AphidLexerTests.TokenizeAll(aphidLexer, "caA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("caA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize39905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lock0");
            AphidLexerTests.TokenizeAll(aphidLexer, "lock0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lock0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize1301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whilea");
            AphidLexerTests.TokenizeAll(aphidLexer, "whilea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whilea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize400()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whileA");
            AphidLexerTests.TokenizeAll(aphidLexer, "whileA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whileA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize60902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("while0");
            AphidLexerTests.TokenizeAll(aphidLexer, "while0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("while0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize16901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("while");
            AphidLexerTests.TokenizeAll(aphidLexer, "while");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("while", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize69801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("while_");
            AphidLexerTests.TokenizeAll(aphidLexer, "while_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("while_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize9304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l0");
            AphidLexerTests.TokenizeAll(aphidLexer, "l0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("l0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize53906()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ex\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "ex\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ex\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize73501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defin{");
            AphidLexerTests.TokenizeAll(aphidLexer, "defin{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defin{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whileýa");
            AphidLexerTests.TokenizeAll(aphidLexer, "whileýa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whileýa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize64102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("r[");
            AphidLexerTests.TokenizeAll(aphidLexer, "r[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("r[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize187()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("try");
            AphidLexerTests.TokenizeAll(aphidLexer, "try");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("try", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize90802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("el");
            AphidLexerTests.TokenizeAll(aphidLexer, "el");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("el", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize54703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whilea\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "whilea\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whilea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize98405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falsa");
            AphidLexerTests.TokenizeAll(aphidLexer, "falsa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("falsa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize50404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E\000");
            AphidLexerTests.TokenizeAll(aphidLexer, "0E\000");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0E\000", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize85003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cont0");
            AphidLexerTests.TokenizeAll(aphidLexer, "cont0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cont0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize215()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tA");
            AphidLexerTests.TokenizeAll(aphidLexer, "tA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize14703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wha");
            AphidLexerTests.TokenizeAll(aphidLexer, "wha");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("wha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("iA");
            AphidLexerTests.TokenizeAll(aphidLexer, "iA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("iA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize490()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cona");
            AphidLexerTests.TokenizeAll(aphidLexer, "cona");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cona", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize93708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("null\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "null\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("null\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize57203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("null[");
            AphidLexerTests.TokenizeAll(aphidLexer, "null[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("null[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize41603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nulla");
            AphidLexerTests.TokenizeAll(aphidLexer, "nulla");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nulla", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize516()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("null{");
            AphidLexerTests.TokenizeAll(aphidLexer, "null{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("null{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("null\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "null\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("null\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize22102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("null_");
            AphidLexerTests.TokenizeAll(aphidLexer, "null_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("null_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize8702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("final");
            AphidLexerTests.TokenizeAll(aphidLexer, "final");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("final", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize17001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "finaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("finaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize20202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("def<");
            AphidLexerTests.TokenizeAll(aphidLexer, "def<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("def<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize36403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thisA");
            AphidLexerTests.TokenizeAll(aphidLexer, "thisA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thisA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize39504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fora");
            AphidLexerTests.TokenizeAll(aphidLexer, "fora");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fora", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize81302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("forA");
            AphidLexerTests.TokenizeAll(aphidLexer, "forA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("forA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize68703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("for[");
            AphidLexerTests.TokenizeAll(aphidLexer, "for[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("for[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize535()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("for0");
            AphidLexerTests.TokenizeAll(aphidLexer, "for0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("for0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("for{");
            AphidLexerTests.TokenizeAll(aphidLexer, "for{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("for{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize93401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("for");
            AphidLexerTests.TokenizeAll(aphidLexer, "for");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("for", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize59703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("for\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "for\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("for\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize30901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("for_");
            AphidLexerTests.TokenizeAll(aphidLexer, "for_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("for_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize3()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fora");
            AphidLexerTests.TokenizeAll(aphidLexer, "fora");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fora", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize51505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("br0");
            AphidLexerTests.TokenizeAll(aphidLexer, "br0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("br0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize18801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ba\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "ba\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ba\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize41604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize16205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nuA");
            AphidLexerTests.TokenizeAll(aphidLexer, "nuA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nuA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize579()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falseýA");
            AphidLexerTests.TokenizeAll(aphidLexer, "falseýA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("falseýA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falseA\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "falseA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("falseA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize420()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extea");
            AphidLexerTests.TokenizeAll(aphidLexer, "extea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("extea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize386()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("retA");
            AphidLexerTests.TokenizeAll(aphidLexer, "retA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("retA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize73905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ret0");
            AphidLexerTests.TokenizeAll(aphidLexer, "ret0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ret0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize97703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ret:");
            AphidLexerTests.TokenizeAll(aphidLexer, "ret:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ret:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize98203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("reta");
            AphidLexerTests.TokenizeAll(aphidLexer, "reta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("reta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ret{");
            AphidLexerTests.TokenizeAll(aphidLexer, "ret{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ret{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize34801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ret");
            AphidLexerTests.TokenizeAll(aphidLexer, "ret");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ret", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize79401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ret\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "ret\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ret\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize15()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ret_");
            AphidLexerTests.TokenizeAll(aphidLexer, "ret_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ret_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize190()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("reta");
            AphidLexerTests.TokenizeAll(aphidLexer, "reta");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("reta", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize847()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("retA");
            AphidLexerTests.TokenizeAll(aphidLexer, "retA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("retA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("reta\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "reta\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("reta\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize22201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swi");
            AphidLexerTests.TokenizeAll(aphidLexer, "swi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize367()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defin");
            AphidLexerTests.TokenizeAll(aphidLexer, "defin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize975()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catchýa");
            AphidLexerTests.TokenizeAll(aphidLexer, "catchýa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catchýa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize371()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exA");
            AphidLexerTests.TokenizeAll(aphidLexer, "exA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize59101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loa0a");
            AphidLexerTests.TokenizeAll(aphidLexer, "loa0a");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loa0a", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize80503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sw0");
            AphidLexerTests.TokenizeAll(aphidLexer, "sw0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("sw0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize89103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ca0");
            AphidLexerTests.TokenizeAll(aphidLexer, "ca0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ca0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ex[");
            AphidLexerTests.TokenizeAll(aphidLexer, "ex[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ex[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("if\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "if\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("if\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize96406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("if0");
            AphidLexerTests.TokenizeAll(aphidLexer, "if0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("if0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize70101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ifa");
            AphidLexerTests.TokenizeAll(aphidLexer, "ifa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ifa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize48905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("if{");
            AphidLexerTests.TokenizeAll(aphidLexer, "if{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("if{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize36902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ifA");
            AphidLexerTests.TokenizeAll(aphidLexer, "ifA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ifA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize66504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("if");
            AphidLexerTests.TokenizeAll(aphidLexer, "if");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("if", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize70102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("if\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "if\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("if\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize99902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("if_");
            AphidLexerTests.TokenizeAll(aphidLexer, "if_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("if_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize14103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ifa");
            AphidLexerTests.TokenizeAll(aphidLexer, "ifa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ifa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ifa\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "ifa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ifa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lockA");
            AphidLexerTests.TokenizeAll(aphidLexer, "lockA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lockA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize89301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tru<");
            AphidLexerTests.TokenizeAll(aphidLexer, "tru<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tru<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6307()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("contiý0");
            AphidLexerTests.TokenizeAll(aphidLexer, "contiý0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("contiý0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize20203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("contiA");
            AphidLexerTests.TokenizeAll(aphidLexer, "contiA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("contiA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize89403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("true0");
            AphidLexerTests.TokenizeAll(aphidLexer, "true0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("true0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize24003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ina\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "ina\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ina\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize45501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("f[");
            AphidLexerTests.TokenizeAll(aphidLexer, "f[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("f[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize47003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0x\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "0x\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0x\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0x0");
            AphidLexerTests.TokenizeAll(aphidLexer, "0x0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0x0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize15902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0x:");
            AphidLexerTests.TokenizeAll(aphidLexer, "0x:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0x:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize95303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0xz");
            AphidLexerTests.TokenizeAll(aphidLexer, "0xz");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0xz", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize23402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0xA");
            AphidLexerTests.TokenizeAll(aphidLexer, "0xA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0xA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize57901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fin[");
            AphidLexerTests.TokenizeAll(aphidLexer, "fin[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fin[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize95()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E\000\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "0E\000\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0E\000\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize40703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usin0");
            AphidLexerTests.TokenizeAll(aphidLexer, "usin0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usin0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize225()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("if{");
            AphidLexerTests.TokenizeAll(aphidLexer, "if{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("if{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize25503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in0");
            AphidLexerTests.TokenizeAll(aphidLexer, "in0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("in0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize88805()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("us0");
            AphidLexerTests.TokenizeAll(aphidLexer, "us0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("us0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize633()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l{");
            AphidLexerTests.TokenizeAll(aphidLexer, "l{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("l{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize62201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("t{");
            AphidLexerTests.TokenizeAll(aphidLexer, "t{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("t{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize66001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delete");
            AphidLexerTests.TokenizeAll(aphidLexer, "delete");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("delete", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize89202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delete\0\0\0\0\0\0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "delete\0\0\0\0\0\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("delete\0\0\0\0\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize412()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deletea");
            AphidLexerTests.TokenizeAll(aphidLexer, "deletea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("deletea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize545()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize78501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fa0");
            AphidLexerTests.TokenizeAll(aphidLexer, "fa0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fa0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize80902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usA");
            AphidLexerTests.TokenizeAll(aphidLexer, "usA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize70601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("trya\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "trya\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("trya\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deletý0");
            AphidLexerTests.TokenizeAll(aphidLexer, "deletý0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("deletý0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize512()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deletA");
            AphidLexerTests.TokenizeAll(aphidLexer, "deletA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("deletA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize15305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("for0");
            AphidLexerTests.TokenizeAll(aphidLexer, "for0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("for0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize58803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E\01.\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "0E\01.\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0E\01.\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize550()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E\01.:");
            AphidLexerTests.TokenizeAll(aphidLexer, "0E\01.:");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0E\01.:", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize17901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("doA");
            AphidLexerTests.TokenizeAll(aphidLexer, "doA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("doA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize31803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d{");
            AphidLexerTests.TokenizeAll(aphidLexer, "d{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("d{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize74702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("re0");
            AphidLexerTests.TokenizeAll(aphidLexer, "re0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("re0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("foA");
            AphidLexerTests.TokenizeAll(aphidLexer, "foA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("foA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breakýa");
            AphidLexerTests.TokenizeAll(aphidLexer, "breakýa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("breakýa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize347()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("del");
            AphidLexerTests.TokenizeAll(aphidLexer, "del");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("del", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize44903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delet<");
            AphidLexerTests.TokenizeAll(aphidLexer, "delet<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("delet<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize2001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("load\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "load\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("load\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize60903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loada");
            AphidLexerTests.TokenizeAll(aphidLexer, "loada");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loada", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize30402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("load{");
            AphidLexerTests.TokenizeAll(aphidLexer, "load{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("load{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize19302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("load_");
            AphidLexerTests.TokenizeAll(aphidLexer, "load_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("load_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize73302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("load0");
            AphidLexerTests.TokenizeAll(aphidLexer, "load0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("load0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize82504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loadA");
            AphidLexerTests.TokenizeAll(aphidLexer, "loadA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loadA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize528()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("load\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "load\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("load\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize82703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falsA");
            AphidLexerTests.TokenizeAll(aphidLexer, "falsA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("falsA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize67905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deleA");
            AphidLexerTests.TokenizeAll(aphidLexer, "deleA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("deleA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize8002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defi0");
            AphidLexerTests.TokenizeAll(aphidLexer, "defi0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defi0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize62907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catc\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "catc\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catc\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize53802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switcA");
            AphidLexerTests.TokenizeAll(aphidLexer, "switcA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("switcA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize68601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deletea\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "deletea\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("deletea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize17707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breaka\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "breaka\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("breaka\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize76302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "breaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("breaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize567()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swA");
            AphidLexerTests.TokenizeAll(aphidLexer, "swA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize83005()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0b00");
            AphidLexerTests.TokenizeAll(aphidLexer, "0b00");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0b00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize40704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w<");
            AphidLexerTests.TokenizeAll(aphidLexer, "w<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("w<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize37905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switch[");
            AphidLexerTests.TokenizeAll(aphidLexer, "switch[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("switch[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize9001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switch");
            AphidLexerTests.TokenizeAll(aphidLexer, "switch");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("switch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switch\0\0\0\0\0\0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "switch\0\0\0\0\0\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("switch\0\0\0\0\0\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize54203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switcha");
            AphidLexerTests.TokenizeAll(aphidLexer, "switcha");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("switcha", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize53608()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("t");
            AphidLexerTests.TokenizeAll(aphidLexer, "t");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("t", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize42804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("l");
            AphidLexerTests.TokenizeAll(aphidLexer, "l");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("l", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize32702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0b0");
            AphidLexerTests.TokenizeAll(aphidLexer, "0b0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0b0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize696()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delete{");
            AphidLexerTests.TokenizeAll(aphidLexer, "delete{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("delete{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize77202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wh0");
            AphidLexerTests.TokenizeAll(aphidLexer, "wh0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("wh0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize66902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("if");
            AphidLexerTests.TokenizeAll(aphidLexer, "if");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("if", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize22705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0E-00\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "0E-00\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0E-00\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize76006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finaA");
            AphidLexerTests.TokenizeAll(aphidLexer, "finaA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("finaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usi[");
            AphidLexerTests.TokenizeAll(aphidLexer, "usi[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usi[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize8102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bre[");
            AphidLexerTests.TokenizeAll(aphidLexer, "bre[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("bre[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize33501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thr÷A\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "thr÷A\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thr÷A\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize80801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thi\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "thi\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thi\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize75103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whi÷A\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "whi÷A\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whi÷A\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize58004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("rA\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "rA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("rA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize969()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loc÷A\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "loc÷A\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loc÷A\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize332()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loca");
            AphidLexerTests.TokenizeAll(aphidLexer, "loca");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize344()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tru0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "tru0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tru0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("truea");
            AphidLexerTests.TokenizeAll(aphidLexer, "truea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("truea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize1902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("br{");
            AphidLexerTests.TokenizeAll(aphidLexer, "br{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("br{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize30902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0x0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "0x0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0x0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize716()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("definA");
            AphidLexerTests.TokenizeAll(aphidLexer, "definA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("definA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize7503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sw{");
            AphidLexerTests.TokenizeAll(aphidLexer, "sw{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("sw{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize66101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("forA");
            AphidLexerTests.TokenizeAll(aphidLexer, "forA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("forA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize13804()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "delaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("delaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize7302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switc{");
            AphidLexerTests.TokenizeAll(aphidLexer, "switc{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("switc{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize995()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("de[");
            AphidLexerTests.TokenizeAll(aphidLexer, "de[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("de[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize8003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("trua");
            AphidLexerTests.TokenizeAll(aphidLexer, "trua");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("trua", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize18701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fo{");
            AphidLexerTests.TokenizeAll(aphidLexer, "fo{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fo{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12605()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delet[");
            AphidLexerTests.TokenizeAll(aphidLexer, "delet[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("delet[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize25701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finbA");
            AphidLexerTests.TokenizeAll(aphidLexer, "finbA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("finbA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize54204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switch{");
            AphidLexerTests.TokenizeAll(aphidLexer, "switch{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("switch{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize10001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("d");
            AphidLexerTests.TokenizeAll(aphidLexer, "d");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("d", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("saa");
            AphidLexerTests.TokenizeAll(aphidLexer, "saa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("saa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize96103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elsea");
            AphidLexerTests.TokenizeAll(aphidLexer, "elsea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("elsea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize97501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("do{");
            AphidLexerTests.TokenizeAll(aphidLexer, "do{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("do{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize33902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continu{");
            AphidLexerTests.TokenizeAll(aphidLexer, "continu{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continu{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize82105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finalý0");
            AphidLexerTests.TokenizeAll(aphidLexer, "finalý0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("finalý0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize4402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in{");
            AphidLexerTests.TokenizeAll(aphidLexer, "in{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("in{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize36806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fba");
            AphidLexerTests.TokenizeAll(aphidLexer, "fba");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fba", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize444()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finalA");
            AphidLexerTests.TokenizeAll(aphidLexer, "finalA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("finalA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize92802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delete");
            AphidLexerTests.TokenizeAll(aphidLexer, "delete");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("delete", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6207()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("trueA");
            AphidLexerTests.TokenizeAll(aphidLexer, "trueA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("trueA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize315()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continuaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "continuaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continuaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize13503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switcý0");
            AphidLexerTests.TokenizeAll(aphidLexer, "switcý0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("switcý0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize729()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switc");
            AphidLexerTests.TokenizeAll(aphidLexer, "switc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("switc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize37802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tr{");
            AphidLexerTests.TokenizeAll(aphidLexer, "tr{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tr{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ea");
            AphidLexerTests.TokenizeAll(aphidLexer, "ea");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ea", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize3703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deleteA");
            AphidLexerTests.TokenizeAll(aphidLexer, "deleteA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("deleteA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize83()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whilA");
            AphidLexerTests.TokenizeAll(aphidLexer, "whilA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whilA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize46102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tr");
            AphidLexerTests.TokenizeAll(aphidLexer, "tr");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tr", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("wh[");
            AphidLexerTests.TokenizeAll(aphidLexer, "wh[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("wh[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize32904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extend0");
            AphidLexerTests.TokenizeAll(aphidLexer, "extend0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("extend0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize381()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defauý0");
            AphidLexerTests.TokenizeAll(aphidLexer, "defauý0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defauý0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize77601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b0");
            AphidLexerTests.TokenizeAll(aphidLexer, "b0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("b0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize75001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu[");
            AphidLexerTests.TokenizeAll(aphidLexer, "nu[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nu[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("for");
            AphidLexerTests.TokenizeAll(aphidLexer, "for");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("for", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize25802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("us{");
            AphidLexerTests.TokenizeAll(aphidLexer, "us{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("us{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize915()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usiaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "usiaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usiaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize75104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("sw");
            AphidLexerTests.TokenizeAll(aphidLexer, "sw");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("sw", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize93402()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extae");
            AphidLexerTests.TokenizeAll(aphidLexer, "extae");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("extae", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize44304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("this0");
            AphidLexerTests.TokenizeAll(aphidLexer, "this0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("this0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize246()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finba");
            AphidLexerTests.TokenizeAll(aphidLexer, "finba");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("finba", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defa");
            AphidLexerTests.TokenizeAll(aphidLexer, "defa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize32504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lo{");
            AphidLexerTests.TokenizeAll(aphidLexer, "lo{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lo{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize414()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("e<");
            AphidLexerTests.TokenizeAll(aphidLexer, "e<");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("e<", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize37501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("u{");
            AphidLexerTests.TokenizeAll(aphidLexer, "u{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("u{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize46806()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ret0");
            AphidLexerTests.TokenizeAll(aphidLexer, "ret0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ret0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize54205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loa0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "loa0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loa0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize9002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("us");
            AphidLexerTests.TokenizeAll(aphidLexer, "us");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("us", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize19303()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("eA");
            AphidLexerTests.TokenizeAll(aphidLexer, "eA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("eA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize1501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("c[");
            AphidLexerTests.TokenizeAll(aphidLexer, "c[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("c[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize70002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delet0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "delet0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("delet0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize87304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("n[");
            AphidLexerTests.TokenizeAll(aphidLexer, "n[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("n[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize20904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bA");
            AphidLexerTests.TokenizeAll(aphidLexer, "bA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("bA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize23003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swiaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "swiaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swiaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize76902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elseA");
            AphidLexerTests.TokenizeAll(aphidLexer, "elseA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("elseA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize74006()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("de{");
            AphidLexerTests.TokenizeAll(aphidLexer, "de{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("de{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thaA");
            AphidLexerTests.TokenizeAll(aphidLexer, "thaA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize236()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("faaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "faaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("faaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize271()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("e[");
            AphidLexerTests.TokenizeAll(aphidLexer, "e[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("e[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize935()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("in");
            AphidLexerTests.TokenizeAll(aphidLexer, "in");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("in", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize86401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conti0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "conti0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("conti0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize85404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("falaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "falaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("falaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize14704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("do");
            AphidLexerTests.TokenizeAll(aphidLexer, "do");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("do", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize25203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("reaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "reaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("reaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize49702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "exaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize532()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nul");
            AphidLexerTests.TokenizeAll(aphidLexer, "nul");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nul", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize27701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "whaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize86301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0x00");
            AphidLexerTests.TokenizeAll(aphidLexer, "0x00");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0x00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize133()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defaua\0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "defaua\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defaua\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize971()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usingAa");
            AphidLexerTests.TokenizeAll(aphidLexer, "usingAa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usingAa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize49305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fi[");
            AphidLexerTests.TokenizeAll(aphidLexer, "fi[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fi[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize83901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b[");
            AphidLexerTests.TokenizeAll(aphidLexer, "b[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("b[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize89404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switcA\0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "switcA\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("switcA\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize50501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("this");
            AphidLexerTests.TokenizeAll(aphidLexer, "this");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("this", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize27203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defA");
            AphidLexerTests.TokenizeAll(aphidLexer, "defA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize761()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fi{");
            AphidLexerTests.TokenizeAll(aphidLexer, "fi{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fi{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("conti00");
            AphidLexerTests.TokenizeAll(aphidLexer, "conti00");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("conti00", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize54604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ca[");
            AphidLexerTests.TokenizeAll(aphidLexer, "ca[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ca[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize23105()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("caaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "caaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("caaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize81401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fo");
            AphidLexerTests.TokenizeAll(aphidLexer, "fo");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fo", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize4204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lo");
            AphidLexerTests.TokenizeAll(aphidLexer, "lo");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lo", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize69502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fiaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "fiaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fiaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize981()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("daa");
            AphidLexerTests.TokenizeAll(aphidLexer, "daa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("daa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize47903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loA0");
            AphidLexerTests.TokenizeAll(aphidLexer, "loA0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loA0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize47606()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nulaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "nulaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nulaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize64705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fi");
            AphidLexerTests.TokenizeAll(aphidLexer, "fi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65708()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defina\0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "defina\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defina\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("uaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "uaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("uaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize26104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cont\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "cont\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cont\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize97206()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switch0");
            AphidLexerTests.TokenizeAll(aphidLexer, "switch0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("switch0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize32703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "thaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize74703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cba");
            AphidLexerTests.TokenizeAll(aphidLexer, "cba");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cba", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize91405()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu{");
            AphidLexerTests.TokenizeAll(aphidLexer, "nu{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nu{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize93201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "deaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("deaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize22706()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("braa");
            AphidLexerTests.TokenizeAll(aphidLexer, "braa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("braa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{c");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{c");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{c", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize37703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continu");
            AphidLexerTests.TokenizeAll(aphidLexer, "continu");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize33502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("bre");
            AphidLexerTests.TokenizeAll(aphidLexer, "bre");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("bre", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize69503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exteA");
            AphidLexerTests.TokenizeAll(aphidLexer, "exteA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exteA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize80802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loc");
            AphidLexerTests.TokenizeAll(aphidLexer, "loc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize73102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("u");
            AphidLexerTests.TokenizeAll(aphidLexer, "u");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("u", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nu");
            AphidLexerTests.TokenizeAll(aphidLexer, "nu");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nu", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5407()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defba");
            AphidLexerTests.TokenizeAll(aphidLexer, "defba");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defba", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize17602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{cc");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{cc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{cc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize61204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("iaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "iaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("iaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize265()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thiaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "thiaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thiaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize26801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("con[");
            AphidLexerTests.TokenizeAll(aphidLexer, "con[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("con[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize49306()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nA\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "nA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize67401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fa[");
            AphidLexerTests.TokenizeAll(aphidLexer, "fa[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fa[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize60301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("foaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "foaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("foaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catcha\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "catcha\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catcha\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize91301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elsae");
            AphidLexerTests.TokenizeAll(aphidLexer, "elsae");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("elsae", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize70702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nulla");
            AphidLexerTests.TokenizeAll(aphidLexer, "nulla");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nulla", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize80903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{ca");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{ca");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{ca", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize2302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fal0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "fal0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fal0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize32103()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delet{");
            AphidLexerTests.TokenizeAll(aphidLexer, "delet{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("delet{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize41201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "elaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("elaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize3704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w{");
            AphidLexerTests.TokenizeAll(aphidLexer, "w{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("w{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize67602()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delet");
            AphidLexerTests.TokenizeAll(aphidLexer, "delet");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("delet", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize28902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switchA");
            AphidLexerTests.TokenizeAll(aphidLexer, "switchA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("switchA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize95802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ra");
            AphidLexerTests.TokenizeAll(aphidLexer, "ra");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize22002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("definý0");
            AphidLexerTests.TokenizeAll(aphidLexer, "definý0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("definý0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize2604()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nuaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "nuaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nuaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize16101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{c{");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{c{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{c{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize11802()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("waa");
            AphidLexerTests.TokenizeAll(aphidLexer, "waa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("waa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize157()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("coaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "coaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("coaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize95501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continue{");
            AphidLexerTests.TokenizeAll(aphidLexer, "continue{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continue{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize62302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breba");
            AphidLexerTests.TokenizeAll(aphidLexer, "breba");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("breba", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize8301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("swaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "swaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("swaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize18901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nAa");
            AphidLexerTests.TokenizeAll(aphidLexer, "nAa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nAa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize758()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("tru");
            AphidLexerTests.TokenizeAll(aphidLexer, "tru");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("tru", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize70703()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catac");
            AphidLexerTests.TokenizeAll(aphidLexer, "catac");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catac", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize44305()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extenda\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "extenda\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("extenda\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize485()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lock");
            AphidLexerTests.TokenizeAll(aphidLexer, "lock");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lock", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize14406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("eaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "eaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("eaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize3705()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("true");
            AphidLexerTests.TokenizeAll(aphidLexer, "true");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("true", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize33903()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switchA\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "switchA\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("switchA\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize35102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defin0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "defin0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defin0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize646()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("else");
            AphidLexerTests.TokenizeAll(aphidLexer, "else");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("else", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize28504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extenA\0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "extenA\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("extenA\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize946()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("null");
            AphidLexerTests.TokenizeAll(aphidLexer, "null");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("null", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize786()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("laa");
            AphidLexerTests.TokenizeAll(aphidLexer, "laa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("laa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize60904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("br");
            AphidLexerTests.TokenizeAll(aphidLexer, "br");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("br", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize24004()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "usaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize12101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ret");
            AphidLexerTests.TokenizeAll(aphidLexer, "ret");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ret", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize782()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finala\0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "finala\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("finala\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize987()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("con");
            AphidLexerTests.TokenizeAll(aphidLexer, "con");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("con", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize70003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("neaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "neaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("neaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("null0A");
            AphidLexerTests.TokenizeAll(aphidLexer, "null0A");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("null0A", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize70502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extendaA");
            AphidLexerTests.TokenizeAll(aphidLexer, "extendaA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("extendaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize3409()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0b00\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "0b00\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0b00\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize92504()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0xa\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "0xa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0xa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize48104()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switch0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "switch0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("switch0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize15202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extea\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "extea\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("extea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize18101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switch");
            AphidLexerTests.TokenizeAll(aphidLexer, "switch");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("switch", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize36002()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nA{");
            AphidLexerTests.TokenizeAll(aphidLexer, "nA{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nA{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize51506()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("brea0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "brea0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("brea0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize60201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{cac");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{cac");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{cac", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize71904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("retaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "retaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("retaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize50003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usin[");
            AphidLexerTests.TokenizeAll(aphidLexer, "usin[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usin[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize93709()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("else0");
            AphidLexerTests.TokenizeAll(aphidLexer, "else0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("else0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize43904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b{");
            AphidLexerTests.TokenizeAll(aphidLexer, "b{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("b{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38908()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whi");
            AphidLexerTests.TokenizeAll(aphidLexer, "whi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize24106()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("continue\0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "continue\0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("continue\0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize43501()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("0b01\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "0b01\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("0b01\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize437()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("r{");
            AphidLexerTests.TokenizeAll(aphidLexer, "r{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("r{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defau0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "defau0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defau0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize76801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{cat");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{cat");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{cat", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize69904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("extenA0");
            AphidLexerTests.TokenizeAll(aphidLexer, "extenA0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("extenA0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6308()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{catc");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{catc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{catc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize529()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("throwýA");
            AphidLexerTests.TokenizeAll(aphidLexer, "throwýA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("throwýA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize312()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("breaA");
            AphidLexerTests.TokenizeAll(aphidLexer, "breaA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("breaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6309()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nA");
            AphidLexerTests.TokenizeAll(aphidLexer, "nA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize51902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("baa");
            AphidLexerTests.TokenizeAll(aphidLexer, "baa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("baa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize11102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("r");
            AphidLexerTests.TokenizeAll(aphidLexer, "r");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("r", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize853()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{conticc");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{conticc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{conticc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize38203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{contin");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{contin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize22406()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{cat\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{cat\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{cat\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize40102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thro0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "thro0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thro0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize55001()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("de");
            AphidLexerTests.TokenizeAll(aphidLexer, "de");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("de", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize69003()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{continc");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{continc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{continc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5603()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{contin{");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{contin{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize57503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{contin");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{contin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize16707()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{contin\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{contin\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize63301()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{contin0");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{contin0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize65408()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{continA");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{continA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{continA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize57902()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{continac");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{continac");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{continac", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize56203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{contin_");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{contin_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize10702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{contincc");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{contincc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{contincc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize263()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{contin{");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{contin{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize29904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{contin");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{contin");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{contin", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize88704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thra");
            AphidLexerTests.TokenizeAll(aphidLexer, "thra");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thra", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize60503()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thr");
            AphidLexerTests.TokenizeAll(aphidLexer, "thr");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thr", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize33904()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("w");
            AphidLexerTests.TokenizeAll(aphidLexer, "w");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("w", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize80101()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("fals0");
            AphidLexerTests.TokenizeAll(aphidLexer, "fals0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("fals0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize82202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whiaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "whiaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whiaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize90505()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delete0");
            AphidLexerTests.TokenizeAll(aphidLexer, "delete0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("delete0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize51302()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("b");
            AphidLexerTests.TokenizeAll(aphidLexer, "b");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("b", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize70401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{catchcc");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{catchcc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{catchcc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize1403()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("doaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "doaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("doaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize916()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("dele");
            AphidLexerTests.TokenizeAll(aphidLexer, "dele");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("dele", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize14502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ifaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "ifaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ifaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize2205()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defaa\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "defaa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defaa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize53304()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("ext");
            AphidLexerTests.TokenizeAll(aphidLexer, "ext");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("ext", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize366()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("delea\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "delea\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("delea\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize79507()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{cccccc");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{cccccc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{cccccc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize9203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("s{");
            AphidLexerTests.TokenizeAll(aphidLexer, "s{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("s{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize18404()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nullaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "nullaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nullaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize10803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catca\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "catca\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catca\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize527()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("def[");
            AphidLexerTests.TokenizeAll(aphidLexer, "def[");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("def[", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize621()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nullAA");
            AphidLexerTests.TokenizeAll(aphidLexer, "nullAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nullAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize45704()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finaa\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "finaa\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("finaa\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize797()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thisaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "thisaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thisaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize5701()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("elsAa");
            AphidLexerTests.TokenizeAll(aphidLexer, "elsAa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("elsAa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize51201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loaaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "loaaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loaaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize72901()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loAA");
            AphidLexerTests.TokenizeAll(aphidLexer, "loAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize75502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{cont\0cc");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{cont\0cc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{cont\0cc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("switc_");
            AphidLexerTests.TokenizeAll(aphidLexer, "switc_");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("switc_", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize66803()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("defi0\0");
            AphidLexerTests.TokenizeAll(aphidLexer, "defi0\0");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("defi0\0", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize48202()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("load`");
            AphidLexerTests.TokenizeAll(aphidLexer, "load`");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("load`", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize73204()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{contacc");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{contacc");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{contacc", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize856()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thisAA");
            AphidLexerTests.TokenizeAll(aphidLexer, "thisAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thisAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize852()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("newaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "newaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("newaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize39702()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("exteaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "exteaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("exteaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize478()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("cat{contA");
            AphidLexerTests.TokenizeAll(aphidLexer, "cat{contA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("cat{contA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize95907()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("thro0A");
            AphidLexerTests.TokenizeAll(aphidLexer, "thro0A");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("thro0A", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize4502()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("deleaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "deleaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("deleaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize24601()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("lock0a");
            AphidLexerTests.TokenizeAll(aphidLexer, "lock0a");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("lock0a", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize60801()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("usi");
            AphidLexerTests.TokenizeAll(aphidLexer, "usi");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("usi", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize64201()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("loadaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "loadaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("loadaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize6310()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("finaaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "finaaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("finaaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize20905()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whileaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "whileaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whileaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize66203()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("whilea{");
            AphidLexerTests.TokenizeAll(aphidLexer, "whilea{");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("whilea{", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize552()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("catchaA");
            AphidLexerTests.TokenizeAll(aphidLexer, "catchaA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("catchaA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize36102()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("nAA");
            AphidLexerTests.TokenizeAll(aphidLexer, "nAA");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("nAA", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize195()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("inaa");
            AphidLexerTests.TokenizeAll(aphidLexer, "inaa");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("inaa", aphidLexer.Text);
        }

        [TestMethod]
        [PexGeneratedBy(typeof(AphidLexerTests))]
        /**/        public void Tokenize41401()
        {
            AphidLexer aphidLexer;
            aphidLexer = AphidLexerFactory.Create("null00");
            AphidLexerTests.TokenizeAll(aphidLexer, "null00");
            PexAssert.IsNotNull((object)aphidLexer);
            PexAssert.AreEqual<string>("null00", aphidLexer.Text);
        }

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize22202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.Tokenize(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize81603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\0");
    AphidLexerTests.Tokenize(aphidLexer, "\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize61006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("9");
    AphidLexerTests.Tokenize(aphidLexer, "9");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("9", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize90902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("Y");
    AphidLexerTests.Tokenize(aphidLexer, "Y");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("Y", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize54302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.Tokenize(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize98602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\0");
    AphidLexerTests.Tokenize(aphidLexer, "\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize32202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`");
    AphidLexerTests.Tokenize(aphidLexer, "`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize6104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K\0");
    AphidLexerTests.Tokenize(aphidLexer, "K\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize32505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("@");
    AphidLexerTests.Tokenize(aphidLexer, "@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize20302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("@\0");
    AphidLexerTests.Tokenize(aphidLexer, "@\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("@\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize19902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.Tokenize(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize68602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K0");
    AphidLexerTests.Tokenize(aphidLexer, "K0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize62401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("Ka");
    AphidLexerTests.Tokenize(aphidLexer, "Ka");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("Ka", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize390()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("KA");
    AphidLexerTests.Tokenize(aphidLexer, "KA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("KA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize85301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K{");
    AphidLexerTests.Tokenize(aphidLexer, "K{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize87502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("@>");
    AphidLexerTests.Tokenize(aphidLexer, "@>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("@>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize91302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K[");
    AphidLexerTests.Tokenize(aphidLexer, "K[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize948()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K");
    AphidLexerTests.Tokenize(aphidLexer, "K");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize24405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<");
    AphidLexerTests.Tokenize(aphidLexer, "K<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize9()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`\0");
    AphidLexerTests.Tokenize(aphidLexer, "`\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize16004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`:");
    AphidLexerTests.Tokenize(aphidLexer, "`:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize61401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`!");
    AphidLexerTests.Tokenize(aphidLexer, "`!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize15401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<\0");
    AphidLexerTests.Tokenize(aphidLexer, "K<\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize436()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`@");
    AphidLexerTests.Tokenize(aphidLexer, "`@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize57602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<@");
    AphidLexerTests.Tokenize(aphidLexer, "K<@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize5408()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("Q<`");
    AphidLexerTests.Tokenize(aphidLexer, "Q<`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("Q<`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize80904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<~");
    AphidLexerTests.Tokenize(aphidLexer, "K<~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize86803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`~");
    AphidLexerTests.Tokenize(aphidLexer, "`~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize8402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<|");
    AphidLexerTests.Tokenize(aphidLexer, "K<|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize990()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`|");
    AphidLexerTests.Tokenize(aphidLexer, "`|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize49001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<!");
    AphidLexerTests.Tokenize(aphidLexer, "K<!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize11803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<:");
    AphidLexerTests.Tokenize(aphidLexer, "K<:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize4503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("``");
    AphidLexerTests.Tokenize(aphidLexer, "``");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("``", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize14605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K</");
    AphidLexerTests.Tokenize(aphidLexer, "K</");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K</", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize78402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`/");
    AphidLexerTests.Tokenize(aphidLexer, "`/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize26005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(" ");
    AphidLexerTests.Tokenize(aphidLexer, " ");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(" ", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize954()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("h");
    AphidLexerTests.Tokenize(aphidLexer, "h");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("h", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize254()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=");
    AphidLexerTests.Tokenize(aphidLexer, "=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize27()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=\0");
    AphidLexerTests.Tokenize(aphidLexer, "=\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize74503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=@");
    AphidLexerTests.Tokenize(aphidLexer, "=@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize35()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=~");
    AphidLexerTests.Tokenize(aphidLexer, "=~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=|");
    AphidLexerTests.Tokenize(aphidLexer, "=|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize42903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=!");
    AphidLexerTests.Tokenize(aphidLexer, "=!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize7902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=`");
    AphidLexerTests.Tokenize(aphidLexer, "=`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize70402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=:");
    AphidLexerTests.Tokenize(aphidLexer, "=:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize778()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=/");
    AphidLexerTests.Tokenize(aphidLexer, "=/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize38204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=.");
    AphidLexerTests.Tokenize(aphidLexer, "=.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize98204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<.");
    AphidLexerTests.Tokenize(aphidLexer, "K<.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize45203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`.");
    AphidLexerTests.Tokenize(aphidLexer, "`.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize40803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("j");
    AphidLexerTests.Tokenize(aphidLexer, "j");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("j", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize61304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$");
    AphidLexerTests.Tokenize(aphidLexer, "$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize65904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$\0");
    AphidLexerTests.Tokenize(aphidLexer, "$\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("$\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize73406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$_");
    AphidLexerTests.Tokenize(aphidLexer, "$_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("$_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize62501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$a");
    AphidLexerTests.Tokenize(aphidLexer, "$a");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("$a", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize57603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$!");
    AphidLexerTests.Tokenize(aphidLexer, "$!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("$!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize70602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$a\0");
    AphidLexerTests.Tokenize(aphidLexer, "$a\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("$a\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize80803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$args");
    AphidLexerTests.Tokenize(aphidLexer, "$args");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("$args", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize66605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=?");
    AphidLexerTests.Tokenize(aphidLexer, "=?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize628()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`?");
    AphidLexerTests.Tokenize(aphidLexer, "`?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize979()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<?");
    AphidLexerTests.Tokenize(aphidLexer, "K<?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize9802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=]");
    AphidLexerTests.Tokenize(aphidLexer, "=]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize5702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<]");
    AphidLexerTests.Tokenize(aphidLexer, "K<]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize867()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`]");
    AphidLexerTests.Tokenize(aphidLexer, "`]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize95502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i");
    AphidLexerTests.Tokenize(aphidLexer, "i");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("i", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize46006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i\0");
    AphidLexerTests.Tokenize(aphidLexer, "i\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("i\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize99701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("iA");
    AphidLexerTests.Tokenize(aphidLexer, "iA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("iA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize13102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("in");
    AphidLexerTests.Tokenize(aphidLexer, "in");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("in", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize18802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("if");
    AphidLexerTests.Tokenize(aphidLexer, "if");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("if", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize820()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ia");
    AphidLexerTests.Tokenize(aphidLexer, "ia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize60602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i{");
    AphidLexerTests.Tokenize(aphidLexer, "i{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("i{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize73103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i0");
    AphidLexerTests.Tokenize(aphidLexer, "i0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("i0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize93501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("i");
    AphidLexerTests.Tokenize(aphidLexer, "i");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("i", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize96901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<-");
    AphidLexerTests.Tokenize(aphidLexer, "K<-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize91406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0");
    AphidLexerTests.Tokenize(aphidLexer, "0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize17104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0\0");
    AphidLexerTests.Tokenize(aphidLexer, "0\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize66403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0.");
    AphidLexerTests.Tokenize(aphidLexer, "0.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize738()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0b");
    AphidLexerTests.Tokenize(aphidLexer, "0b");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0b", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize14606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:");
    AphidLexerTests.Tokenize(aphidLexer, "0:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize33004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:\0");
    AphidLexerTests.Tokenize(aphidLexer, "0:\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize49002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0x");
    AphidLexerTests.Tokenize(aphidLexer, "0x");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0x", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize75706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0::");
    AphidLexerTests.Tokenize(aphidLexer, "0::");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0::", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize51507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:`");
    AphidLexerTests.Tokenize(aphidLexer, "0:`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize14104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:|");
    AphidLexerTests.Tokenize(aphidLexer, "0:|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize64001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:~");
    AphidLexerTests.Tokenize(aphidLexer, "0:~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize9606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:!");
    AphidLexerTests.Tokenize(aphidLexer, "0:!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize29605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:/");
    AphidLexerTests.Tokenize(aphidLexer, "0:/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize65603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:.");
    AphidLexerTests.Tokenize(aphidLexer, "0:.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize438()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:?");
    AphidLexerTests.Tokenize(aphidLexer, "0:?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize80206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:]");
    AphidLexerTests.Tokenize(aphidLexer, "0:]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize82603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:-");
    AphidLexerTests.Tokenize(aphidLexer, "0:-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize25401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`-");
    AphidLexerTests.Tokenize(aphidLexer, "`-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize7504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=-");
    AphidLexerTests.Tokenize(aphidLexer, "=-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize71004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`,");
    AphidLexerTests.Tokenize(aphidLexer, "`,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize73502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=,");
    AphidLexerTests.Tokenize(aphidLexer, "=,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize486()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(";");
    AphidLexerTests.Tokenize(aphidLexer, ";");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(";", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize29505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|");
    AphidLexerTests.Tokenize(aphidLexer, "|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize56701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|\0");
    AphidLexerTests.Tokenize(aphidLexer, "|\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize40901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|:");
    AphidLexerTests.Tokenize(aphidLexer, "|:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize21301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|@");
    AphidLexerTests.Tokenize(aphidLexer, "|@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize63302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("||");
    AphidLexerTests.Tokenize(aphidLexer, "||");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("||", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize27906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|~");
    AphidLexerTests.Tokenize(aphidLexer, "|~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize69004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|`");
    AphidLexerTests.Tokenize(aphidLexer, "|`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize21406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|!");
    AphidLexerTests.Tokenize(aphidLexer, "|!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize95803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|/");
    AphidLexerTests.Tokenize(aphidLexer, "|/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize89302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|.");
    AphidLexerTests.Tokenize(aphidLexer, "|.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize75903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|?");
    AphidLexerTests.Tokenize(aphidLexer, "|?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize38101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|]");
    AphidLexerTests.Tokenize(aphidLexer, "|]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize4105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|-");
    AphidLexerTests.Tokenize(aphidLexer, "|-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize32203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!");
    AphidLexerTests.Tokenize(aphidLexer, "!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize82203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!\0");
    AphidLexerTests.Tokenize(aphidLexer, "!\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize6105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!:");
    AphidLexerTests.Tokenize(aphidLexer, "!:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize7505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!@");
    AphidLexerTests.Tokenize(aphidLexer, "!@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize40302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!!");
    AphidLexerTests.Tokenize(aphidLexer, "!!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize15004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!`");
    AphidLexerTests.Tokenize(aphidLexer, "!`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize9803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!|");
    AphidLexerTests.Tokenize(aphidLexer, "!|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize4303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!~");
    AphidLexerTests.Tokenize(aphidLexer, "!~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize413()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!/");
    AphidLexerTests.Tokenize(aphidLexer, "!/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize19903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!.");
    AphidLexerTests.Tokenize(aphidLexer, "!.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize39906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!?");
    AphidLexerTests.Tokenize(aphidLexer, "!?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize568()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!]");
    AphidLexerTests.Tokenize(aphidLexer, "!]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize90102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!-");
    AphidLexerTests.Tokenize(aphidLexer, "!-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize531()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:,");
    AphidLexerTests.Tokenize(aphidLexer, "0:,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize63901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|,");
    AphidLexerTests.Tokenize(aphidLexer, "|,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize88303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("Y<,");
    AphidLexerTests.Tokenize(aphidLexer, "Y<,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("Y<,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize10703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!,");
    AphidLexerTests.Tokenize(aphidLexer, "!,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize598()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`>");
    AphidLexerTests.Tokenize(aphidLexer, "`>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize89405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!>");
    AphidLexerTests.Tokenize(aphidLexer, "!>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize6802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=>");
    AphidLexerTests.Tokenize(aphidLexer, "=>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize70503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<>");
    AphidLexerTests.Tokenize(aphidLexer, "K<>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize43002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|>");
    AphidLexerTests.Tokenize(aphidLexer, "|>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize5()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:>");
    AphidLexerTests.Tokenize(aphidLexer, "0:>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize33101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`)");
    AphidLexerTests.Tokenize(aphidLexer, "`)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize24005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=)");
    AphidLexerTests.Tokenize(aphidLexer, "=)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize29606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:(");
    AphidLexerTests.Tokenize(aphidLexer, "0:(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize65302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!)");
    AphidLexerTests.Tokenize(aphidLexer, "!)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize71401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|)");
    AphidLexerTests.Tokenize(aphidLexer, "|)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize30706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\"");
    AphidLexerTests.Tokenize(aphidLexer, "\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize16005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("Y<*");
    AphidLexerTests.Tokenize(aphidLexer, "Y<*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("Y<*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize48906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|\\");
    AphidLexerTests.Tokenize(aphidLexer, "|\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize1502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:^");
    AphidLexerTests.Tokenize(aphidLexer, "0:^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize60402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<^");
    AphidLexerTests.Tokenize(aphidLexer, "K<^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize21201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!\\");
    AphidLexerTests.Tokenize(aphidLexer, "!\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize99501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=\\");
    AphidLexerTests.Tokenize(aphidLexer, "=\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize569()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`\\");
    AphidLexerTests.Tokenize(aphidLexer, "`\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize55904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b");
    AphidLexerTests.Tokenize(aphidLexer, "b");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("b", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize91501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b\0");
    AphidLexerTests.Tokenize(aphidLexer, "b\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("b\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize33503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("br");
    AphidLexerTests.Tokenize(aphidLexer, "br");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("br", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize37302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ba");
    AphidLexerTests.Tokenize(aphidLexer, "ba");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ba", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize49003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b0");
    AphidLexerTests.Tokenize(aphidLexer, "b0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("b0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize4001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("br\0");
    AphidLexerTests.Tokenize(aphidLexer, "br\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("br\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize73503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b<");
    AphidLexerTests.Tokenize(aphidLexer, "b<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("b<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize89203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bra");
    AphidLexerTests.Tokenize(aphidLexer, "bra");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("bra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize4908()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bA");
    AphidLexerTests.Tokenize(aphidLexer, "bA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("bA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize18503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("br{");
    AphidLexerTests.Tokenize(aphidLexer, "br{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("br{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize70403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("brý");
    AphidLexerTests.Tokenize(aphidLexer, "brý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("brý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize448()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre");
    AphidLexerTests.Tokenize(aphidLexer, "bre");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("bre", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize91601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b[");
    AphidLexerTests.Tokenize(aphidLexer, "b[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("b[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize469()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("brA");
    AphidLexerTests.Tokenize(aphidLexer, "brA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("brA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize89303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("br0");
    AphidLexerTests.Tokenize(aphidLexer, "br0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("br0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize90103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre0");
    AphidLexerTests.Tokenize(aphidLexer, "bre0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("bre0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize11103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("brea");
    AphidLexerTests.Tokenize(aphidLexer, "brea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("brea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize67()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breA");
    AphidLexerTests.Tokenize(aphidLexer, "breA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("breA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize51801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre[");
    AphidLexerTests.Tokenize(aphidLexer, "bre[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("bre[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize88705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breb");
    AphidLexerTests.Tokenize(aphidLexer, "breb");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("breb", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize34101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b{");
    AphidLexerTests.Tokenize(aphidLexer, "b{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("b{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize58403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("b");
    AphidLexerTests.Tokenize(aphidLexer, "b");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("b", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize42805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre{");
    AphidLexerTests.Tokenize(aphidLexer, "bre{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("bre{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize281()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("breaa");
    AphidLexerTests.Tokenize(aphidLexer, "breaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("breaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize923()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("break");
    AphidLexerTests.Tokenize(aphidLexer, "break");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("break", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize59505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("bre");
    AphidLexerTests.Tokenize(aphidLexer, "bre");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("bre", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize85901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:)");
    AphidLexerTests.Tokenize(aphidLexer, "0:)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize48203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("Q<)");
    AphidLexerTests.Tokenize(aphidLexer, "Q<)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("Q<)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize41701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!*");
    AphidLexerTests.Tokenize(aphidLexer, "!*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize99001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`*");
    AphidLexerTests.Tokenize(aphidLexer, "`*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize89702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#");
    AphidLexerTests.Tokenize(aphidLexer, "#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize95103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#\0");
    AphidLexerTests.Tokenize(aphidLexer, "#\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize492()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#!");
    AphidLexerTests.Tokenize(aphidLexer, "#!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize30101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#:");
    AphidLexerTests.Tokenize(aphidLexer, "#:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize49903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#@");
    AphidLexerTests.Tokenize(aphidLexer, "#@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize11406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#|");
    AphidLexerTests.Tokenize(aphidLexer, "#|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize143()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#~");
    AphidLexerTests.Tokenize(aphidLexer, "#~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize36701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#`");
    AphidLexerTests.Tokenize(aphidLexer, "#`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize50405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#/");
    AphidLexerTests.Tokenize(aphidLexer, "#/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize19001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#.");
    AphidLexerTests.Tokenize(aphidLexer, "#.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize51104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#?");
    AphidLexerTests.Tokenize(aphidLexer, "#?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize844()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#]");
    AphidLexerTests.Tokenize(aphidLexer, "#]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize3801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#-");
    AphidLexerTests.Tokenize(aphidLexer, "#-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize58501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#,");
    AphidLexerTests.Tokenize(aphidLexer, "#,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize16708()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#>");
    AphidLexerTests.Tokenize(aphidLexer, "#>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize61007()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#)");
    AphidLexerTests.Tokenize(aphidLexer, "#)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize95603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#\\");
    AphidLexerTests.Tokenize(aphidLexer, "#\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize32301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#*");
    AphidLexerTests.Tokenize(aphidLexer, "#*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize57402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=*");
    AphidLexerTests.Tokenize(aphidLexer, "=*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize216()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|*");
    AphidLexerTests.Tokenize(aphidLexer, "|*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize39404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`<");
    AphidLexerTests.Tokenize(aphidLexer, "`<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize60603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<<");
    AphidLexerTests.Tokenize(aphidLexer, "K<<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize59506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<<\0");
    AphidLexerTests.Tokenize(aphidLexer, "K<<\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<<\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize253()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<<=");
    AphidLexerTests.Tokenize(aphidLexer, "K<<=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<<=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize40804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|<");
    AphidLexerTests.Tokenize(aphidLexer, "|<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize74202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!<");
    AphidLexerTests.Tokenize(aphidLexer, "!<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize92803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=<");
    AphidLexerTests.Tokenize(aphidLexer, "=<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize68903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:<");
    AphidLexerTests.Tokenize(aphidLexer, "0:<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize67506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#<");
    AphidLexerTests.Tokenize(aphidLexer, "#<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize82403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:*");
    AphidLexerTests.Tokenize(aphidLexer, "0:*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize53003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`+");
    AphidLexerTests.Tokenize(aphidLexer, "`+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize11104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&");
    AphidLexerTests.Tokenize(aphidLexer, "&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize59102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&\0");
    AphidLexerTests.Tokenize(aphidLexer, "&\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize82204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&@");
    AphidLexerTests.Tokenize(aphidLexer, "&@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize91210()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&!");
    AphidLexerTests.Tokenize(aphidLexer, "&!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize44702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&~");
    AphidLexerTests.Tokenize(aphidLexer, "&~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize39703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&:");
    AphidLexerTests.Tokenize(aphidLexer, "&:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize28505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&|");
    AphidLexerTests.Tokenize(aphidLexer, "&|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize69905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&`");
    AphidLexerTests.Tokenize(aphidLexer, "&`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize77801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&/");
    AphidLexerTests.Tokenize(aphidLexer, "&/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize91105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&.");
    AphidLexerTests.Tokenize(aphidLexer, "&.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize70004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&?");
    AphidLexerTests.Tokenize(aphidLexer, "&?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize80804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&]");
    AphidLexerTests.Tokenize(aphidLexer, "&]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize25402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&-");
    AphidLexerTests.Tokenize(aphidLexer, "&-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize76602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&,");
    AphidLexerTests.Tokenize(aphidLexer, "&,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize33603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&>");
    AphidLexerTests.Tokenize(aphidLexer, "&>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize32401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&)");
    AphidLexerTests.Tokenize(aphidLexer, "&)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize47102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&\\");
    AphidLexerTests.Tokenize(aphidLexer, "&\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize15803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&*");
    AphidLexerTests.Tokenize(aphidLexer, "&*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize91211()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&<");
    AphidLexerTests.Tokenize(aphidLexer, "&<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize80207()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("p");
    AphidLexerTests.Tokenize(aphidLexer, "p");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("p", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize57504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&+");
    AphidLexerTests.Tokenize(aphidLexer, "&+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize65803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|+");
    AphidLexerTests.Tokenize(aphidLexer, "|+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=+");
    AphidLexerTests.Tokenize(aphidLexer, "=+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize35607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("Q<+");
    AphidLexerTests.Tokenize(aphidLexer, "Q<+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("Q<+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize68904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#+");
    AphidLexerTests.Tokenize(aphidLexer, "#+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize918()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!+");
    AphidLexerTests.Tokenize(aphidLexer, "!+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize15502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|(");
    AphidLexerTests.Tokenize(aphidLexer, "|(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize93202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=(");
    AphidLexerTests.Tokenize(aphidLexer, "=(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize99402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("A<(");
    AphidLexerTests.Tokenize(aphidLexer, "A<(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("A<(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize82604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#^");
    AphidLexerTests.Tokenize(aphidLexer, "#^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize56102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("K<_");
    AphidLexerTests.Tokenize(aphidLexer, "K<_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("K<_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize8802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#(");
    AphidLexerTests.Tokenize(aphidLexer, "#(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize40705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=^");
    AphidLexerTests.Tokenize(aphidLexer, "=^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize11304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("0:+");
    AphidLexerTests.Tokenize(aphidLexer, "0:+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("0:+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize64202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`(");
    AphidLexerTests.Tokenize(aphidLexer, "`(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize51402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%");
    AphidLexerTests.Tokenize(aphidLexer, "%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize18504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%\0");
    AphidLexerTests.Tokenize(aphidLexer, "%\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize92301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%!");
    AphidLexerTests.Tokenize(aphidLexer, "%!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize47207()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%:");
    AphidLexerTests.Tokenize(aphidLexer, "%:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize87305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%@");
    AphidLexerTests.Tokenize(aphidLexer, "%@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize93403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%`");
    AphidLexerTests.Tokenize(aphidLexer, "%`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize4304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%|");
    AphidLexerTests.Tokenize(aphidLexer, "%|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize91701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%~");
    AphidLexerTests.Tokenize(aphidLexer, "%~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize8()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%/");
    AphidLexerTests.Tokenize(aphidLexer, "%/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize47801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%.");
    AphidLexerTests.Tokenize(aphidLexer, "%.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize63005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%?");
    AphidLexerTests.Tokenize(aphidLexer, "%?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize43101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%]");
    AphidLexerTests.Tokenize(aphidLexer, "%]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize51105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%-");
    AphidLexerTests.Tokenize(aphidLexer, "%-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize45204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%,");
    AphidLexerTests.Tokenize(aphidLexer, "%,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize35608()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%>");
    AphidLexerTests.Tokenize(aphidLexer, "%>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize74103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%)");
    AphidLexerTests.Tokenize(aphidLexer, "%)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize24701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%\\");
    AphidLexerTests.Tokenize(aphidLexer, "%\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize35704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%*");
    AphidLexerTests.Tokenize(aphidLexer, "%*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize57903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%<");
    AphidLexerTests.Tokenize(aphidLexer, "%<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize45502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%+");
    AphidLexerTests.Tokenize(aphidLexer, "%+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize53501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!(");
    AphidLexerTests.Tokenize(aphidLexer, "!(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize99604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("$ar");
    AphidLexerTests.Tokenize(aphidLexer, "$ar");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("$ar", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize6502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&(");
    AphidLexerTests.Tokenize(aphidLexer, "&(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize74104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%^");
    AphidLexerTests.Tokenize(aphidLexer, "%^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize9607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":@");
    AphidLexerTests.Tokenize(aphidLexer, ":@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(":@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize70504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%(");
    AphidLexerTests.Tokenize(aphidLexer, "%(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize93105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|^");
    AphidLexerTests.Tokenize(aphidLexer, "|^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize75307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!^");
    AphidLexerTests.Tokenize(aphidLexer, "!^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize64002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`^");
    AphidLexerTests.Tokenize(aphidLexer, "`^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize7506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("x");
    AphidLexerTests.Tokenize(aphidLexer, "x");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("x", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize24107()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\"\0");
    AphidLexerTests.Tokenize(aphidLexer, "\"\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\"\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize4305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\"\"");
    AphidLexerTests.Tokenize(aphidLexer, "\"\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\"\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize91702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&^");
    AphidLexerTests.Tokenize(aphidLexer, "&^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize26201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("==");
    AphidLexerTests.Tokenize(aphidLexer, "==");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("==", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize30()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&=");
    AphidLexerTests.Tokenize(aphidLexer, "&=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize59507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%=");
    AphidLexerTests.Tokenize(aphidLexer, "%=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize77702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#=");
    AphidLexerTests.Tokenize(aphidLexer, "#=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize28506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`=");
    AphidLexerTests.Tokenize(aphidLexer, "`=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize92505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|=");
    AphidLexerTests.Tokenize(aphidLexer, "|=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize53201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!=");
    AphidLexerTests.Tokenize(aphidLexer, "!=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize71101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`\"");
    AphidLexerTests.Tokenize(aphidLexer, "`\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize508()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#\"");
    AphidLexerTests.Tokenize(aphidLexer, "#\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize5006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("\'");
    AphidLexerTests.Tokenize(aphidLexer, "\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize46406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!\"");
    AphidLexerTests.Tokenize(aphidLexer, "!\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize46302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("z");
    AphidLexerTests.Tokenize(aphidLexer, "z");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("z", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize40001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=\"");
    AphidLexerTests.Tokenize(aphidLexer, "=\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize37502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%\"");
    AphidLexerTests.Tokenize(aphidLexer, "%\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize70005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&\"");
    AphidLexerTests.Tokenize(aphidLexer, "&\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize18702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|\"");
    AphidLexerTests.Tokenize(aphidLexer, "|\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize1404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`#");
    AphidLexerTests.Tokenize(aphidLexer, "`#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize71601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("##");
    AphidLexerTests.Tokenize(aphidLexer, "##");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("##", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize11202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("y");
    AphidLexerTests.Tokenize(aphidLexer, "y");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("y", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize1405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=#");
    AphidLexerTests.Tokenize(aphidLexer, "=#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize58005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!#");
    AphidLexerTests.Tokenize(aphidLexer, "!#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize11407()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%#");
    AphidLexerTests.Tokenize(aphidLexer, "%#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize71503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&#");
    AphidLexerTests.Tokenize(aphidLexer, "&#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize69802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|#");
    AphidLexerTests.Tokenize(aphidLexer, "|#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize21905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">");
    AphidLexerTests.Tokenize(aphidLexer, ">");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize30306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">\0");
    AphidLexerTests.Tokenize(aphidLexer, ">\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize23601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">@");
    AphidLexerTests.Tokenize(aphidLexer, ">@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize73303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">:");
    AphidLexerTests.Tokenize(aphidLexer, ">:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize93001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">~");
    AphidLexerTests.Tokenize(aphidLexer, ">~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize42205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">`");
    AphidLexerTests.Tokenize(aphidLexer, ">`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize83205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">!");
    AphidLexerTests.Tokenize(aphidLexer, ">!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize60403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">|");
    AphidLexerTests.Tokenize(aphidLexer, ">|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize18004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">/");
    AphidLexerTests.Tokenize(aphidLexer, ">/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize68905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">.");
    AphidLexerTests.Tokenize(aphidLexer, ">.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize65604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">?");
    AphidLexerTests.Tokenize(aphidLexer, ">?");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">?", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize3802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">]");
    AphidLexerTests.Tokenize(aphidLexer, ">]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize442()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">-");
    AphidLexerTests.Tokenize(aphidLexer, ">-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize99303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">,");
    AphidLexerTests.Tokenize(aphidLexer, ">,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize75707()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">>");
    AphidLexerTests.Tokenize(aphidLexer, ">>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize88304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">>\0");
    AphidLexerTests.Tokenize(aphidLexer, ">>\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">>\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize99502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">>=");
    AphidLexerTests.Tokenize(aphidLexer, ">>=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">>=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize44801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">)");
    AphidLexerTests.Tokenize(aphidLexer, ">)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize58006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">\\");
    AphidLexerTests.Tokenize(aphidLexer, ">\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize24702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">*");
    AphidLexerTests.Tokenize(aphidLexer, ">*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize46501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("><");
    AphidLexerTests.Tokenize(aphidLexer, "><");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("><", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize39102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">+");
    AphidLexerTests.Tokenize(aphidLexer, ">+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize55405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">(");
    AphidLexerTests.Tokenize(aphidLexer, ">(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize33304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">^");
    AphidLexerTests.Tokenize(aphidLexer, ">^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize7801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">=");
    AphidLexerTests.Tokenize(aphidLexer, ">=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize62202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">\"");
    AphidLexerTests.Tokenize(aphidLexer, ">\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize44003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">#");
    AphidLexerTests.Tokenize(aphidLexer, ">#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize44004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|_");
    AphidLexerTests.Tokenize(aphidLexer, "|_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize3601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&_");
    AphidLexerTests.Tokenize(aphidLexer, "&_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize372()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=_");
    AphidLexerTests.Tokenize(aphidLexer, "=_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize74704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("I<\\");
    AphidLexerTests.Tokenize(aphidLexer, "I<\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("I<\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize96205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%_");
    AphidLexerTests.Tokenize(aphidLexer, "%_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize59801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`_");
    AphidLexerTests.Tokenize(aphidLexer, "`_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize91407()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">_");
    AphidLexerTests.Tokenize(aphidLexer, ">_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize4002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#_");
    AphidLexerTests.Tokenize(aphidLexer, "#_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize21202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!_");
    AphidLexerTests.Tokenize(aphidLexer, "!_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize421()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&;");
    AphidLexerTests.Tokenize(aphidLexer, "&;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize31302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%;");
    AphidLexerTests.Tokenize(aphidLexer, "%;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize724()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#;");
    AphidLexerTests.Tokenize(aphidLexer, "#;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize99605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|;");
    AphidLexerTests.Tokenize(aphidLexer, "|;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize65303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!;");
    AphidLexerTests.Tokenize(aphidLexer, "!;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize1406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=;");
    AphidLexerTests.Tokenize(aphidLexer, "=;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize24108()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`;");
    AphidLexerTests.Tokenize(aphidLexer, "`;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize57904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">;");
    AphidLexerTests.Tokenize(aphidLexer, ">;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize8703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=$");
    AphidLexerTests.Tokenize(aphidLexer, "=$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize70505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%$");
    AphidLexerTests.Tokenize(aphidLexer, "%$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize65002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!$");
    AphidLexerTests.Tokenize(aphidLexer, "!$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize87201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&$");
    AphidLexerTests.Tokenize(aphidLexer, "&$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize22801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.Tokenize(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize28507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r");
    AphidLexerTests.Tokenize(aphidLexer, "r");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("r", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize5106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r\0");
    AphidLexerTests.Tokenize(aphidLexer, "r\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("r\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize76802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re");
    AphidLexerTests.Tokenize(aphidLexer, "re");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("re", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize60604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re\0");
    AphidLexerTests.Tokenize(aphidLexer, "re\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("re\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize60302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("reA");
    AphidLexerTests.Tokenize(aphidLexer, "reA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("reA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize62502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r0");
    AphidLexerTests.Tokenize(aphidLexer, "r0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("r0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize28702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re[");
    AphidLexerTests.Tokenize(aphidLexer, "re[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("re[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize1004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("rea");
    AphidLexerTests.Tokenize(aphidLexer, "rea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("rea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize94601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ret");
    AphidLexerTests.Tokenize(aphidLexer, "ret");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ret", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize75002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re{");
    AphidLexerTests.Tokenize(aphidLexer, "re{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("re{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize27402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ra");
    AphidLexerTests.Tokenize(aphidLexer, "ra");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ra", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize85601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("re0");
    AphidLexerTests.Tokenize(aphidLexer, "re0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("re0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize91001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r<");
    AphidLexerTests.Tokenize(aphidLexer, "r<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("r<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize60202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("reý");
    AphidLexerTests.Tokenize(aphidLexer, "reý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("reý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize69504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("rA");
    AphidLexerTests.Tokenize(aphidLexer, "rA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("rA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize44401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r{");
    AphidLexerTests.Tokenize(aphidLexer, "r{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("r{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize25301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("r");
    AphidLexerTests.Tokenize(aphidLexer, "r");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("r", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize93803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">$");
    AphidLexerTests.Tokenize(aphidLexer, ">$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize88403()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`$");
    AphidLexerTests.Tokenize(aphidLexer, "`$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize88901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|$");
    AphidLexerTests.Tokenize(aphidLexer, "|$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize97207()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#$");
    AphidLexerTests.Tokenize(aphidLexer, "#$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize42303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=&");
    AphidLexerTests.Tokenize(aphidLexer, "=&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize91002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#&");
    AphidLexerTests.Tokenize(aphidLexer, "#&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize18607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">&");
    AphidLexerTests.Tokenize(aphidLexer, ">&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize28602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?\0");
    AphidLexerTests.Tokenize(aphidLexer, "?\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize52901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?:");
    AphidLexerTests.Tokenize(aphidLexer, "?:");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?:", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize57204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?@");
    AphidLexerTests.Tokenize(aphidLexer, "?@");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?@", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize55002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?`");
    AphidLexerTests.Tokenize(aphidLexer, "?`");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?`", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize96507()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?~");
    AphidLexerTests.Tokenize(aphidLexer, "?~");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?~", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize52801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?!");
    AphidLexerTests.Tokenize(aphidLexer, "?!");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?!", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize94701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?|");
    AphidLexerTests.Tokenize(aphidLexer, "?|");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?|", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize26904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?/");
    AphidLexerTests.Tokenize(aphidLexer, "?/");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?/", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize28802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?.");
    AphidLexerTests.Tokenize(aphidLexer, "?.");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?.", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize56204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("??");
    AphidLexerTests.Tokenize(aphidLexer, "??");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("??", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize12903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?]");
    AphidLexerTests.Tokenize(aphidLexer, "?]");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?]", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize97602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?-");
    AphidLexerTests.Tokenize(aphidLexer, "?-");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?-", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize83206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?,");
    AphidLexerTests.Tokenize(aphidLexer, "?,");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?,", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize91106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?>");
    AphidLexerTests.Tokenize(aphidLexer, "?>");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?>", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize23106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?)");
    AphidLexerTests.Tokenize(aphidLexer, "?)");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?)", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize137()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?\\");
    AphidLexerTests.Tokenize(aphidLexer, "?\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize55201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?*");
    AphidLexerTests.Tokenize(aphidLexer, "?*");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?*", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize44504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?<");
    AphidLexerTests.Tokenize(aphidLexer, "?<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize25104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?+");
    AphidLexerTests.Tokenize(aphidLexer, "?+");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?+", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize59911()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?^");
    AphidLexerTests.Tokenize(aphidLexer, "?^");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?^", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize45503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?(");
    AphidLexerTests.Tokenize(aphidLexer, "?(");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?(", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize41605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?=");
    AphidLexerTests.Tokenize(aphidLexer, "?=");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?=", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize275()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?\"");
    AphidLexerTests.Tokenize(aphidLexer, "?\"");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?\"", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize27907()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?#");
    AphidLexerTests.Tokenize(aphidLexer, "?#");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?#", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize56606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?_");
    AphidLexerTests.Tokenize(aphidLexer, "?_");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?_", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize936()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?;");
    AphidLexerTests.Tokenize(aphidLexer, "?;");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?;", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize5409()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?$");
    AphidLexerTests.Tokenize(aphidLexer, "?$");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?$", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize88305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.Tokenize(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize97901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!&");
    AphidLexerTests.Tokenize(aphidLexer, "!&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize837()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`&");
    AphidLexerTests.Tokenize(aphidLexer, "`&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize2605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|&");
    AphidLexerTests.Tokenize(aphidLexer, "|&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize31501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&&");
    AphidLexerTests.Tokenize(aphidLexer, "&&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize97002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("q");
    AphidLexerTests.Tokenize(aphidLexer, "q");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("q", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize411()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?&");
    AphidLexerTests.Tokenize(aphidLexer, "?&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize142()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%&");
    AphidLexerTests.Tokenize(aphidLexer, "%&");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%&", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize10108()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d");
    AphidLexerTests.Tokenize(aphidLexer, "d");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("d", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize98603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d\0");
    AphidLexerTests.Tokenize(aphidLexer, "d\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("d\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize90001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d0");
    AphidLexerTests.Tokenize(aphidLexer, "d0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("d0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize99606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dA");
    AphidLexerTests.Tokenize(aphidLexer, "dA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("dA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize29806()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d<");
    AphidLexerTests.Tokenize(aphidLexer, "d<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("d<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize79402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("do");
    AphidLexerTests.Tokenize(aphidLexer, "do");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("do", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize56402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d[");
    AphidLexerTests.Tokenize(aphidLexer, "d[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("d[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize556()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de");
    AphidLexerTests.Tokenize(aphidLexer, "de");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("de", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize85004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de\0");
    AphidLexerTests.Tokenize(aphidLexer, "de\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("de\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize91902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de0");
    AphidLexerTests.Tokenize(aphidLexer, "de0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("de0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize69505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("deA");
    AphidLexerTests.Tokenize(aphidLexer, "deA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("deA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize35005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("da");
    AphidLexerTests.Tokenize(aphidLexer, "da");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("da", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize96104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("def");
    AphidLexerTests.Tokenize(aphidLexer, "def");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("def", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize15804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d{");
    AphidLexerTests.Tokenize(aphidLexer, "d{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("d{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize98604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de[");
    AphidLexerTests.Tokenize(aphidLexer, "de[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("de[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize85405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defb");
    AphidLexerTests.Tokenize(aphidLexer, "defb");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defb", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize33604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("def{");
    AphidLexerTests.Tokenize(aphidLexer, "def{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("def{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize362()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defA");
    AphidLexerTests.Tokenize(aphidLexer, "defA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize39301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("d");
    AphidLexerTests.Tokenize(aphidLexer, "d");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("d", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize95503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("def");
    AphidLexerTests.Tokenize(aphidLexer, "def");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("def", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize97502()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("del");
    AphidLexerTests.Tokenize(aphidLexer, "del");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("del", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize812()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defa");
    AphidLexerTests.Tokenize(aphidLexer, "defa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize51802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dela");
    AphidLexerTests.Tokenize(aphidLexer, "dela");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("dela", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize81901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("del{");
    AphidLexerTests.Tokenize(aphidLexer, "del{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("del{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize62801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("del");
    AphidLexerTests.Tokenize(aphidLexer, "del");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("del", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize34701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("def0");
    AphidLexerTests.Tokenize(aphidLexer, "def0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("def0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize48105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defau");
    AphidLexerTests.Tokenize(aphidLexer, "defau");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defau", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize3803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delA");
    AphidLexerTests.Tokenize(aphidLexer, "delA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize75402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dea");
    AphidLexerTests.Tokenize(aphidLexer, "dea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("dea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize29506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("dele");
    AphidLexerTests.Tokenize(aphidLexer, "dele");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("dele", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize73304()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de{");
    AphidLexerTests.Tokenize(aphidLexer, "de{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("de{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize50703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delea");
    AphidLexerTests.Tokenize(aphidLexer, "delea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize92102()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defaa");
    AphidLexerTests.Tokenize(aphidLexer, "defaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize66606()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("del0");
    AphidLexerTests.Tokenize(aphidLexer, "del0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("del0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize26202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("de");
    AphidLexerTests.Tokenize(aphidLexer, "de");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("de", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize95804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defi");
    AphidLexerTests.Tokenize(aphidLexer, "defi");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize86701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delet");
    AphidLexerTests.Tokenize(aphidLexer, "delet");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delet", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize94501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defin");
    AphidLexerTests.Tokenize(aphidLexer, "defin");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize37002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("delete");
    AphidLexerTests.Tokenize(aphidLexer, "delete");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("delete", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize30003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("defia");
    AphidLexerTests.Tokenize(aphidLexer, "defia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("defia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize18005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`%");
    AphidLexerTests.Tokenize(aphidLexer, "`%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize6004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=%");
    AphidLexerTests.Tokenize(aphidLexer, "=%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize60504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#%");
    AphidLexerTests.Tokenize(aphidLexer, "#%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize29203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?%");
    AphidLexerTests.Tokenize(aphidLexer, "?%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize68801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|%");
    AphidLexerTests.Tokenize(aphidLexer, "|%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize88504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">%");
    AphidLexerTests.Tokenize(aphidLexer, ">%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize82001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!%");
    AphidLexerTests.Tokenize(aphidLexer, "!%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize33702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.Tokenize(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize89204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&%");
    AphidLexerTests.Tokenize(aphidLexer, "&%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize61402()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%%");
    AphidLexerTests.Tokenize(aphidLexer, "%%");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%%", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize81503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(":\\");
    AphidLexerTests.Tokenize(aphidLexer, ":\\");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(":\\", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize56607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("|\'");
    AphidLexerTests.Tokenize(aphidLexer, "|\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("|\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize30903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create(">\'");
    AphidLexerTests.Tokenize(aphidLexer, ">\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>(">\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize6106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("!\'");
    AphidLexerTests.Tokenize(aphidLexer, "!\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("!\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize85201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.Tokenize(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize88404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("?\'");
    AphidLexerTests.Tokenize(aphidLexer, "?\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("?\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize66404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("%\'");
    AphidLexerTests.Tokenize(aphidLexer, "%\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("%\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize19705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("#\'");
    AphidLexerTests.Tokenize(aphidLexer, "#\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("#\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize70006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("`\'");
    AphidLexerTests.Tokenize(aphidLexer, "`\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("`\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize838()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c");
    AphidLexerTests.Tokenize(aphidLexer, "c");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("c", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize95908()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c\0");
    AphidLexerTests.Tokenize(aphidLexer, "c\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("c\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize39302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cA");
    AphidLexerTests.Tokenize(aphidLexer, "cA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize22501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cb");
    AphidLexerTests.Tokenize(aphidLexer, "cb");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cb", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize14803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ca");
    AphidLexerTests.Tokenize(aphidLexer, "ca");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize48907()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ca\0");
    AphidLexerTests.Tokenize(aphidLexer, "ca\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ca\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize37803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c[");
    AphidLexerTests.Tokenize(aphidLexer, "c[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("c[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize11005()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("co");
    AphidLexerTests.Tokenize(aphidLexer, "co");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("co", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize23301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat");
    AphidLexerTests.Tokenize(aphidLexer, "cat");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize39405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c0");
    AphidLexerTests.Tokenize(aphidLexer, "c0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("c0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize21()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("co\0");
    AphidLexerTests.Tokenize(aphidLexer, "co\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("co\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize83006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c{");
    AphidLexerTests.Tokenize(aphidLexer, "c{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("c{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize74903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("caA");
    AphidLexerTests.Tokenize(aphidLexer, "caA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("caA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize66607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("caa");
    AphidLexerTests.Tokenize(aphidLexer, "caa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("caa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize85104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("coa");
    AphidLexerTests.Tokenize(aphidLexer, "coa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("coa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize26802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("c");
    AphidLexerTests.Tokenize(aphidLexer, "c");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("c", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize40805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("co{");
    AphidLexerTests.Tokenize(aphidLexer, "co{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("co{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize62703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("coý");
    AphidLexerTests.Tokenize(aphidLexer, "coý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("coý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize44505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ca{");
    AphidLexerTests.Tokenize(aphidLexer, "ca{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ca{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize93302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("caý");
    AphidLexerTests.Tokenize(aphidLexer, "caý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("caý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize97208()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con");
    AphidLexerTests.Tokenize(aphidLexer, "con");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("con", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize21302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("co0");
    AphidLexerTests.Tokenize(aphidLexer, "co0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("co0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize48303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con0");
    AphidLexerTests.Tokenize(aphidLexer, "con0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("con0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize3106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ca0");
    AphidLexerTests.Tokenize(aphidLexer, "ca0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ca0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize14407()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("coA");
    AphidLexerTests.Tokenize(aphidLexer, "coA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("coA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize72902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conA");
    AphidLexerTests.Tokenize(aphidLexer, "conA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("conA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize27602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con[");
    AphidLexerTests.Tokenize(aphidLexer, "con[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("con[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize79601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cona");
    AphidLexerTests.Tokenize(aphidLexer, "cona");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cona", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize96105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cont");
    AphidLexerTests.Tokenize(aphidLexer, "cont");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cont", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize62704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con{");
    AphidLexerTests.Tokenize(aphidLexer, "con{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("con{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize69906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conta");
    AphidLexerTests.Tokenize(aphidLexer, "conta");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("conta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize65103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("conti");
    AphidLexerTests.Tokenize(aphidLexer, "conti");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("conti", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize13001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cata");
    AphidLexerTests.Tokenize(aphidLexer, "cata");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cata", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize9701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catc");
    AphidLexerTests.Tokenize(aphidLexer, "catc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize75708()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat0");
    AphidLexerTests.Tokenize(aphidLexer, "cat0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize84203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat{");
    AphidLexerTests.Tokenize(aphidLexer, "cat{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize419()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("cat");
    AphidLexerTests.Tokenize(aphidLexer, "cat");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("cat", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize491()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catA");
    AphidLexerTests.Tokenize(aphidLexer, "catA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize86206()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("con");
    AphidLexerTests.Tokenize(aphidLexer, "con");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("con", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize466()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catch");
    AphidLexerTests.Tokenize(aphidLexer, "catch");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catch", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize32704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("catca");
    AphidLexerTests.Tokenize(aphidLexer, "catca");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("catca", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize63204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("=\'");
    AphidLexerTests.Tokenize(aphidLexer, "=\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("=\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize24006()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("&\'");
    AphidLexerTests.Tokenize(aphidLexer, "&\'");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("&\'", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize12405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.Tokenize(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize64103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s");
    AphidLexerTests.Tokenize(aphidLexer, "s");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("s", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize88405()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s\0");
    AphidLexerTests.Tokenize(aphidLexer, "s\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("s\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize15903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sA");
    AphidLexerTests.Tokenize(aphidLexer, "sA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("sA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize38004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sa");
    AphidLexerTests.Tokenize(aphidLexer, "sa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("sa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize42702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s{");
    AphidLexerTests.Tokenize(aphidLexer, "s{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("s{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize15701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s0");
    AphidLexerTests.Tokenize(aphidLexer, "s0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("s0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize594()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sw");
    AphidLexerTests.Tokenize(aphidLexer, "sw");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("sw", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize32705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("s");
    AphidLexerTests.Tokenize(aphidLexer, "s");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("s", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize73504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sw\0");
    AphidLexerTests.Tokenize(aphidLexer, "sw\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("sw\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize24406()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sw0");
    AphidLexerTests.Tokenize(aphidLexer, "sw0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("sw0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize8803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swa");
    AphidLexerTests.Tokenize(aphidLexer, "swa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize43601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swA");
    AphidLexerTests.Tokenize(aphidLexer, "swA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize90002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("sw{");
    AphidLexerTests.Tokenize(aphidLexer, "sw{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("sw{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize11305()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swý");
    AphidLexerTests.Tokenize(aphidLexer, "swý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize46601()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swi");
    AphidLexerTests.Tokenize(aphidLexer, "swi");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize3602()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swia");
    AphidLexerTests.Tokenize(aphidLexer, "swia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize28303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swi{");
    AphidLexerTests.Tokenize(aphidLexer, "swi{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swi{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize80504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swi0");
    AphidLexerTests.Tokenize(aphidLexer, "swi0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swi0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize27603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swit");
    AphidLexerTests.Tokenize(aphidLexer, "swit");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swit", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize64203()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switc");
    AphidLexerTests.Tokenize(aphidLexer, "switc");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switc", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize44904()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swi");
    AphidLexerTests.Tokenize(aphidLexer, "swi");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize41101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swiA");
    AphidLexerTests.Tokenize(aphidLexer, "swiA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize91408()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("swita");
    AphidLexerTests.Tokenize(aphidLexer, "swita");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("swita", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize328()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("switch");
    AphidLexerTests.Tokenize(aphidLexer, "switch");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("switch", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize92205()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.Tokenize(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize69703()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e");
    AphidLexerTests.Tokenize(aphidLexer, "e");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("e", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize75308()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e\0");
    AphidLexerTests.Tokenize(aphidLexer, "e\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("e\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize78801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e0");
    AphidLexerTests.Tokenize(aphidLexer, "e0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("e0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize61902()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("el");
    AphidLexerTests.Tokenize(aphidLexer, "el");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("el", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize56801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("el\0");
    AphidLexerTests.Tokenize(aphidLexer, "el\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("el\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize97802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("eA");
    AphidLexerTests.Tokenize(aphidLexer, "eA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("eA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize25302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e[");
    AphidLexerTests.Tokenize(aphidLexer, "e[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("e[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize16503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ea");
    AphidLexerTests.Tokenize(aphidLexer, "ea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize35705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elA");
    AphidLexerTests.Tokenize(aphidLexer, "elA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("elA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize81101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("els");
    AphidLexerTests.Tokenize(aphidLexer, "els");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("els", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize95104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("el[");
    AphidLexerTests.Tokenize(aphidLexer, "el[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("el[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize75309()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ela");
    AphidLexerTests.Tokenize(aphidLexer, "ela");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ela", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize87503()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("el0");
    AphidLexerTests.Tokenize(aphidLexer, "el0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("el0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize64706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex");
    AphidLexerTests.Tokenize(aphidLexer, "ex");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ex", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize25204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e{");
    AphidLexerTests.Tokenize(aphidLexer, "e{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("e{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize70506()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex\0");
    AphidLexerTests.Tokenize(aphidLexer, "ex\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ex\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize35801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exa");
    AphidLexerTests.Tokenize(aphidLexer, "exa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize74504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex0");
    AphidLexerTests.Tokenize(aphidLexer, "ex0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ex0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize3603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("el{");
    AphidLexerTests.Tokenize(aphidLexer, "el{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("el{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize56702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("e");
    AphidLexerTests.Tokenize(aphidLexer, "e");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("e", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize4306()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("else");
    AphidLexerTests.Tokenize(aphidLexer, "else");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("else", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize87702()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elý");
    AphidLexerTests.Tokenize(aphidLexer, "elý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("elý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize477()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("els0");
    AphidLexerTests.Tokenize(aphidLexer, "els0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("els0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize65709()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elsa");
    AphidLexerTests.Tokenize(aphidLexer, "elsa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("elsa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize21705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex<");
    AphidLexerTests.Tokenize(aphidLexer, "ex<");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ex<", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize79701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("els{");
    AphidLexerTests.Tokenize(aphidLexer, "els{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("els{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize95105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ext");
    AphidLexerTests.Tokenize(aphidLexer, "ext");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ext", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize69704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("elsA");
    AphidLexerTests.Tokenize(aphidLexer, "elsA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("elsA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize38701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exA");
    AphidLexerTests.Tokenize(aphidLexer, "exA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize58404()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exta");
    AphidLexerTests.Tokenize(aphidLexer, "exta");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exta", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize26301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ext0");
    AphidLexerTests.Tokenize(aphidLexer, "ext0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ext0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize87804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ext{");
    AphidLexerTests.Tokenize(aphidLexer, "ext{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ext{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize1903()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ext");
    AphidLexerTests.Tokenize(aphidLexer, "ext");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ext", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize790()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exte");
    AphidLexerTests.Tokenize(aphidLexer, "exte");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exte", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize20204()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("els");
    AphidLexerTests.Tokenize(aphidLexer, "els");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("els", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize48701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exten");
    AphidLexerTests.Tokenize(aphidLexer, "exten");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exten", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize84901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extA");
    AphidLexerTests.Tokenize(aphidLexer, "extA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize47607()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extea");
    AphidLexerTests.Tokenize(aphidLexer, "extea");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extea", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize22003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("ex{");
    AphidLexerTests.Tokenize(aphidLexer, "ex{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("ex{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize26604()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("exý");
    AphidLexerTests.Tokenize(aphidLexer, "exý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("exý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize90104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("extend");
    AphidLexerTests.Tokenize(aphidLexer, "extend");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("extend", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize70302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("");
    AphidLexerTests.Tokenize(aphidLexer, "");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize23004()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f");
    AphidLexerTests.Tokenize(aphidLexer, "f");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("f", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize39()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f\0");
    AphidLexerTests.Tokenize(aphidLexer, "f\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("f\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize9003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi");
    AphidLexerTests.Tokenize(aphidLexer, "fi");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fi", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize76803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fo");
    AphidLexerTests.Tokenize(aphidLexer, "fo");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fo", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize58101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fo\0");
    AphidLexerTests.Tokenize(aphidLexer, "fo\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fo\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize14105()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi\0");
    AphidLexerTests.Tokenize(aphidLexer, "fi\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fi\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize98901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f0");
    AphidLexerTests.Tokenize(aphidLexer, "f0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("f0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize44104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fiA");
    AphidLexerTests.Tokenize(aphidLexer, "fiA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fiA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize41202()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("foA");
    AphidLexerTests.Tokenize(aphidLexer, "foA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("foA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize17401()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin");
    AphidLexerTests.Tokenize(aphidLexer, "fin");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize80505()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("for");
    AphidLexerTests.Tokenize(aphidLexer, "for");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("for", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize12706()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("foa");
    AphidLexerTests.Tokenize(aphidLexer, "foa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("foa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize86()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fo0");
    AphidLexerTests.Tokenize(aphidLexer, "fo0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fo0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize31303()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fia");
    AphidLexerTests.Tokenize(aphidLexer, "fia");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fia", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize2805()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finb");
    AphidLexerTests.Tokenize(aphidLexer, "finb");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("finb", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize40002()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fA");
    AphidLexerTests.Tokenize(aphidLexer, "fA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize93804()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finA");
    AphidLexerTests.Tokenize(aphidLexer, "finA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("finA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize90803()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fo{");
    AphidLexerTests.Tokenize(aphidLexer, "fo{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fo{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize46103()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin0");
    AphidLexerTests.Tokenize(aphidLexer, "fin0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fin0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize73104()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi0");
    AphidLexerTests.Tokenize(aphidLexer, "fi0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fi0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize39802()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fi{");
    AphidLexerTests.Tokenize(aphidLexer, "fi{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fi{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize51003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin[");
    AphidLexerTests.Tokenize(aphidLexer, "fin[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fin[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize6701()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa");
    AphidLexerTests.Tokenize(aphidLexer, "fa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize69705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fina");
    AphidLexerTests.Tokenize(aphidLexer, "fina");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fina", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize14301()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa\0");
    AphidLexerTests.Tokenize(aphidLexer, "fa\0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fa\0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize67906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f[");
    AphidLexerTests.Tokenize(aphidLexer, "f[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("f[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize98101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fb");
    AphidLexerTests.Tokenize(aphidLexer, "fb");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fb", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize43801()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("faa");
    AphidLexerTests.Tokenize(aphidLexer, "faa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("faa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize70201()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin{");
    AphidLexerTests.Tokenize(aphidLexer, "fin{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fin{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize46901()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("faA");
    AphidLexerTests.Tokenize(aphidLexer, "faA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("faA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize334()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fin");
    AphidLexerTests.Tokenize(aphidLexer, "fin");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fin", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize20001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa0");
    AphidLexerTests.Tokenize(aphidLexer, "fa0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fa0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize82605()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa[");
    AphidLexerTests.Tokenize(aphidLexer, "fa[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fa[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize96106()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fal");
    AphidLexerTests.Tokenize(aphidLexer, "fal");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fal", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize50905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("foý");
    AphidLexerTests.Tokenize(aphidLexer, "foý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("foý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize35905()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fa{");
    AphidLexerTests.Tokenize(aphidLexer, "fa{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fa{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize68603()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("finaa");
    AphidLexerTests.Tokenize(aphidLexer, "finaa");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("finaa", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize36003()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("final");
    AphidLexerTests.Tokenize(aphidLexer, "final");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("final", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize85501()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("faý");
    AphidLexerTests.Tokenize(aphidLexer, "faý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("faý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize14705()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f{");
    AphidLexerTests.Tokenize(aphidLexer, "f{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("f{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize10704()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("falA");
    AphidLexerTests.Tokenize(aphidLexer, "falA");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("falA", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize35307()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("f");
    AphidLexerTests.Tokenize(aphidLexer, "f");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("f", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize20906()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fal[");
    AphidLexerTests.Tokenize(aphidLexer, "fal[");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fal[", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize952()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fiý");
    AphidLexerTests.Tokenize(aphidLexer, "fiý");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fiý", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize42101()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fal0");
    AphidLexerTests.Tokenize(aphidLexer, "fal0");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fal0", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize67001()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fala");
    AphidLexerTests.Tokenize(aphidLexer, "fala");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fala", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize737()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fals");
    AphidLexerTests.Tokenize(aphidLexer, "fals");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fals", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize55302()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("fal{");
    AphidLexerTests.Tokenize(aphidLexer, "fal{");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("fal{", aphidLexer.Text);
}

[TestMethod]
[PexGeneratedBy(typeof(AphidLexerTests))]
/**/public void Tokenize38504()
{
    AphidLexer aphidLexer;
    aphidLexer = AphidLexerFactory.Create("false");
    AphidLexerTests.Tokenize(aphidLexer, "false");
    PexAssert.IsNotNull((object)aphidLexer);
    PexAssert.AreEqual<string>("false", aphidLexer.Text);
}
    }
}
