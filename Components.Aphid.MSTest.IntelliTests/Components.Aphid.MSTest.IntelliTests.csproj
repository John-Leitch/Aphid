<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\Microsoft.Net.Compilers.3.2.0-beta4-final\build\Microsoft.Net.Compilers.props" Condition="Exists('..\packages\Microsoft.Net.Compilers.3.2.0-beta4-final\build\Microsoft.Net.Compilers.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{FEC02CA7-27DF-426F-BB3C-41CC35404390}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Components.Aphid.MSTest.IntelliTests</RootNamespace>
    <AssemblyName>Components.Aphid.MSTest.IntelliTests</AssemblyName>
    <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">10.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <ReferencePath>$(ProgramFiles)\Common Files\microsoft shared\VSTT\$(VisualStudioVersion)\UITestExtensionPackages</ReferencePath>
    <IsCodedUITest>False</IsCodedUITest>
    <TestProjectType>UnitTest</TestProjectType>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <LangVersion>latest</LangVersion>
    <GenerateSerializationAssemblies>Off</GenerateSerializationAssemblies>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.Pex.Framework, Version=15.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL" />
    <Reference Include="System" />
    <Reference Include="System.Runtime" />
    <Reference Include="System.Runtime.InteropServices" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Threading.Thread" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Components.Aphid\Components.Aphid.csproj">
      <Project>{4249DB75-BBB6-4CC4-B046-3170DD1D3BC1}</Project>
      <Name>Components.Aphid</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="AphidAliasTest.cs" />
    <Compile Include="AphidCliTest.cs" />
    <Compile Include="AphidFunctionConverterTest.cs" />
    <Compile Include="AphidFunctionWrapperTest.cs" />
    <Compile Include="AphidInteropFunctionTest.cs" />
    <Compile Include="AphidInteropMethodArgTest.cs" />
    <Compile Include="AphidInterpreterTest.AddImport.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.CallFunction01.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.CallFunction02.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.CallFunctionWithScope.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.CallInteropFunction.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.CallStaticInteropFunction.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.Constructor.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.Constructor01.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.Constructor02.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.Constructor03.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.Constructor04.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.Constructor05.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.Constructor06.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.Constructor07.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.CreateEntryFrame.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.CreateExpressionException.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.CreateInternalException.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.CreateIpcClientContext.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.CreateRuntimeException.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.CreateRuntimeException01.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.CreateValueException.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.cs" />
    <Compile Include="AphidInterpreterTest.CurrentScopeGet.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.EnterScope.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.GetFrameArrayGet.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.GetImports.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.GetIpcContextType.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.GetReturnValue.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.GetScriptFilename.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.GetStackFrame.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.GetStackFrame01.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.InsertNext.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.Interpret.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.Interpret01.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.Interpret02.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.InterpretFile.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.InterpretFile01.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.InterpretStream.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.LeaveScope.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.LeaveSharedScope.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.PopFrame.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.PopQueuedFrames.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.PopQueuedFrames01.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.PreviousScopeGet.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.RegisterIpcServer.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.ResetState.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.SetInitialScope.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.SetIsInTryCatchFinally.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.SetScriptFilename.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.TakeOwnership.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.WrapInteropValue.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidInterpreterTest.WriteOut.g.cs">
      <DependentUpon>AphidInterpreterTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidLexerTests.cs" />
    <Compile Include="AphidLexerTests.Tokenize.g.cs">
      <DependentUpon>AphidLexerTests.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidLexerTests.TokenizeAll.g.cs">
      <DependentUpon>AphidLexerTests.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidLexerTests.TokenizeDocument.g.cs">
      <DependentUpon>AphidLexerTests.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidLexerTests.TokenizeDocumentAll.g.cs">
      <DependentUpon>AphidLexerTests.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidMutatorTest.cs" />
    <Compile Include="AphidMutatorTest.Mutate.g.cs">
      <DependentUpon>AphidMutatorTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidMutatorTest.MutateRecursively.g.cs">
      <DependentUpon>AphidMutatorTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidMutatorTest.MutateSingle.g.cs">
      <DependentUpon>AphidMutatorTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidMutatorTest.Reset.g.cs">
      <DependentUpon>AphidMutatorTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.Bind.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.Complex.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.Complex01.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.ConvertFrom.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.ConvertFrom01.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.ConvertFrom02.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.ConvertTo.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.ConvertToArray.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.CopyTo.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.CreateChild.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.cs" />
    <Compile Include="AphidObjectTest.FlattenScope.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.GetBool.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.GetDeepHashCode.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.GetFunction.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.GetHashCode01.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.GetList.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.GetNumber.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.GetObjectData.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.GetPropertyInfo.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.GetScopeAncestors.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.GetString.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.GetStringList.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.GetTypeName.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.GetValueType.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.GetValueType01.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.IsAphidType.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.IsAphidType01.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.IsComplexitySetGet.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.IsDefined.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.Resolve.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.Scalar.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.Scope01.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.ToString01.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.TryResolveAndRemove.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidObjectTest.TryResolveParent.g.cs">
      <DependentUpon>AphidObjectTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidParserTest.cs" />
    <Compile Include="AphidParserTest.ParseFunctionExpression.g.cs">
      <DependentUpon>AphidParserTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidParserTest.ParsePrefixUnaryOperatorExpression.g.cs">
      <DependentUpon>AphidParserTest.cs</DependentUpon>
    </Compile>
    <Compile Include="AphidScopeObjectAutocompletionSourceTest.cs" />
    <Compile Include="AphidTypeConverterTest.cs" />
    <Compile Include="ArgLexerTest.cs" />
    <Compile Include="ArgumentTypeCacheTest.cs" />
    <Compile Include="AutocompleteConsoleTest.cs" />
    <Compile Include="CliTest.cs" />
    <Compile Include="EnumerableExtensionTest.cs" />
    <Compile Include="Factories\AphidExpressionFactory.cs" />
    <Compile Include="Factories\AphidFunctionFactory.cs" />
    <Compile Include="Factories\AphidInteropFunctionAttributeFactory.cs" />
    <Compile Include="Factories\AphidInteropFunctionFactory.cs" />
    <Compile Include="Factories\AphidInteropMethodInfoFactory.cs" />
    <Compile Include="Factories\AphidInterpreterFactory.cs" />
    <Compile Include="Factories\AphidLexerFactory.cs" />
    <Compile Include="Factories\AphidObjectFactory.cs" />
    <Compile Include="Factories\AphidPreprocessorDirectiveMutatorFactory.cs" />
    <Compile Include="Factories\ArrayAccessExpressionFactory.cs" />
    <Compile Include="Factories\ArrayExpressionFactory.cs" />
    <Compile Include="Factories\BinaryOperatorBodyExpressionFactory.cs" />
    <Compile Include="Factories\BinaryOperatorExpressionFactory.cs" />
    <Compile Include="Factories\BooleanExpressionFactory.cs" />
    <Compile Include="Factories\BreakExpressionFactory.cs" />
    <Compile Include="Factories\CallExpressionFactory.cs" />
    <Compile Include="Factories\CallIdentifierMutatorFactory.cs" />
    <Compile Include="Factories\ContinueExpressionFactory.cs" />
    <Compile Include="Factories\DoWhileExpressionFactory.cs" />
    <Compile Include="Factories\DynamicMemberExpressionFactory.cs" />
    <Compile Include="Factories\ExtendExpressionFactory.cs" />
    <Compile Include="Factories\FastResourceComparerFactory.cs" />
    <Compile Include="Factories\ForEachExpressionFactory.cs" />
    <Compile Include="Factories\ForExpressionFactory.cs" />
    <Compile Include="Factories\FunctionExpressionFactory.cs" />
    <Compile Include="Factories\GatorCloseExpressionFactory.cs" />
    <Compile Include="Factories\GatorEmitExpressionFactory.cs" />
    <Compile Include="Factories\GatorOpenExpressionFactory.cs" />
    <Compile Include="Factories\GenericEqualityComparerFactory.cs" />
    <Compile Include="Factories\IdentifierExpressionFactory.cs" />
    <Compile Include="Factories\IfExpressionFactory.cs" />
    <Compile Include="Factories\ImplicitArgumentExpressionFactory.cs" />
    <Compile Include="Factories\ImplicitArgumentsExpressionFactory.cs" />
    <Compile Include="Factories\IndexTrackingMutatorFactory.cs" />
    <Compile Include="Factories\LoadLibraryExpressionFactory.cs" />
    <Compile Include="Factories\LoadScriptExpressionFactory.cs" />
    <Compile Include="Factories\LockExpressionFactory.cs" />
    <Compile Include="Factories\MethodOnTypeBuilderInstantiationFactory.cs" />
    <Compile Include="Factories\NullExpressionFactory.cs" />
    <Compile Include="Factories\NumberExpressionFactory.cs" />
    <Compile Include="Factories\ObjectExpressionFactory.cs" />
    <Compile Include="Factories\PartialFunctionExpressionFactory.cs" />
    <Compile Include="Factories\PartialOperatorExpressionFactory.cs" />
    <Compile Include="Factories\PatternExpressionFactory.cs" />
    <Compile Include="Factories\PatternMatchingExpressionFactory.cs" />
    <Compile Include="Factories\StringExpressionFactory.cs" />
    <Compile Include="Factories\SwitchCaseFactory.cs" />
    <Compile Include="Factories\SwitchExpressionFactory.cs" />
    <Compile Include="Factories\TernaryOperatorExpressionFactory.cs" />
    <Compile Include="Factories\TextExpressionFactory.cs" />
    <Compile Include="Factories\TextWriterFactory.cs" />
    <Compile Include="Factories\ThisExpressionFactory.cs" />
    <Compile Include="Factories\TryExpressionFactory.cs" />
    <Compile Include="Factories\UnaryOperatorExpressionFactory.cs" />
    <Compile Include="Factories\UsingExpressionFactory.cs" />
    <Compile Include="Factories\WhileExpressionFactory.cs" />
    <Compile Include="FrameFormatterTest.cs" />
    <Compile Include="InteropMethodResolverTest.cs" />
    <Compile Include="InteropTypeContextExactComparerTest.cs" />
    <Compile Include="InteropTypeResolverTest.cs" />
    <Compile Include="OperatorHelperTest.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Properties\PexAssemblyInfo.cs" />
    <Compile Include="TokenHelperTest.cs" />
    <Compile Include="TokenHelperTest.GetBracesTest.g.cs">
      <DependentUpon>TokenHelperTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TokenHelperTest.GetCodeExcerptTest.g.cs">
      <DependentUpon>TokenHelperTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TokenHelperTest.GetCodeExcerptTest01.g.cs">
      <DependentUpon>TokenHelperTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TokenHelperTest.GetIndexPositionTest.g.cs">
      <DependentUpon>TokenHelperTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TokenHelperTest.GetIndexTest.g.cs">
      <DependentUpon>TokenHelperTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TypeExtenderTest.Constructor.g.cs">
      <DependentUpon>TypeExtenderTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TypeExtenderTest.cs" />
    <Compile Include="TypeExtenderTest.Extend01.g.cs">
      <DependentUpon>TypeExtenderTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TypeExtenderTest.Extend02.g.cs">
      <DependentUpon>TypeExtenderTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TypeExtenderTest.GetCtorName.g.cs">
      <DependentUpon>TypeExtenderTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TypeExtenderTest.GetGenericInteropName.g.cs">
      <DependentUpon>TypeExtenderTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TypeExtenderTest.TryResolve01.g.cs">
      <DependentUpon>TypeExtenderTest.cs</DependentUpon>
    </Compile>
    <Compile Include="TypeExtenderTest.TryResolve02.g.cs">
      <DependentUpon>TypeExtenderTest.cs</DependentUpon>
    </Compile>
    <Compile Include="ValueHelperTest.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <Choose>
    <When Condition="('$(VisualStudioVersion)' == '10.0' or '$(VisualStudioVersion)' == '') and '$(TargetFrameworkVersion)' == 'v3.5'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework, Version=10.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL" />
      </ItemGroup>
    </When>
    <Otherwise />
  </Choose>
  <Choose>
    <When Condition="'$(VisualStudioVersion)' == '10.0' And '$(IsCodedUITest)' == 'True'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.CodedUITestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Common, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Extension, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITesting, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Import Project="$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets" Condition="Exists('$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets')" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\Microsoft.Net.Compilers.3.2.0-beta4-final\build\Microsoft.Net.Compilers.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Microsoft.Net.Compilers.3.2.0-beta4-final\build\Microsoft.Net.Compilers.props'))" />
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>