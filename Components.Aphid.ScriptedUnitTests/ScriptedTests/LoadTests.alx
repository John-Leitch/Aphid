/*nostdheader*/
using System.Linq;
var asm;

@{
    #'Core/Operators';
    asm = AppDomain.CurrentDomain.GetAssemblies() ~? 'Components.Aphid' |> Enumerable.First @.Location;
}();

_n = macro(@(n) { var id('load', n) });
_load = macro(@(n, p, f) {
    _n(n) = @() {
        try ret load p |> f;
        catch (e) ret p
            .Replace('\\', '\\\\')
            .Replace('"', '\\"')
            @format('load "{0}"')
            |> eval
            |> f;
    }
});

_notNull = macro(@(name, path) { _load(name, path, notNull) });
_null = macro(@(name, path) { _load(name, path, isNull) });

#'Testing\\Test';
_notNull(System, System);
_notNull(SystemXml, System.Xml);
_null(SystemBad, SystemBad);
// Todo: enable these once load fallback null ref bug is fixed
//_null(SystemXmlBad, System.XmlBad);
//_null(SystemXmlBad2, System.Xml.Bad);
_notNull(AphidString, asm);
_null(AphidStringMangled, asm.Replace('.', '\\'));
_null(AphidStringTruncated, asm.Remove(asm.Length - 4));
_notNull(Core, System.Core);
// Todo: enable these once load fallback null ref bug is fixed
// _null(AphidMangled, Components.Aphida);
// _null(AphidTruncated, Components.Ap);